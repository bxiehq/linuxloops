#!/bin/bash
if ( ! test -z {,} ); then echo "Must be ran with \"bash\""; exit 1; fi
if [ -z $(which tar) ]; then echo "\"tar\" program needs to be installed first"; exit 1; fi
if [ -z $(which fdisk) ]; then echo "\"fdisk\" program needs to be installed first"; exit 1; fi
if [ $(whoami) != "root" ]; then echo "Please run with this script with sudo"; exit 1; fi

usage()
{
	echo ""
	echo "LinuxLoops: install Linux distros in disk image files."
	echo "Usage: LinuxLoops [-s X] [-z Y] -dist <Linux_distribution_name> -img <disk_image_path>"
	echo "-dist (distro), --distribution (distro)		Linux distribution name"
	echo "-env (desktop), --environment (desktop)		Desktop environment name"
	echo "-img (destination), --imagepath (destination)	Disk image file path / name (e.g. ubuntu.img)"
	echo "-s (disk image size), --size (disk image size)	Total disk image size in GB (minimum 10GB)"
	echo "-z (swap size), --swapsize (swap size)		Size of the swap partition within the disk image in GB"
	echo "-S, --surface					Add patches for Surface products (github.com/linux-surface)"
	echo "-e, --encrypt					Encrypt the data partition"
	echo "-l, --list					List availables distros and desktop environments"
	echo "-h, --help					Display this menu"
}

available_distros="almalinux archlinux artixlinux chromeos-flex debian devuan elementary fedora gentoo-openrc gentoo-systemd kali kde-neon manjaro mint mxlinux nixos opensuse parrot pop-os rockylinux solus tails ubuntu ubuntu-lts voidlinux zorin"
surface_supported="archlinux debian elementary fedora kali kde-neon manjaro mint mxlinux parrot pop-os ubuntu ubuntu-lts zorin"
list_desktops()
{
case "$1" in
	'almalinux')
	available_desktops="none full"
	;;
	'archlinux')
	available_desktops="none budgie cinnamon deepin deepin-full enlightenment gnome gnome-full i3 kde kde-full lxde lxde-full lxqt lxqt-full mate mate-full xfce xfce-full"
	;;
	'artixlinux')
	available_desktops="none budgie cinnamon deepin deepin-full enlightenment gnome gnome-full i3 kde kde-full lxde lxde-full lxqt lxqt-full mate mate-full xfce xfce-full"
	;;
	'chromeos-flex')
	available_desktops="full full-debug"
	;;
	'debian')
	available_desktops="none budgie cinnamon cinnamon-full enlightenment gnome gnome-full kde kde-full lxde lxde-full lxqt lxqt-full mate mate-full xfce xfce-full"
	;;
	'devuan')
	available_desktops="none budgie cinnamon cinnamon-full enlightenment gnome gnome-full kde kde-full lxde lxde-full lxqt lxqt-full mate mate-full xfce xfce-full"
	;;
	'elementary')
	available_desktops="none full"
	;;
	'fedora')
	available_desktops="none cinnamon cinnamon-full gnome gnome-full kde kde-full lxde lxqt mate mate-full xfce xfce-full"
	;;
	'gentoo-openrc')
	available_desktops="none cinnamon enlightenment gnome kde lxqt mate xfce"
	;;
	'gentoo-systemd')
	available_desktops="none cinnamon enlightenment gnome kde lxqt mate xfce"
	;;
	'kali')
	available_desktops="none budgie budgie-full cinnamon cinnamon-full enlightenment enlightenment-full gnome gnome-full i3 i3-full kde kde-full lxde lxde-full mate mate-full xfce xfce-full"
	;;
	'kde-neon')
	available_desktops="none essentials full"
	;;
	'manjaro')
	available_desktops="none budgie cinnamon deepin enlightenment gnome gnome-full kde kde-full lxde lxqt mate mate-full xfce xfce-full"
	;;
	'mint')
	available_desktops="none budgie cinnamon cinnamon-full enlightenment gnome gnome-full kde kde-full lxde lxde-full lxqt lxqt-full mate mate-full xfce xfce-full"
	;;
	'mxlinux')
	available_desktops="none budgie cinnamon cinnamon-full enlightenment gnome gnome-full kde kde-full lxde lxde-full lxqt lxqt-full mate mate-full xfce xfce-full"
	;;
	'nixos')
	available_desktops="none cinnamon-full gnome-full kde-full lxqt-full mate-full pantheon-full xfce-full"
	;;
	'opensuse')
	available_desktops="none budgie budgie-full cinnamon cinnamon-full deepin deepin-full enlightenment enlightenment-full gnome gnome-full kde kde-full lxde lxde-full lxqt lxqt-full mate mate-full xfce xfce-full"
	;;
	'parrot')
	available_desktops="none budgie budgie-full cinnamon cinnamon-full enlightenment enlightenment-full gnome gnome-full i3 i3-full kde kde-full lxde lxde-full mate mate-full xfce xfce-full"
	;;
	'pop-os')
	available_desktops="none full"
	;;
	'rockylinux')
	available_desktops="none full"
	;;
	'solus')
	available_desktops="none budgie gnome gnome-full i3 kde mate"
	;;
	'tails')
	available_desktops="full"
	;;
	'ubuntu')
	available_desktops="none budgie budgie-full cinnamon cinnamon-full enlightenment gnome gnome-full kde kde-full lxde lxde-full lxqt lxqt-full mate mate-full studio-full ubuntu ubuntu-full xfce xfce-full"
	;;
	'ubuntu-lts')
	available_desktops="none budgie budgie-full cinnamon cinnamon-full enlightenment gnome gnome-full kde kde-full lxde lxde-full lxqt lxqt-full mate mate-full studio-full ubuntu ubuntu-full xfce xfce-full"
	;;
	'voidlinux')
	available_desktops="none gnome gnome-full kde kde-full lxde lxqt mate mate-full xfce"
	;;
	'zorin')
	available_desktops="none core lite"
	;;
esac
}

list_all()
{
echo "Here is the list of available distros and desktop environments:"
for distro in $available_distros; do
list_desktops "$distro"
echo "- \"$distro\" -> desktops: $available_desktops"
done
}

check_parameters()
{
if [ -z "$destination" ]; then echo -e "Please provide a destination path for the image with \"-img\" or \"--imagepath\" argument.\n"; exit 1; fi
if [ -z "$distro" ] || [ -z "$(echo $available_distros | sed -e 's@ @\n@g' | grep -x $distro)" ]; then echo -e "Please select a distro from the below list:\n$available_distros.\n"; exit 1; fi
list_desktops "$distro"
if [ ! -z "$desktop" ] && [ -z "$(echo $available_desktops | sed -e 's@ @\n@g' | grep -x $desktop)" ]; then echo -e "$desktop desktop environment is not available, please choose from:\n$available_desktops.\n"; exit 1; fi
if [ "$surface" == "Yes" ] && [ -z "$(echo $surface_supported | sed -e 's@ @\n@g' | grep -x $distro)" ]; then echo -e "Linux Surface patches are currently only supported with:\n$surface_supported.\n"; exit 1; fi
if [ "$distro" == "chromeos-flex" ] || [ "$distro" == "tails" ]; then
	if [ "$encryption" == "Yes" ]; then echo -e "rootfs encryption is not supported with tails but the persistent storage will be encrypted by default.\n"; exit 1; fi
	if [ ! -z "$swap_size" ]; then echo -e "Swap should not be enabled with tails for security reasons.\n"; exit 1; fi
fi
if [ -z "$swap_size" ] || [ "$swap_size" -lt 0 ]; then swap_size=0; fi
}

download_lxc_image()
{
local found=0
available_builds=$(curl -L https://uk.lxd.images.canonical.com/images/"$1"/"$2"/amd64/"$3"/ | grep 'alt="\[DIR]"' | tr '>' '\n' | grep '<a href' | cut -d'/' -f 2 | sort -r)
for build in $available_builds; do
	echo "Trying to download rootfs image from https://uk.lxd.images.canonical.com/images/$1/$2/amd64/$3/$build/rootfs.tar.xz..."
	if curl -L --output /dev/null --silent --head --fail https://uk.lxd.images.canonical.com/images/"$1"/"$2"/amd64/"$3"/"$build"/rootfs.tar.xz; then
		found=1
		curl -L https://uk.lxd.images.canonical.com/images/"$1"/"$2"/amd64/"$3"/"$build"/rootfs.tar.xz -o "$linuxloopsdir"/"$1".tar.xz
		mkdir -p "$linuxloopsdir"/chroot"$4"
		tar xf "$linuxloopsdir"/"$1".tar.xz -C "$linuxloopsdir"/chroot"$4"/
		rm "$linuxloopsdir"/"$1".tar.xz
		break
	else
		echo "Downloading rootfs image from https://uk.lxd.images.canonical.com/images/$1/$2/amd64/$3/$build/rootfs.tar.xz failed."
	fi
done
if [ -z "$found" ]; then
	echo "The rootfs image could not be downloaded, the server might be down. Exiting."
	exit 1
fi
}

write_partition_table()
{
if [ "$distro" != "tails" ]; then
	if [ "$distro" == "chromeos-flex" ]; then
		echo -e "g\nn\n2\n\n+32M\nn\n3\n\n+4G\nn\n4\n\n+32M\nn\n5\n\n+4G\nn\n6\n\n+1K\nn\n7\n\n+1G\nn\n8\n\n+16M\nn\n9\n\n+1K\nn\n10\n\n+1K\nn\n11\n\n+8M\nn\n12\n\n+64M\nn\n1\n\n\nt\n1\n0FC63DAF-8483-4772-8E79-3D69D8477DE4\nt\n2\nFE3A2A5D-4F32-41A7-B725-ACCC3285A309\nt\n3\n3CB8E202-3B7E-47DD-8A3C-7FF2A13CFCEC\nt\n4\nFE3A2A5D-4F32-41A7-B725-ACCC3285A309\nt\n5\n3CB8E202-3B7E-47DD-8A3C-7FF2A13CFCEC\nt\n6\nFE3A2A5D-4F32-41A7-B725-ACCC3285A309\nt\n7\n3CB8E202-3B7E-47DD-8A3C-7FF2A13CFCEC\nt\n8\n0FC63DAF-8483-4772-8E79-3D69D8477DE4\nt\n9\n2E0A753D-9E48-43B0-8337-B15192CB1B5E\nt\n10\n2E0A753D-9E48-43B0-8337-B15192CB1B5E\nt\n11\nCAB6E88E-ABF3-4102-A07A-D4BB9BE3C1D3\nt\n12\nC12A7328-F81F-11D2-BA4B-00A0C93EC93B\nx\nn\n1\nSTATE\nn\n2\nKERN-A\nn\n3\nROOT-A\nn\n4\nKERN-B\nn\n5\nROOT-B\nn\n6\nKERN-C\nn\n7\nROOT-C\nn\n8\nOEM\nn\n9\nreserved\nn\n10\nreserved\nn\n11\nRWFW\nn\n12\nEFI-SYSTEM\nr\nw" | fdisk "$1"
	else
		echo -e "g\nn\n1\n\n+512M\nn\n2\n\n+512M\nn\n3\n\n\nt\n1\nC12A7328-F81F-11D2-BA4B-00A0C93EC93B\nt\n2\n0FC63DAF-8483-4772-8E79-3D69D8477DE4\nt\n3\n0FC63DAF-8483-4772-8E79-3D69D8477DE4\nx\nn\n1\nLL-EFI\nn\n2\nLL-BOOT\nn\n3\nLL-ROOT\nr\nw" | fdisk "$1"
	fi
fi
}

install_efi()
{
cat >"$linuxloopsdir"/chroot/tmp/install_efi <<INSTALLEFI
if [ ! -f /etc/default/grub ]; then
touch /etc/default/grub
echo 'GRUB_TIMEOUT_STYLE=menu' >> /etc/default/grub
echo 'GRUB_DISABLE_OS_PROBER=true' >> /etc/default/grub
echo 'GRUB_ENABLE_BLSCFG=false' >> /etc/default/grub
sed -i '1 i\GRUB_CMDLINE_LINUX_DEFAULT="loglevel=3 quiet splash $bootargs $cmdline_extra"' /etc/default/grub
else
if [ -d /etc/default/grub.d ]; then
sed -i 's/^GRUB_CMDLINE_LINUX_DEFAULT=.*/GRUB_CMDLINE_LINUX_DEFAULT="loglevel=3 quiet splash"/g' /etc/default/grub
echo -e 'GRUB_CMDLINE_LINUX="\$GRUB_CMDLINE_LINUX $bootargs $cmdline_extra"' > /etc/default/grub.d/linuxloops.cfg
else
sed -i 's/^GRUB_CMDLINE_LINUX_DEFAULT=.*/GRUB_CMDLINE_LINUX_DEFAULT="loglevel=3 quiet splash $bootargs $cmdline_extra"/g' /etc/default/grub
fi
sed -i 's/^GRUB_TIMEOUT_STYLE=.*/GRUB_TIMEOUT_STYLE=menu/g' /etc/default/grub
grep -q '^GRUB_DISABLE_OS_PROBER=' /etc/default/grub || echo -e 'GRUB_DISABLE_OS_PROBER=true' >> /etc/default/grub
grep -q '^GRUB_ENABLE_BLSCFG=' /etc/default/grub || echo 'GRUB_ENABLE_BLSCFG=false' >> /etc/default/grub
fi
if [ -d /boot/grub2 ]; then
grub2-mkconfig -o /boot/grub2/grub.cfg
else
grub-install --target=x86_64-efi --efi-directory=/boot/efi --no-nvram --removable
grub-install --target=i386-efi --efi-directory=/boot/efi --no-nvram --removable
mkdir -p /boot/grub
grub-mkconfig -o /boot/grub/grub.cfg
fi
INSTALLEFI
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_efi
}

terminate()
{
for ROOT in $(find /proc/*/root 2>/dev/null)
do
        LINK="$(readlink -f $ROOT)"
        if echo "$LINK" | grep -q "$linuxloopsdir"/chroot
        then
                PID=$(basename $(dirname "$ROOT"))
                kill -9 $PID
        fi
done
sleep 5
}

umount_chroot()
{
terminate
if [ -z "$1" ]; then
	if mountpoint -q "$linuxloopsdir"/chroot/boot/efi; then umount "$linuxloopsdir"/chroot/boot/efi; fi
	if mountpoint -q "$linuxloopsdir"/chroot/boot; then umount "$linuxloopsdir"/chroot/boot; fi
else
	if mountpoint -q "$linuxloopsdir"/chroot"$1"/mnt/boot/efi; then umount "$linuxloopsdir"/chroot"$1"/mnt/boot/efi; fi
	if mountpoint -q "$linuxloopsdir"/chroot"$1"/mnt/boot; then umount "$linuxloopsdir"/chroot"$1"/mnt/boot; fi
fi
if mountpoint -q "$linuxloopsdir"/chroot"$1"/tmp; then umount "$linuxloopsdir"/chroot"$1"/tmp; fi
if mountpoint -q "$linuxloopsdir"/chroot"$1"/run; then umount "$linuxloopsdir"/chroot"$1"/run; fi
if mountpoint -q "$linuxloopsdir"/chroot"$1"/dev/shm; then umount "$linuxloopsdir"/chroot"$1"/dev/shm; fi
if mountpoint -q "$linuxloopsdir"/chroot"$1"/dev/pts; then umount "$linuxloopsdir"/chroot"$1"/dev/pts; fi
if mountpoint -q "$linuxloopsdir"/chroot"$1"/dev; then umount "$linuxloopsdir"/chroot"$1"/dev; fi
if mountpoint -q "$linuxloopsdir"/chroot"$1"/sys; then umount "$linuxloopsdir"/chroot"$1"/sys; fi
if mountpoint -q "$linuxloopsdir"/chroot"$1"/proc; then umount "$linuxloopsdir"/chroot"$1"/proc; fi
}

mount_chroot()
{
mkdir -p "$linuxloopsdir"/chroot"$1"/dev/pts "$linuxloopsdir"/chroot"$1"/dev/shm "$linuxloopsdir"/chroot"$1"/etc "$linuxloopsdir"/chroot"$1"/proc "$linuxloopsdir"/chroot"$1"/sys "$linuxloopsdir"/chroot"$1"/tmp
chmod 1777 "$linuxloopsdir"/chroot"$1"/tmp
mount -t proc none "$linuxloopsdir"/chroot"$1"/proc
mount -t sysfs none "$linuxloopsdir"/chroot"$1"/sys
mount -t devtmpfs none "$linuxloopsdir"/chroot"$1"/dev
mount -t devpts none "$linuxloopsdir"/chroot"$1"/dev/pts
mount -t tmpfs -o mode=1777,nosuid,nodev,strictatime none "$linuxloopsdir"/chroot"$1"/dev/shm
mount -t tmpfs none "$linuxloopsdir"/chroot"$1"/run
mount -t tmpfs none "$linuxloopsdir"/chroot"$1"/tmp
if [ "$distro" == "chromeos-flex" ] || [ "$distro" == "tails" ]; then return; fi
if [ -z "$1" ]; then
	mkdir -p "$linuxloopsdir"/chroot/boot
	mount "$destination_loop"p2 "$linuxloopsdir"/chroot/boot
	mkdir -p "$linuxloopsdir"/chroot/boot/efi
	mount "$destination_loop"p1 "$linuxloopsdir"/chroot/boot/efi
else
	mkdir -p "$linuxloopsdir"/chroot"$1"/mnt/boot
	mount "$destination_loop"p2 "$linuxloopsdir"/chroot"$1"/mnt/boot
	mkdir -p "$linuxloopsdir"/chroot"$1"/mnt/boot/efi
	mount "$destination_loop"p1 "$linuxloopsdir"/chroot"$1"/mnt/boot/efi
fi
}

add_linuxloops_pre()
{
touch "$linuxloopsdir"/chroot"$1"/tmp/install_initramfs
cat >>"$linuxloopsdir"/chroot"$1"/tmp/install_initramfs <<'INITSCRIPT'
#!/bin/sh
export PATH=/sbin:/bin:/usr/sbin:/usr/bin

mkdir -p /dev /proc /sys /run
mount -n -t devtmpfs devtmpfs /dev
mount -n -t proc     proc     /proc
mount -n -t sysfs    sysfs    /sys
mount -n -t tmpfs    tmpfs    /run

echo "linuxloops: boot sequence started." > /dev/kmsg
echo "linuxloops: img_uuid=$img_uuid" > /dev/kmsg
echo "linuxloops: img_path=$img_path" > /dev/kmsg

INITSCRIPT
}

add_linuxloops_recovery()
{
touch "$linuxloopsdir"/chroot"$1"/tmp/install_initramfs
cat >>"$linuxloopsdir"/chroot"$1"/tmp/install_initramfs <<'INITSCRIPT'
recovery_shell()
{
	printk_levels="$(cat /proc/sys/kernel/printk)"
	echo 0 0 0 0 > /proc/sys/kernel/printk
	#printf "\033c"
	echo -e "\n\nYou are in the recovery shell, you can notably use the included tools to obtain data on your partitions ("blkid" or "lsblk") or to perform an fscheck ("e2fsck" or "ntfsfix").\nOnce you are done with your modifications, type \"exit\" to reboot the computer.\n\n"
	sh
	reboot -f
}

INITSCRIPT
}

add_linuxloops_udev_start()
{
touch "$linuxloopsdir"/chroot"$1"/tmp/install_initramfs
cat >>"$linuxloopsdir"/chroot"$1"/tmp/install_initramfs <<'INITSCRIPT'
if [ -z "$img_uuid" ] || [ -z "$img_path" ]; then echo "linuxloops: invalid GRUB configuration." > /dev/kmsg; recovery_shell; fi

if [ -x /sbin/udevd ]; then
	UDEVD=/sbin/udevd
	UDEVD_BIN="udevd"
elif [ -x /lib/udev/udevd ]; then
	UDEVD=/lib/udev/udevd
	UDEVD_BIN="udevd"
elif [ -x /lib/systemd/systemd-udevd ]; then
	UDEVD=/lib/systemd/systemd-udevd
	UDEVD_BIN="systemd-udevd"
elif [ -x /usr/lib/systemd/systemd-udevd ]; then
	UDEVD=/usr/lib/systemd/systemd-udevd
	UDEVD_BIN="systemd-udevd"
elif [ -x /usr/lib64/systemd/systemd-udevd ]; then
	UDEVD=/usr/lib64/systemd/systemd-udevd
	UDEVD_BIN="systemd-udevd"
else
	echo "linuxloops: Cannot find udevd nor systemd-udevd." > /dev/kmsg
	recovery_shell
fi

$UDEVD --daemon --resolve-names=never >/linuxloops_udev.log 2>&1
udevadm trigger --action=add --type=subsystems
udevadm trigger --action=add --type=devices
udevadm settle

INITSCRIPT
}

add_linuxloops_main()
{
touch "$linuxloopsdir"/chroot"$1"/tmp/install_initramfs
cat >>"$linuxloopsdir"/chroot"$1"/tmp/install_initramfs <<'INITSCRIPT'
if [ ! -b /dev/disk/by-partuuid/"$img_uuid" ]; then echo "linuxloops: Boot partition was not found." > /dev/kmsg; recovery_shell; fi

mkdir /linuxloops_root || { echo "linuxloops: Root directory cannot be created." > /dev/kmsg; recovery_shell; }

if [ ! -z "$linuxloops_debug" ]; then recovery_shell; fi

fstype=$(blkid -s TYPE -o value /dev/disk/by-partuuid/"$img_uuid")
if [ "$fstype" = "ntfs" ]; then
	ntfs-3g /dev/disk/by-partuuid/"$img_uuid" /linuxloops_root || { echo "linuxloops: The boot partition could not be mounted." > /dev/kmsg; recovery_shell; }
else
	mount -n -t "$fstype" /dev/disk/by-partuuid/"$img_uuid" /linuxloops_root || { echo "linuxloops: The boot partition could not be mounted." > /dev/kmsg; recovery_shell; }
fi

if [ -f /linuxloops_root/"$img_path" ]; then
	modprobe loop || { echo "linuxloops: Loop module is not available." > /dev/kmsg; recovery_shell; }
	if [ ! -b /dev/loop0 ]; then mknod -m 660 /dev/loop0 b 7 0 || { echo "linuxloops: The loop device could not be created." > /dev/kmsg; recovery_shell; }; fi
	losetup -P /dev/loop0 /linuxloops_root"$img_path" || { echo "linuxloops: The loop device could not be configured." > /dev/kmsg; recovery_shell; }
else
	echo "linuxloops: The rootfs image file was not found, it might be due to an incorrect GRUB config or unsupported configuration." > /dev/kmsg
	recovery_shell
fi

udevadm trigger --action=add --type=subsystems
udevadm trigger --action=add --type=devices
udevadm settle
INITSCRIPT
}

add_linuxloops_udev_end()
{
touch "$linuxloopsdir"/chroot"$1"/tmp/install_initramfs
cat >>"$linuxloopsdir"/chroot"$1"/tmp/install_initramfs <<'INITSCRIPT'
udevadm control --exit
udevadm info --cleanup-db

timer=0
while ps | grep -q '[u]devd'; do
	echo "linuxloops: udevd is not yet killed, sleeping 1s" > /dev/kmsg
	if [ $timer -eq 3 ]; then echo "linuxloops: udevd could not be killed, continuing anyway..." > /dev/kmsg; break; fi
	sleep 1
	timer=$((timer+1))
done

INITSCRIPT
}

add_linuxloops_post()
{
touch "$linuxloopsdir"/chroot"$1"/tmp/install_initramfs
cat >>"$linuxloopsdir"/chroot"$1"/tmp/install_initramfs <<'INITSCRIPT'
if [ -z "$linuxloops_init" ]; then
	if [ -x /init ]; then
		linuxloops_init="/init"
	elif [ -x /sbin/init ]; then
		linuxloops_init="/sbin/init"
	else
		echo "linuxloops: No init system found." > /dev/kmsg
		recovery_shell
	fi
fi

echo "linuxloops: boot sequence finished." > /dev/kmsg

umount /run
umount /sys
umount /proc
umount /dev

#sh

exec "$linuxloops_init"
INITSCRIPT
}

install_initcpio()
{
if [ "$encryption" == "Yes" ]; then
bootargs="\\\\\$linuxloops_args cryptdevice=UUID=$(blkid -s UUID -o value "$destination_loop"p3):luks-$(blkid -s UUID -o value "$destination_loop"p3) rd.luks.uuid=$(blkid -s UUID -o value "$destination_loop"p3)"
else
bootargs="\\\\\$linuxloops_args"
fi
cat >"$linuxloopsdir"/chroot"$1"/tmp/install_initramfs <<INITCPIOSTART
if [ "$encryption" == "Yes" ]; then
sed -i 's@HOOKS=(base udev@HOOKS=(base udev linuxloops encrypt@g' /etc/mkinitcpio.conf
else
sed -i 's@HOOKS=(base udev@HOOKS=(base udev linuxloops@g' /etc/mkinitcpio.conf
fi
cat >/etc/initcpio/install/linuxloops <<'INSTALLHOOK'
#!/bin/bash

build() {
	add_module "8250_dw"
	add_module "aes"
	add_module "atkbd"
	add_module "cbc"
	add_module "dm_crypt"
	add_module "exfat"
	add_module "fuse"
	add_module "i8042"
	add_module "intel_lpss"
	add_module "intel_lpss_pci"
	add_module "loop"
	add_module "ntfs3"
	add_module "nvme"
	add_module "pinctrl_amd"
	add_module "quota_v1"
	add_module "quota_v2"
	add_module "serio"
	add_module "sha256"
	add_module "surface_aggregator"
	add_module "surface_aggregator_registry"
	add_module "surface_hid"
	add_module "surface_hid_core"
	add_module "usbhid"
	add_module "xhci_pci"
	add_module "amdgpu"
	add_module "i915"
	add_module "nouveau"
	add_module "radeon"

	add_binary "bash"
	add_binary "blkid"
	add_binary "cryptsetup"
	add_binary "cut"
	add_binary "e2fsck"
	add_binary "find"
	add_binary "grep"
	add_binary "losetup"
	add_binary "lsblk"
	add_binary "ntfs-3g"
	add_binary "ntfsfix"
	add_binary "ps"
	add_binary "setsid"
	add_binary "swapon"

	cp "/usr/lib/linuxloops/linuxloops" "\$BUILDROOT/linuxloops"
}

help() {
    cat <<HELPEOF
Installs the linuxloops hook.
HELPEOF
}
INSTALLHOOK
chmod 0755 /etc/initcpio/install/linuxloops
mkdir -p /usr/lib/linuxloops
cat >/usr/lib/linuxloops/linuxloops <<'LINUXLOOPSBINARY'
INITCPIOSTART
add_linuxloops_pre "$1"
add_linuxloops_recovery "$1"
add_linuxloops_udev_start "$1"
add_linuxloops_main "$1"
add_linuxloops_udev_end "$1"
add_linuxloops_post "$1"
echo -e "LINUXLOOPSBINARY" >> "$linuxloopsdir"/chroot"$1"/tmp/install_initramfs
echo -e "chmod 0755 /usr/lib/linuxloops/linuxloops" >> "$linuxloopsdir"/chroot"$1"/tmp/install_initramfs
echo -e "mkinitcpio -P" >> "$linuxloopsdir"/chroot"$1"/tmp/install_initramfs
chmod 0755 "$linuxloopsdir"/chroot"$1"/tmp/install_initramfs
}

install_initramfstools()
{
if [ "$encryption" == "Yes" ]; then
bootargs="\\\\\$linuxloops_args cryptopts=target=luks-$(blkid -s UUID -o value "$destination_loop"p3),source=/dev/disk/by-uuid/$(blkid -s UUID -o value "$destination_loop"p3),luks"
else
bootargs="\\\\\$linuxloops_args"
fi
cat >"$linuxloopsdir"/chroot"$1"/tmp/install_initramfs <<INITRAMFSTOOLSSTART
cat >/etc/initramfs-tools/hooks/linuxloops <<'INSTALLHOOK'
#!/bin/bash
PREREQ=""
prereqs()
{
   echo "\$PREREQ"
}

case \$1 in
prereqs)
   prereqs
   exit 0
   ;;
esac

. /usr/share/initramfs-tools/hook-functions
# Begin real processing below this line

	rm -f "\$DESTDIR/bin/losetup" "\$DESTDIR/sbin/losetup"

	manual_add_modules "8250_dw"
	manual_add_modules "aes"
	manual_add_modules "atkbd"
	manual_add_modules "cbc"
	manual_add_modules "dm-crypt"
	manual_add_modules "exfat"
	manual_add_modules "fuse"
	manual_add_modules "i8042"
	manual_add_modules "intel_lpss"
	manual_add_modules "intel_lpss_pci"
	manual_add_modules "loop"
	manual_add_modules "ntfs3"
	manual_add_modules "nvme"
	manual_add_modules "pinctrl_amd"
	manual_add_modules "quota_v1"
	manual_add_modules "quota_v2"
	manual_add_modules "serio"
	manual_add_modules "sha256"
	manual_add_modules "surface_aggregator"
	manual_add_modules "surface_aggregator_registry"
	manual_add_modules "surface_hid"
	manual_add_modules "surface_hid_core"
	manual_add_modules "usbhid"
	manual_add_modules "xhci_pci"
	manual_add_modules "amdgpu"
	manual_add_modules "i915"
	manual_add_modules "nouveau"
	manual_add_modules "radeon"

	copy_exec "\$(command -v bash)"
	copy_exec "\$(command -v blkid)"
	copy_exec "\$(command -v cryptsetup)"
	copy_exec "\$(command -v cut)"
	copy_exec "\$(command -v e2fsck)"
	copy_exec "\$(command -v find)"
	copy_exec "\$(command -v grep)"
	copy_exec "\$(command -v losetup)"
	copy_exec "\$(command -v lsblk)"
	copy_exec "\$(command -v ntfs-3g)"
	copy_exec "\$(command -v ntfsfix)"
	copy_exec "\$(command -v ps)"
	copy_exec "\$(command -v setsid)"
	copy_exec "\$(command -v swapon)"

	cp "/usr/lib/linuxloops/linuxloops" "\$DESTDIR/linuxloops"
INSTALLHOOK
chmod 0755 /etc/initramfs-tools/hooks/linuxloops
mkdir -p /usr/lib/linuxloops
cat >/usr/lib/linuxloops/linuxloops <<'LINUXLOOPSBINARY'
INITRAMFSTOOLSSTART
add_linuxloops_pre "$1"
add_linuxloops_recovery "$1"
add_linuxloops_udev_start "$1"
add_linuxloops_main "$1"
add_linuxloops_udev_end "$1"
add_linuxloops_post "$1"
echo -e "LINUXLOOPSBINARY" >> "$linuxloopsdir"/chroot"$1"/tmp/install_initramfs
echo -e "chmod 0755 /usr/lib/linuxloops/linuxloops" >> "$linuxloopsdir"/chroot"$1"/tmp/install_initramfs
echo -e "update-initramfs -u -k all" >> "$linuxloopsdir"/chroot"$1"/tmp/install_initramfs
chmod 0755 "$linuxloopsdir"/chroot"$1"/tmp/install_initramfs
}

install_dracut()
{
if [ "$encryption" == "Yes" ]; then
bootargs="\\\\\$linuxloops_args rd.luks.uuid=$(blkid -s UUID -o value "$destination_loop"p3)"
else
bootargs="\\\\\$linuxloops_args"
fi
cat >"$linuxloopsdir"/chroot"$1"/tmp/install_initramfs <<INITDRACUTSTART
mkdir /usr/lib/dracut/modules.d/99linuxloops
cat >/usr/lib/dracut/modules.d/99linuxloops/module-setup.sh <<'INSTALLHOOK'
#!/bin/bash

check() {
	return 0
}

installkernel() {
	instmods "8250_dw"
	instmods "aes"
	instmods "atkbd"
	instmods "cbc"
	instmods "dm-crypt"
	instmods "exfat"
	instmods "fuse"
	instmods "i8042"
	instmods "intel_lpss"
	instmods "intel_lpss_pci"
	instmods "loop"
	instmods "ntfs3"
	instmods "nvme"
	instmods "pinctrl_amd"
	instmods "quota_v1"
	instmods "quota_v2"
	instmods "serio"
	instmods "sha256"
	instmods "surface_aggregator"
	instmods "surface_aggregator_registry"
	instmods "surface_hid"
	instmods "surface_hid_core"
	instmods "usbhid"
	instmods "xhci_pci"
	instmods "amdgpu"
	instmods "i915"
	instmods "nouveau"
	instmods "radeon"
}

install() {
	inst "\$(command -v bash)" "/usr/bin/bash"
	inst "\$(command -v blkid)" "/usr/sbin/blkid"
	inst "\$(command -v cryptsetup)" "/usr/sbin/cryptsetup"
	inst "\$(command -v cut)" "/usr/sbin/cut"
	inst "\$(command -v e2fsck)" "/usr/sbin/e2fsck"
	inst "\$(command -v find)" "/usr/bin/find"
	inst "\$(command -v grep)" "/usr/sbin/grep"
	inst "\$(command -v losetup)" "/usr/sbin/losetup"
	inst "\$(command -v lsblk)" "/usr/sbin/lsblk"
	inst "\$(command -v ntfs-3g)" "/usr/sbin/ntfs-3g"
	inst "\$(command -v ntfsfix)" "/usr/sbin/ntfsfix"
	inst "\$(command -v ps)" "/usr/bin/ps"
	inst "\$(command -v setsid)" "/usr/sbin/setsid"
	inst "\$(command -v swapon)" "/usr/sbin/swapon"

	cp "/usr/lib/linuxloops/linuxloops" "\${initdir}/linuxloops"
}
INSTALLHOOK
chmod 0755 /usr/lib/dracut/modules.d/99linuxloops/module-setup.sh
mkdir -p /usr/lib/linuxloops
cat >/usr/lib/linuxloops/linuxloops <<'LINUXLOOPSBINARY'
INITDRACUTSTART
add_linuxloops_pre "$1"
add_linuxloops_recovery "$1"
add_linuxloops_udev_start "$1"
add_linuxloops_main "$1"
add_linuxloops_udev_end "$1"
add_linuxloops_post "$1"
echo -e "LINUXLOOPSBINARY" >> "$linuxloopsdir"/chroot"$1"/tmp/install_initramfs
echo -e "chmod 0755 /usr/lib/linuxloops/linuxloops" >> "$linuxloopsdir"/chroot"$1"/tmp/install_initramfs
echo -e "dracut --no-hostonly --regenerate-all --force" >> "$linuxloopsdir"/chroot"$1"/tmp/install_initramfs
chmod 0755 "$linuxloopsdir"/chroot"$1"/tmp/install_initramfs
}

install_nixos_config ()
{
add_linuxloops_recovery /installroot
add_linuxloops_main /installroot
mkdir -p "$linuxloopsdir"/chroot/installroot/mnt/etc/nixos
cat >"$linuxloopsdir"/chroot/installroot/mnt/etc/nixos/configuration.nix <<NIXOSCONFIGURATION
# Edit this configuration file to define what should be installed on
# your system.  Help is available in the configuration.nix(5) man page
# and in the NixOS manual (accessible by running ‘nixos-help’).

{ config, pkgs, ... }:

{
imports = [ ./linuxloops.nix ];

users.users.$username = {
isNormalUser = true;
extraGroups = [ "wheel" "networkmanager" ];
};

hardware.cpu.intel.updateMicrocode = true;
hardware.cpu.amd.updateMicrocode = true;
hardware.enableAllFirmware = true;
boot.kernelPackages = pkgs.linuxPackages_latest;

networking.hostName = "nixos-linuxloops";
networking.networkmanager.enable = true;

hardware.bluetooth.enable = true;
hardware.bluetooth.hsphfpd.enable = true;
hardware.pulseaudio.enable = false;
security.rtkit.enable = true;
services.pipewire = {
  enable = true;
  alsa.enable = true;
  alsa.support32Bit = true;
  pulse.enable = true;
};

services.avahi.enable = true;
services.avahi.nssmdns = true;
services.logrotate.checkConfig = false;
services.printing.enable = true;

boot.plymouth.enable = true;

$nixos_desktop

$(cat "$linuxloopsdir"/chroot/installroot/tmp/install_desktop 2>/dev/null)

$(cat "$linuxloopsdir"/chroot/installroot/tmp/install_custom 2>/dev/null)

nixpkgs.config.allowUnfree = true;

# This value determines the NixOS release from which the default
# settings for stateful data, like file locations and database versions
# on your system were taken. It‘s perfectly fine and recommended to leave
# this value at the release version of the first install of this system.
# Before changing this value read the documentation for this option
# (e.g. man configuration.nix or on https://nixos.org/nixos/options.html).
system.stateVersion = "22.05"; # Did you read the comment?
}
NIXOSCONFIGURATION
if [ "$encryption" == "Yes" ]; then
fstab="
boot.initrd.luks.devices = {
	luks-$(blkid -s UUID -o value "$destination_loop"p3) = {
		device = \"/dev/disk/by-uuid/$(blkid -s UUID -o value "$destination_loop"p3)\";
	};
};

fileSystems.\"/\" = {
	device = \"/dev/disk/by-uuid/$(blkid -s UUID -o value /dev/mapper/luks-$(blkid -s UUID -o value "$destination_loop"p3))\";
	fsType = \"ext4\";
};
"
else
fstab="
fileSystems.\"/\" = {
	device = \"/dev/disk/by-uuid/$(blkid -s UUID -o value "$destination_loop"p3)\";
	fsType = \"ext4\";
};
"
fi
fstab="$fstab

fileSystems.\"/boot\" = {
	device = \"/dev/disk/by-uuid/$(blkid -s UUID -o value "$destination_loop"p2)\";
	fsType = \"ext4\";
};

fileSystems.\"/boot/efi\" = {
	device = \"/dev/disk/by-uuid/$(blkid -s UUID -o value "$destination_loop"p1)\";
	fsType = \"vfat\";
};
"
if [ "$swap_size" -ne 0 ]; then
fstab="$fstab

swapDevices =
[ {
	device = \"/swap\";
	size = $swap_size * 1024;
  }
];
"
fi
cat >"$linuxloopsdir"/chroot/installroot/mnt/etc/nixos/linuxloops.nix <<NIXOSLINUXLOOPS
# Do not modify this file which contains the linuxloops configuration.
# Please make changes to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
$fstab

boot.kernelParams = [ "\\\$linuxloops_args" ];

boot.loader = {
	efi = {
		canTouchEfiVariables = false;
		efiSysMountPoint = "/boot/efi";
	};
	grub = {
		device = "nodev";
		efiInstallAsRemovable = true;
		efiSupport = true;
		enable = true;
		fsIdentifier = "uuid";
		useOSProber = false;
		version = 2;
	};
};

boot.initrd.availableKernelModules = [ "8250_dw" "aes" "atkbd" "cbc" "dm_crypt" "encrypted_keys" "exfat" "fuse" "i8042" "intel_lpss" "intel_lpss_pci" "loop" "ntfs3" "nvme" "pinctrl_amd" "quota_v1" "quota_v2" "serio" "sha256" "surface_aggregator" "surface_aggregator_registry" "surface_hid" "surface_hid_core" "usbhid" "xhci_pci" "amdgpu" "i915" "nouveau" "radeon" ];
boot.initrd.compressor="gzip";
boot.initrd.extraUtilsCommands = ''
copy_bin_and_libs "\${pkgs.bash}/bin/bash"
copy_bin_and_libs "\${pkgs.util-linux}/bin/blkid"
copy_bin_and_libs "\${pkgs.coreutils}/bin/coreutils"
copy_bin_and_libs "\${pkgs.cryptsetup}/bin/cryptsetup"
copy_bin_and_libs "\${pkgs.coreutils}/bin/cut"
copy_bin_and_libs "\${pkgs.e2fsprogs}/bin/e2fsck"
copy_bin_and_libs "\${pkgs.gnugrep}/bin/grep"
copy_bin_and_libs "\${pkgs.util-linux}/bin/losetup"
copy_bin_and_libs "\${pkgs.util-linux}/bin/lsblk"
copy_bin_and_libs "\${pkgs.ntfs3g}/bin/ntfs-3g"
copy_bin_and_libs "\${pkgs.ntfs3g}/bin/ntfsfix"
copy_bin_and_libs "\${pkgs.util-linux}/bin/setsid"
copy_bin_and_libs "\${pkgs.util-linux}/bin/swapon"
'';

boot.initrd.preLVMCommands = ''
$(cat "$linuxloopsdir"/chroot/installroot/tmp/install_initramfs)
'';
}
NIXOSLINUXLOOPS
}

install_iso_init ()
{
add_linuxloops_pre "$1"
add_linuxloops_recovery "$1"
add_linuxloops_udev_start "$1"
add_linuxloops_main "$1"
add_linuxloops_udev_end "$1"
add_linuxloops_post "$1"
}

install_surface_pacman()
{
cat >"$linuxloopsdir"/chroot/tmp/install_surface <<SURFACEPACMAN
curl -s https://raw.githubusercontent.com/linux-surface/linux-surface/master/pkg/keys/surface.asc | pacman-key --add -
pacman-key --finger 56C464BAAC421453
pacman-key --lsign-key 56C464BAAC421453
cat >>/etc/pacman.conf <<'SURFACEREPO'
[linux-surface]
Server = https://pkg.surfacelinux.com/arch/
SURFACEREPO
pacman -Syu
pacman -R --noconfirm $1
pacman -S --noconfirm linux-surface linux-surface-headers iptsd base-devel git fakeroot meson python-pytest python-libevdev python-pyudev libc++ gst-plugins-base-libs python-yaml python-ply python-jinja gstreamer qt5-tools libevent clang v4l2loopback-dkms
systemctl enable iptsd.service
git clone https://aur.archlinux.org/libwacom-surface.git /tmp/libwacom-surface
chown -R '$username':'$username' /tmp/libwacom-surface
echo '$userpass' | su - '$username' -c "gpg --keyserver hkps://keyserver.ubuntu.com --recv-key E23B7E70B467F0BF"
echo '$userpass' | su - '$username' -c "cd /tmp/libwacom-surface && makepkg -s"
yes | pacman -U /tmp/libwacom-surface/*.pkg.tar.*
git clone https://git.libcamera.org/libcamera/libcamera.git /tmp/libcamera
cd /tmp/libcamera
meson build -Dpipelines=uvcvideo,ipu3 -Dprefix=/usr -Dgstreamer=enabled -Dv4l2=true
ninja -C build
ninja -C build install
cd /
usermod -aG video '$username'
SURFACEPACMAN
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_surface
}

install_surface_apt()
{
cat >"$linuxloopsdir"/chroot/tmp/install_surface <<SURFACEAPT
if [ "\$(grep -o 'UBUNTU_CODENAME=[^ ,]\+' /etc/os-release | cut -d'=' -f2)" == "focal" ]; then
add-apt-repository ppa:tj/bugfixes -y
yes | DEBIAN_FRONTEND=noninteractive apt update
yes | DEBIAN_FRONTEND=noninteractive apt install apt apt-utils python3-pip
pip3 install meson
fi
curl https://raw.githubusercontent.com/linux-surface/linux-surface/master/pkg/keys/surface.asc | gpg --dearmor | dd of=/etc/apt/trusted.gpg.d/linux-surface.gpg
echo "deb [arch=amd64] https://pkg.surfacelinux.com/debian release main" > /etc/apt/sources.list.d/linux-surface.list
apt update
yes | DEBIAN_FRONTEND=noninteractive apt purge $1
yes | DEBIAN_FRONTEND=noninteractive apt install linux-image-surface linux-headers-surface iptsd libwacom-surface surface-control surface-dtx-daemon git build-essential meson ninja-build pkg-config libgnutls28-dev openssl python3-pip python3-yaml python3-ply python3-jinja2 qtbase5-dev libqt5core5a libqt5gui5 libqt5widgets5 qttools5-dev-tools libtiff-dev libevent-dev gstreamer1.0-tools libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev v4l2loopback-dkms
systemctl enable iptsd.service
git clone https://git.libcamera.org/libcamera/libcamera.git /tmp/libcamera
cd /tmp/libcamera
meson build -Dpipelines=uvcvideo,ipu3 -Dprefix=/usr -Dgstreamer=enabled -Dv4l2=true
ninja -C build
ninja -C build install
cd /
usermod -aG video '$username'
SURFACEAPT
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_surface
}

install_surface_dnf()
{
cat >"$linuxloopsdir"/chroot/tmp/install_surface <<SURFACEDNF
dnf config-manager --add-repo=https://pkg.surfacelinux.com/fedora/linux-surface.repo
yes | dnf remove $1
dnf update
yes | dnf install -y --allowerasing kernel-surface kernel-surface-devel iptsd libwacom-surface surface-control surface-dtx-daemon
yes | dnf install git make automake gcc gcc-c++ kernel-devel libatomic dkms meson ninja-build pkg-config gnutls-devel openssl python3-pip python3-yaml python3-ply python3-jinja2 qt5-qtbase-devel libtiff-devel libevent-devel gstreamer1-devel gstreamer1-plugins-base-devel
curl -L https://github.com/umlaeute/v4l2loopback/archive/v0.12.5.tar.gz | tar xvz -C /usr/src
dkms add -m v4l2loopback -v 0.12.5
ls /usr/lib/modules/*/vmlinuz | sed 's@/usr/lib/modules/@@g' | sed 's@/vmlinuz@@g' | xargs -n1 /usr/lib/dkms/dkms_autoinstaller start
git clone https://git.libcamera.org/libcamera/libcamera.git /tmp/libcamera
cd /tmp/libcamera
meson build -Dpipelines=uvcvideo,ipu3 -Dprefix=/usr -Dgstreamer=enabled -Dv4l2=true
ninja -C build
ninja -C build install
cd /
usermod -aG video '$username'
SURFACEDNF
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_surface
}

cleanup_container()
{
cat >"$linuxloopsdir"/chroot"$1"/tmp/cleanup_container <<CLEANCONTAINER
rm -rf /etc/cron* /etc/netplan /etc/network /etc/NetworkManager /etc/rc* /etc/runit /etc/systemd /etc/udev/hwdb.d /etc/udev/rules.d
if [ "$desktop" == "enlightenment" ] || [ "$desktop" == "enlightenment-full" ]; then
	ln -sf /run/connman/resolv.conf /etc/resolv.conf
	mkdir -p /run/connman
else
	(if [ -L /etc/resolv.conf ]; then cd /etc && mkdir -p \$(dirname \$(readlink resolv.conf)); elif [ ! -z "\$(command -v systemctl)" ]; then mkdir -p /run/systemd/resolve; ln -sf /run/systemd/resolve/stub-resolv.conf /etc/resolv.conf; fi)
fi
echo "nameserver 1.1.1.1" > /etc/resolv.conf
mkdir -p /etc/network
echo -e "auto lo\niface lo inet loopback" > /etc/network/interfaces
echo "$distro-$RANDOM" > /etc/hostname
echo -e "127.0.0.1 localhost\n127.0.1.1 \$(cat /etc/hostname)\n\n::1 ip6-localhost ip6-loopback\nfe00::0 ip6-localnet\nff00::0 ip6-mcastprefix\nff02::1 ip6-allnodes\nff02::2 ip6-allrouters\nff02::3 ip6-allhosts" > /etc/hosts
CLEANCONTAINER
chmod 0755 "$linuxloopsdir"/chroot"$1"/tmp/cleanup_container
}

set_locale()
{
cat >"$linuxloopsdir"/chroot"$1"/tmp/set_locale <<SETLOCALE
if [ ! -f /etc/locale.gen ]; then echo "en_US.UTF-8 UTF-8" > /etc/locale.gen; else sed -i 's@#en_US.UTF-8 UTF-8@en_US.UTF-8 UTF-8@g' /etc/locale.gen; fi
localedef -i en_US -f UTF-8 en_US.UTF-8
echo "LANG=en_US.UTF-8" > /etc/locale.conf
echo "KEYMAP=us" > /etc/vconsole.conf
SETLOCALE
chmod 0755 "$linuxloopsdir"/chroot"$1"/tmp/set_locale
}

generate_fstab()
{
cat >"$linuxloopsdir"/chroot"$1"/tmp/generate_fstab <<GENERATEFSTAB
touch /etc/fstab
chmod 0644 /etc/fstab
if [ "$encryption" == "Yes" ]; then
	echo -e '/dev/disk/by-uuid/$(blkid -s UUID -o value /dev/mapper/luks-$(blkid -s UUID -o value "$destination_loop"p3)) / ext4 errors=remount-ro 0 1' >> /etc/fstab
	else
	echo -e '/dev/disk/by-uuid/$(blkid -s UUID -o value "$destination_loop"p3) / ext4 errors=remount-ro 0 1' >> /etc/fstab
fi
if [ "$distro" == "solus" ]; then
	echo -e '/dev/disk/by-uuid/$(blkid -s UUID -o value "$destination_loop"p1) /boot vfat defaults 0 2' >> /etc/fstab
else
	echo -e '/dev/disk/by-uuid/$(blkid -s UUID -o value "$destination_loop"p2) /boot ext4 defaults 0 2' >> /etc/fstab
	echo -e '/dev/disk/by-uuid/$(blkid -s UUID -o value "$destination_loop"p1) /boot/efi vfat defaults 0 2' >> /etc/fstab
fi
if [ "$swap_size" -ne 0 ]; then echo -e '/swap none swap sw 0 0' >> /etc/fstab; fi
GENERATEFSTAB
chmod 0755 "$linuxloopsdir"/chroot"$1"/tmp/generate_fstab
}

cleanup()
{
cat >"$linuxloopsdir"/chroot"$1"/tmp/cleanup <<CLEANUP
if [ ! -L /etc/resolv.conf ]; then echo '' > /etc/resolv.conf; fi
rm -f /usr/share/xsessions/lightdm-xsession.desktop
if [ -z "$1" ]; then
rm -rf "\$(sudo -Hu '$username' env 2>/dev/null | grep 'HOME=' | cut -d'=' -f2)/{*,.*}" > /dev/null 2>&1
sudo -Hu '$username' cp -rT /etc/skel/ "\$(sudo -Hu '$username' env 2>/dev/null | grep 'HOME=' | cut -d'=' -f2)" > /dev/null 2>&1
fi
CLEANUP
chmod 0755 "$linuxloopsdir"/chroot"$1"/tmp/cleanup
}

chroot_almalinux()
{
download_lxc_image almalinux 9 default

mount_chroot

cat >"$linuxloopsdir"/chroot/tmp/init <<'ALMALINUXINIT'
#!/bin/bash
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib
/tmp/cleanup_container
yes | dnf update
yes | dnf reinstall "*"
yes | dnf install epel-release
rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL*
yes | dnf update
yes | dnf install kernel linux-firmware iwl100-firmware iwl1000-firmware iwl105-firmware iwl135-firmware iwl2000-firmware iwl2030-firmware iwl3160-firmware iwl5000-firmware iwl5150-firmware iwl6000g2a-firmware iwl6000g2b-firmware iwl6050-firmware iwl7260-firmware wireless-regdb glibc-locale-source ntfs-3g bash sudo ModemManager NetworkManager-bluetooth NetworkManager-wifi wpa_supplicant bluez cryptsetup e2fsprogs ntfsprogs nano acpid curl thermald bash-completion ca-certificates gpg polkit xdg-user-dirs zstd fwupd patchutils net-tools usb_modeswitch upower efibootmgr bind nss-mdns systemd-resolved dbus-daemon grub2-efi shim
systemctl enable acpid.service dbus.socket dbus-daemon.service named.service NetworkManager.service systemd-resolved.service thermald.service
systemctl enable --global dbus.socket dbus-daemon.service
/tmp/set_locale
/tmp/install_user
/tmp/install_desktop
if [ -f /tmp/install_surface ]; then /tmp/install_surface; fi
/tmp/generate_fstab
/tmp/install_initramfs
/tmp/install_efi
yes | dnf autoremove
/tmp/cleanup
exit
ALMALINUXINIT
chmod 0755 "$linuxloopsdir"/chroot/tmp/init

cleanup_container
set_locale

cat >"$linuxloopsdir"/chroot/tmp/install_user <<ALMALINUXUSER
#!/bin/bash
useradd -s /bin/bash -m '$username'
echo -e '$userpass\n$userpass' | passwd '$username'
usermod -aG wheel '$username'
echo "%wheel      ALL=(ALL) ALL" > /etc/sudoers.d/90-wheel
ALMALINUXUSER
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_user

if [ -z "$desktop" ]; then desktop="full"; fi
case "$desktop" in
	'none')
	install_desktop=""
	;;
	'full')
	install_desktop="
yes | dnf install @\"Server with GUI\"
yes | dnf remove firewalld
systemctl enable cups-browsed.service
systemctl set-default graphical
"
	;;
esac
cat >"$linuxloopsdir"/chroot/tmp/install_desktop <<ALMALINUXDESKTOP
#!/bin/bash
$install_desktop
ALMALINUXDESKTOP
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_desktop

if [ ! -z "$CUSTOM_PACKAGES" ]; then
	echo -e "yes | dnf install $CUSTOM_PACKAGES" >> "$linuxloopsdir"/chroot/tmp/install_desktop
fi

if [ -f ./custom_script ]; then cp ./custom_script "$linuxloopsdir"/chroot/tmp/install_custom; chmod 0755 "$linuxloopsdir"/chroot/tmp/install_custom; fi

generate_fstab

cmdline_extra="selinux=0 $CUSTOM_CMDLINE_PARAMS"
install_dracut

install_efi

cleanup

chroot "$linuxloopsdir"/chroot /tmp/init

umount_chroot
}

chroot_archlinux()
{
download_lxc_image archlinux current default

mount_chroot

cat >"$linuxloopsdir"/chroot/tmp/init <<'ARCHLINUXINIT'
#!/bin/bash
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib
/tmp/cleanup_container
pacman-key --init
pacman-key --populate
pacman -Qnq | pacman -Syu --noconfirm -
pacman -Syu --noconfirm systemd linux linux-firmware wireless-regdb bash sudo modemmanager networkmanager wpa_supplicant bluez cryptsetup e2fsprogs ntfs-3g nano acpid curl thermald bash-completion ca-certificates gnupg polkit xdg-user-dirs zstd fwupd patchutils net-tools usb_modeswitch upower efibootmgr grub shim bind amd-ucode intel-ucode
systemctl enable acpid.service bluetooth.service ModemManager.service systemd-resolved.service thermald.service upower.service
/tmp/set_locale
/tmp/install_user
/tmp/install_desktop
if [ -f /tmp/install_surface ]; then /tmp/install_surface; fi
if [ -f /tmp/install_custom ]; then /tmp/install_custom; fi
/tmp/generate_fstab
/tmp/install_initramfs
/tmp/install_efi
/tmp/cleanup
exit
ARCHLINUXINIT
chmod 0755 "$linuxloopsdir"/chroot/tmp/init

cleanup_container
set_locale

cat >"$linuxloopsdir"/chroot/tmp/install_user <<ARCHLINUXUSER
#!/bin/bash
useradd -s /bin/bash -m '$username'
echo -e '$userpass\n$userpass' | passwd '$username'
usermod -aG wheel '$username'
echo "%wheel      ALL=(ALL) ALL" > /etc/sudoers.d/90-wheel
cat >/etc/polkit-1/rules.d/50-default.rules <<'POLKIT'
polkit.addAdminRule(function(action, subject) {
    return ["unix-group:wheel"];
});
POLKIT
ARCHLINUXUSER
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_user

if [ -z "$desktop" ]; then desktop="gnome"; fi
hardware_support="alsa-lib alsa-utils alsa-topology-conf alsa-ucm-conf at-spi2-core avahi cups nss-mdns pulseaudio system-config-printer xorg-server"
basic_packages="gvfs packagekit udisks2 xdg-user-dirs-gtk"
basic_themes="adobe-source-code-pro-fonts adwaita-icon-theme breeze-gtk breeze-icons xcursor-vanilla-dmz gnome-backgrounds materia-gtk-theme noto-fonts oxygen-icons papirus-icon-theme ttf-dejavu ttf-roboto"
specific_packages="archlinux-wallpaper"
desktop_base="$hardware_support $basic_packages $basic_themes $specific_packages"
desktop_services="avahi-daemon.service cups.service cups-browsed.service"
case "$desktop" in
	'none')
	install_desktop="
systemctl enable NetworkManager.service
"
	;;
	'budgie')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter budgie-desktop nemo tilix network-manager-applet arc-gtk-theme gnome-control-center
cat >/etc/xdg/autostart/budgie-nemo.desktop <<'NEMODESKTOP'
[Desktop Entry]
Type=Application
Name=Nemo
Comment=Start Nemo desktop at log in
Exec=nemo-desktop
OnlyShowIn=Budgie;
AutostartCondition=GSettings org.nemo.desktop show-desktop-icons
X-GNOME-AutoRestart=true
NoDisplay=true
NEMODESKTOP
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.gnome.desktop.background:Budgie]
picture-uri=\"file:///usr/share/backgrounds/archlinux/small.png\"
[org.gnome.desktop.interface:Budgie]
gtk-theme=\"Arc\"
icon-theme=\"Papirus\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/archlinux/small.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
systemctl enable $desktop_services lightdm.service NetworkManager.service
"
	;;
	'cinnamon')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter cinnamon gnome-terminal nemo network-manager-applet blueman
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.cinnamon.desktop.background]
picture-uri=\"file:///usr/share/backgrounds/archlinux/small.png\"
[org.cinnamon.desktop.interface]
gtk-theme=\"Materia\"
icon-theme=\"Papirus\"
[org.cinnamon.desktop.wm.preferences]
theme=\"Materia\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/archlinux/small.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
systemctl enable $desktop_services lightdm.service NetworkManager.service
"
	;;
	'deepin')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter deepin deepin-terminal network-manager-applet
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/archlinux/small.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
systemctl enable $desktop_services lightdm.service NetworkManager.service
"
	;;
	'deepin-full')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter deepin deepin-terminal deepin-extra network-manager-applet
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/archlinux/small.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
systemctl enable $desktop_services lightdm.service NetworkManager.service
"
	;;
	'enlightenment')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter enlightenment connman terminology
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/archlinux/small.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
systemctl enable $desktop_services lightdm.service connman.service
"
	;;
	'gnome')
	install_desktop="
pacman -S --noconfirm $desktop_base gdm gnome-shell gnome-control-center gnome-keyring gnome-backgrounds gnome-terminal nautilus
systemctl enable $desktop_services gdm.service NetworkManager.service
"
	;;
	'gnome-full')
	install_desktop="
pacman -S --noconfirm $desktop_base gdm gnome
systemctl enable $desktop_services gdm.service NetworkManager.service
"
	;;
	'i3')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter i3-wm i3status dmenu rxvt-unicode
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/archlinux/small.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
systemctl enable $desktop_services lightdm.service NetworkManager.service
"
	;;
	'kde')
	install_desktop="
pacman -S --noconfirm $desktop_base sddm plasma-desktop plasma-nm plasma-pa kwin dolphin konsole bluedevil powerdevil systemsettings discover kwallet-pam packagekit-qt5
mkdir -p /etc/sddm.conf.d
echo -e '[Theme]\nCurrent=breeze' > /etc/sddm.conf.d/99_linuxloops.conf
systemctl enable $desktop_services sddm.service NetworkManager.service
"
	;;
	'kde-full')
	install_desktop="
pacman -S --noconfirm $desktop_base sddm plasma dolphin konsole packagekit-qt5
mkdir -p /etc/sddm.conf.d
echo -e '[Theme]\nCurrent=breeze' > /etc/sddm.conf.d/99_linuxloops.conf
systemctl enable $desktop_services sddm.service NetworkManager.service
"
	;;
	'lxde')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter lxde-common lxde-icon-theme lxappearance lxpanel lxsession lxterminal openbox pcmanfm network-manager-applet blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/archlinux/small.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
systemctl enable $desktop_services lightdm.service NetworkManager.service
"
	;;
	'lxde-full')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter lxde network-manager-applet blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/archlinux/small.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
systemctl enable $desktop_services lightdm.service NetworkManager.service
"
	;;
	'lxqt')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter lxqt-config lxqt-notificationd lxqt-panel lxqt-policykit lxqt-powermanagement lxqt-qtplugin lxqt-session lxqt-themes openbox pcmanfm-qt qterminal network-manager-applet blueman breeze-icons oxygen-icons
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/archlinux/small.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
systemctl enable $desktop_services lightdm.service NetworkManager.service
"
	;;
	'lxqt-full')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter lxqt network-manager-applet blueman breeze-icons oxygen-icons
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/archlinux/small.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
systemctl enable $desktop_services lightdm.service NetworkManager.service
"
	;;
	'mate')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter mate mate-terminal network-manager-applet blueman mate-media mate-power-manager
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/archlinux/small.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
systemctl enable $desktop_services lightdm.service NetworkManager.service
"
	;;
	'mate-full')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter mate mate-terminal mate-extra network-manager-applet blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/archlinux/small.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
systemctl enable $desktop_services lightdm.service NetworkManager.service
"
	;;
	'xfce')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter xfce4 network-manager-applet blueman xfce4-pulseaudio-plugin
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/archlinux/small.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
systemctl enable $desktop_services lightdm.service NetworkManager.service
"
	;;
	'xfce-full')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter xfce4 xfce4-goodies network-manager-applet blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/archlinux/small.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
systemctl enable $desktop_services lightdm.service NetworkManager.service
"
	;;
esac
cat >"$linuxloopsdir"/chroot/tmp/install_desktop <<ARCHLINUXDESKTOP
#!/bin/bash
$install_desktop
ARCHLINUXDESKTOP
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_desktop

if [ ! -z "$CUSTOM_PACKAGES" ]; then
	echo -e "pacman -S --noconfirm $CUSTOM_PACKAGES" >> "$linuxloopsdir"/chroot/tmp/install_desktop
fi

if [ -f ./custom_script ]; then cp ./custom_script "$linuxloopsdir"/chroot/tmp/install_custom; chmod 0755 "$linuxloopsdir"/chroot/tmp/install_custom; fi

if [ ! -z "$surface" ] && [ "$surface" == "Yes" ]; then install_surface_pacman "linux"; fi

generate_fstab

cmdline_extra="$CUSTOM_CMDLINE_PARAMS"
install_initcpio

install_efi

cleanup

chroot "$linuxloopsdir"/chroot /tmp/init

umount_chroot
}

chroot_artixlinux()
{
download_lxc_image archlinux current default

mount_chroot

cat >"$linuxloopsdir"/chroot/tmp/init <<'ARTIXLINUXINIT'
#!/bin/bash
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib
rm /etc/resolv.conf
/tmp/cleanup_container
rm /etc/pacman.conf /etc/pacman.d/mirrorlist
curl https://gitea.artixlinux.org/packagesP/pacman/raw/branch/master/trunk/pacman.conf -o /etc/pacman.conf
curl https://gitea.artixlinux.org/packagesA/artix-mirrorlist/raw/branch/master/trunk/mirrorlist -o /etc/pacman.d/mirrorlist
sed -i 's@SigLevel    = Required DatabaseOptional@SigLevel    = Never@g' /etc/pacman.conf
sed -i 's@#RemoteFileSigLevel = Required@RemoteFileSigLevel = Optional@g' /etc/pacman.conf
pacman -Scc --noconfirm && pacman -Syy
pacman -S --noconfirm artix-keyring
pacman-key --populate artix
pacman-key --lsign-key 95AEC5D0C1E294FC9F82B253573A673A53C01BC2
rm -f /etc/pacman.conf
curl https://gitea.artixlinux.org/packagesP/pacman/raw/branch/master/trunk/pacman.conf -o /etc/pacman.conf
echo -e '\n[universe]\nServer = https://universe.artixlinux.org/$arch\nServer = https://mirror1.artixlinux.org/universe/$arch\nServer = https://mirror.pascalpuffke.de/artix-universe/$arch\nServer = https://artixlinux.qontinuum.space/artixlinux/universe/os/$arch\nServer = https://mirror1.cl.netactuate.com/artix/universe/$arch\nServer = https://ftp.crifo.org/artix-universe/$arch' >> /etc/pacman.conf
pacman -Rdd --noconfirm systemd systemd-libs systemd-sysvcompat pacman-mirrorlist dbus pam pambase
rm -f /etc/arch-release
curl https://gitea.artixlinux.org/packagesA/artix-mirrorlist/raw/branch/master/trunk/mirrorlist -o /etc/pacman.d/mirrorlist
sed -i '/https:\/\/mirrors.dotsrc.org/d' /etc/pacman.d/mirrorlist
pacman -Syu --noconfirm elogind-runit
pacman -Qnq | pacman -S --noconfirm -
pacman -Sy --noconfirm base runit-system runit elogind-runit mkinitcpio rsync nano lsb-release esysusers etmpfiles artix-branding-base artix-archlinux-support
echo -e "\n[extra]\nInclude = /etc/pacman.d/mirrorlist-arch\n\n[community]\nInclude = /etc/pacman.d/mirrorlist-arch\n\n#[multilib]\n#Include = /etc/pacman.d/mirrorlist-arch" >> /etc/pacman.conf
pacman -Syu --noconfirm linux linux-firmware wireless-regdb bash sudo modemmanager networkmanager networkmanager-runit wpa_supplicant bluez bluez-runit cryptsetup e2fsprogs ntfs-3g nano acpid acpid-runit curl thermald bash-completion ca-certificates gnupg polkit xdg-user-dirs zstd fwupd patchutils net-tools usb_modeswitch upower efibootmgr grub shim bind amd-ucode intel-ucode
ln -s /etc/runit/sv/acpid /etc/runit/sv/bluetoothd /etc/runit/runsvdir/default/
dbus-uuidgen > /etc/machine-id
/tmp/set_locale
/tmp/install_user
/tmp/install_desktop
if [ -f /tmp/install_surface ]; then /tmp/install_surface; fi
if [ -f /tmp/install_custom ]; then /tmp/install_custom; fi
/tmp/generate_fstab
/tmp/install_initramfs
/tmp/install_efi
rm -f /etc/resolv.conf
/tmp/cleanup
exit
ARTIXLINUXINIT
chmod 0755 "$linuxloopsdir"/chroot/tmp/init

cleanup_container
set_locale

cat >"$linuxloopsdir"/chroot/tmp/install_user <<ARTIXLINUXUSER
#!/bin/bash
useradd -s /bin/bash -m '$username'
echo -e '$userpass\n$userpass' | passwd '$username'
usermod -aG audio,wheel '$username'
echo "%wheel      ALL=(ALL) ALL" > /etc/sudoers.d/90-wheel
cat >/etc/polkit-1/rules.d/50-default.rules <<'POLKIT'
polkit.addAdminRule(function(action, subject) {
    return ["unix-group:wheel"];
});
POLKIT
cat >/etc/polkit-1/rules.d/50-org.freedesktop.NetworkManager.rules <<'NETWORKMANAGER'
polkit.addRule(function(action, subject) {
    if (action.id.indexOf("org.freedesktop.NetworkManager.") == 0 && subject.isInGroup("wheel")) {
        return polkit.Result.YES;
    }
});
NETWORKMANAGER
ARTIXLINUXUSER
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_user

if [ -z "$desktop" ]; then desktop="gnome"; fi
hardware_support="alsa-lib alsa-utils alsa-topology-conf alsa-ucm-conf at-spi2-core avahi avahi-runit cups cups-runit nss-mdns pulseaudio system-config-printer xorg-server"
basic_packages="gvfs packagekit udisks2 xdg-user-dirs-gtk"
basic_themes="adobe-source-code-pro-fonts adwaita-icon-theme breeze-gtk breeze-icons xcursor-vanilla-dmz gnome-backgrounds materia-gtk-theme noto-fonts oxygen-icons papirus-icon-theme ttf-dejavu ttf-roboto"
specific_packages="artix-backgrounds artix-dark-theme artix-desktop-presets artix-gtk-presets artix-icons artix-qt-presets ttf-roboto-mono pamac-gtk"
desktop_base="$hardware_support $basic_packages $basic_themes $specific_packages"
desktop_services="/etc/runit/sv/avahi-daemon /etc/runit/sv/cupsd"
case "$desktop" in
	'none')
	install_desktop="ln -s /etc/runit/sv/NetworkManager /etc/runit/runsvdir/default/"
	;;
	'budgie')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter lightdm-runit budgie-desktop nemo tilix network-manager-applet arc-gtk-theme gnome-control-center
cat >/etc/xdg/autostart/budgie-nemo.desktop <<'NEMODESKTOP'
[Desktop Entry]
Type=Application
Name=Nemo
Comment=Start Nemo desktop at log in
Exec=nemo-desktop
OnlyShowIn=Budgie;
AutostartCondition=GSettings org.nemo.desktop show-desktop-icons
X-GNOME-AutoRestart=true
NoDisplay=true
NEMODESKTOP
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.gnome.desktop.background:Budgie]
picture-uri=\"file:///usr/share/backgrounds/Artix_dna_spiral_dark.jpg\"
[org.gnome.desktop.interface:Budgie]
gtk-theme=\"Arc\"
icon-theme=\"Papirus\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/Artix_dna_spiral_dark.jpg\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
ln -s $desktop_services /etc/runit/sv/lightdm /etc/runit/sv/NetworkManager /etc/runit/runsvdir/default/
"
	;;
	'cinnamon')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter lightdm-runit cinnamon gnome-terminal nemo network-manager-applet blueman
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.cinnamon.desktop.background]
picture-uri=\"file:///usr/share/backgrounds/Artix_dna_spiral_dark.jpg\"
[org.cinnamon.desktop.interface]
gtk-theme=\"Materia\"
icon-theme=\"Papirus\"
[org.cinnamon.desktop.wm.preferences]
theme=\"Materia\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/Artix_dna_spiral_dark.jpg\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
ln -s $desktop_services /etc/runit/sv/lightdm /etc/runit/sv/NetworkManager /etc/runit/runsvdir/default/
"
	;;
	'deepin')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter lightdm-runit deepin deepin-terminal network-manager-applet
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/Artix_dna_spiral_dark.jpg\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
ln -s $desktop_services /etc/runit/sv/lightdm /etc/runit/sv/NetworkManager /etc/runit/runsvdir/default/
"
	;;
	'deepin-full')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter lightdm-runit deepin deepin-terminal deepin-extra network-manager-applet
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/Artix_dna_spiral_dark.jpg\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
ln -s $desktop_services /etc/runit/sv/lightdm /etc/runit/sv/NetworkManager /etc/runit/runsvdir/default/
"
	;;
	'enlightenment')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter lightdm-runit enlightenment terminology connman connman-runit
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/Artix_dna_spiral_dark.jpg\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
ln -s $desktop_services /etc/runit/sv/lightdm /etc/runit/sv/connmand /etc/runit/runsvdir/default/
"
	;;
	'gnome')
	install_desktop="
pacman -S --noconfirm $desktop_base gdm gdm-runit gnome-shell gnome-control-center gnome-keyring gnome-terminal nautilus
ln -s $desktop_services /etc/runit/sv/gdm /etc/runit/sv/NetworkManager /etc/runit/runsvdir/default/
"
	;;
	'gnome-full')
	install_desktop="
pacman -S --noconfirm $desktop_base gdm gdm-runit gnome
ln -s $desktop_services /etc/runit/sv/gdm /etc/runit/sv/NetworkManager /etc/runit/runsvdir/default/
"
	;;
	'i3')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter lightdm-runit i3-wm i3status dmenu rxvt-unicode
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/Artix_dna_spiral_dark.jpg\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
ln -s $desktop_services /etc/runit/sv/lightdm /etc/runit/sv/NetworkManager /etc/runit/runsvdir/default/
"
	;;
	'kde')
	install_desktop="
pacman -S --noconfirm $desktop_base sddm sddm-runit sddm-theme-artix plasma-desktop plasma-nm plasma-pa kwin dolphin konsole bluedevil powerdevil systemsettings discover kwallet-pam packagekit-qt5 falkon
ln -s $desktop_services /etc/runit/sv/sddm /etc/runit/sv/NetworkManager /etc/runit/runsvdir/default/
"
	;;
	'kde-full')
	install_desktop="
pacman -S --noconfirm $desktop_base sddm sddm-runit sddm-theme-artix plasma dolphin konsole falkon
ln -s $desktop_services /etc/runit/sv/sddm /etc/runit/sv/NetworkManager /etc/runit/runsvdir/default/
"
	;;
	'lxde')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter lightdm-runit lxde-common lxde-icon-theme lxappearance lxpanel lxsession lxterminal openbox pcmanfm network-manager-applet blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/Artix_dna_spiral_dark.jpg\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
ln -s $desktop_services /etc/runit/sv/lightdm /etc/runit/sv/NetworkManager /etc/runit/runsvdir/default/
"
	;;
	'lxde-full')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter lightdm-runit lxde network-manager-applet blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/Artix_dna_spiral_dark.jpg\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
ln -s $desktop_services /etc/runit/sv/lightdm /etc/runit/sv/NetworkManager /etc/runit/runsvdir/default/
"
	;;
	'lxqt')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter lightdm-runit lxqt-config lxqt-notificationd lxqt-panel lxqt-policykit lxqt-powermanagement lxqt-qtplugin lxqt-session lxqt-themes openbox pcmanfm-qt qterminal network-manager-applet blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/Artix_dna_spiral_dark.jpg\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
ln -s $desktop_services /etc/runit/sv/lightdm /etc/runit/sv/NetworkManager /etc/runit/runsvdir/default/
"
	;;
	'lxqt-full')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter lightdm-runit lxqt network-manager-applet blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/Artix_dna_spiral_dark.jpg\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
ln -s $desktop_services /etc/runit/sv/lightdm /etc/runit/sv/NetworkManager /etc/runit/runsvdir/default/
"
	;;
	'mate')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter lightdm-runit mate mate-terminal network-manager-applet blueman mate-media mate-power-manager mate-applets
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/Artix_dna_spiral_dark.jpg\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
ln -s $desktop_services /etc/runit/sv/lightdm /etc/runit/sv/NetworkManager /etc/runit/runsvdir/default/
"
	;;
	'mate-full')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter lightdm-runit mate mate-terminal mate-extra network-manager-applet blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/Artix_dna_spiral_dark.jpg\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
ln -s $desktop_services /etc/runit/sv/lightdm /etc/runit/sv/NetworkManager /etc/runit/runsvdir/default/
"
	;;
	'xfce')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter lightdm-runit xfce4 xfce4-whiskermenu-plugin network-manager-applet blueman xfce4-pulseaudio-plugin
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/Artix_dna_spiral_dark.jpg\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
ln -s $desktop_services /etc/runit/sv/lightdm /etc/runit/sv/NetworkManager /etc/runit/runsvdir/default/
"
	;;
	'xfce-full')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter lightdm-runit xfce4 xfce4-goodies network-manager-applet blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/Artix_dna_spiral_dark.jpg\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
ln -s $desktop_services /etc/runit/sv/lightdm /etc/runit/sv/NetworkManager /etc/runit/runsvdir/default/
"
	;;
esac
cat >"$linuxloopsdir"/chroot/tmp/install_desktop <<ARTIXLINUXDESKTOP
#!/bin/bash
$install_desktop
ARTIXLINUXDESKTOP
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_desktop

if [ ! -z "$CUSTOM_PACKAGES" ]; then
	echo -e "pacman -S --noconfirm $CUSTOM_PACKAGES" >> "$linuxloopsdir"/chroot/tmp/install_desktop
fi

if [ -f ./custom_script ]; then cp ./custom_script "$linuxloopsdir"/chroot/tmp/install_custom; chmod 0755 "$linuxloopsdir"/chroot/tmp/install_custom; fi

if [ ! -z "$surface" ] && [ "$surface" == "Yes" ]; then install_surface_pacman "linux"; fi

generate_fstab

cmdline_extra="$CUSTOM_CMDLINE_PARAMS"
install_initcpio

install_efi

cleanup

chroot "$linuxloopsdir"/chroot /tmp/init

umount_chroot
}

chroot_chromeos-flex()
{
mount --bind "$linuxloopsdir"/chroot "$linuxloopsdir"/chroot
mount --make-rprivate "$linuxloopsdir"/chroot
mkdir -p "$linuxloopsdir"/chroot/installroot/mnt
mount --bind "$linuxloopsdir"/chroot/installroot "$linuxloopsdir"/chroot/installroot
mount --make-rprivate "$linuxloopsdir"/chroot/installroot

download_lxc_image archlinux current default /installroot

mount --rbind "$linuxloopsdir"/chroot "$linuxloopsdir"/chroot/installroot/mnt
mount --make-rprivate "$linuxloopsdir"/chroot/installroot/mnt

mount_chroot /installroot

cat >"$linuxloopsdir"/chroot/installroot/tmp/init <<'CHROMEOSFLEXINIT'
#!/bin/bash
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib
mkdir -p /run/systemd/resolve
echo "nameserver 8.8.8.8" > /run/systemd/resolve/resolv.conf
sed -i 's@#en_US.UTF-8 UTF-8@en_US.UTF-8 UTF-8@g' /etc/locale.gen
locale-gen
cat >/etc/locale.conf <<'LOCALE'
LANG=en_US.UTF-8
LOCALE
pacman-key --init
pacman-key --populate
pacman -Syu --noconfirm cpio unzip ntfs-3g
/tmp/install
/tmp/cleanup
exit
CHROMEOSFLEXINIT
chmod 0755 "$linuxloopsdir"/chroot/installroot/tmp/init

cat >"$linuxloopsdir"/chroot/installroot/tmp/install <<CHROMEOSFLEXINSTALL
mkdir -p /isomount/data /isomount/rootc
mkfs.ext4 -F -b 4096 -L "H-STATE" "$destination_loop"p1
mount "$destination_loop"p1 /isomount/data
curl -L "\$(curl -L https://dl.google.com/dl/edgedl/chromeos/recovery/cloudready_recovery.conf | grep .bin.zip | tail -1 | cut -d'=' -f2)" -o /isomount/data/chromeos_flex.zip
unzip /isomount/data/chromeos_flex.zip -d /isomount/data
rm /isomount/data/chromeos_flex.zip
isomount="\$(losetup --show -fP \$(ls /isomount/data/chromeos_*.bin))"
for (( i=1; i<=12; i++ )); do
	case \$i in
		1)
			continue
		;;
		7)
			mkfs.ext4 -F -b 4096 -L "ROOT-C" "$destination_loop"p"\$i"
			continue
		;;
		*)
			part_source=\$i
		;;
	esac
	dd if="\$isomount"p"\$part_source" of="$destination_loop"p"\$i" bs=1M conv=notrunc status=progress
done
mount "$destination_loop"p7 /isomount/rootc
mkdir -p /isomount/rootc/initramfs
cd /isomount/rootc/initramfs
mkdir -p etc proc sys tmp usr/bin usr/lib usr/mbin usr/sbin
ln -s /usr/bin bin
ln -s /usr/lib lib
ln -s /usr/lib lib64
ln -s /usr/sbin sbin
curl -L https://busybox.net/downloads/binaries/1.35.0-x86_64-linux-musl/busybox -o ./usr/bin/busybox
chmod 0755 ./usr/bin/busybox
for i in \$(ldd /usr/bin/bash | cut -d' ' -f3); do cp "\$i" ./usr/lib/; done
cp -a /usr/bin/bash ./usr/mbin/
for i in \$(ldd /usr/bin/blkid | cut -d' ' -f3); do cp "\$i" ./usr/lib/; done
cp -a /usr/bin/blkid ./usr/mbin/
for i in \$(ldd /usr/bin/e2fsck | cut -d' ' -f3); do cp "\$i" ./usr/lib/; done
cp -a /usr/bin/e2fsck ./usr/mbin/
for i in \$(ldd /usr/bin/losetup | cut -d' ' -f3); do cp "\$i" ./usr/lib/; done
cp -a /usr/bin/losetup ./usr/mbin/
for i in \$(ldd /usr/bin/mkfs.ext4 | cut -d' ' -f3); do cp "\$i" ./usr/lib/; done
cp -a /usr/bin/mkfs.ext4 ./usr/mbin/
for i in \$(ldd /usr/bin/modprobe | cut -d' ' -f3); do cp "\$i" ./usr/lib/; done
cp -a /usr/bin/modprobe ./usr/mbin/
for i in \$(ldd /usr/bin/ntfs-3g | cut -d' ' -f3); do cp "\$i" ./usr/lib/; done
cp -a /usr/bin/ntfs-3g ./usr/mbin/
cp -a /usr/lib/ld-linux-x86-64.so.2 ./usr/lib/
cp -a /usr/lib/libgcc_s.so.1 ./usr/lib/
cat >./init <<'INITSCRIPT'
#!/usr/bin/busybox sh
export PATH=usr/mbin:/usr/sbin:/usr/bin
export LD_LIBRARY_PATH=/usr/lib

busybox mount -t proc none /proc
busybox mount -t sysfs none /sys
busybox mount -t devtmpfs none /dev
busybox --install -s
ln -s /proc/mounts /etc/mtab

if [ ! -z "\$brunch_debug" ] && [ "\$brunch_debug" -eq 1 ]; then
	echo 0 0 0 0 > /proc/sys/kernel/printk
	exec sh
fi

if { [ ! -z "\$img_uuid" ] || [ ! -z "\$img_part" ]; } && [ ! -z "\$img_path" ]; then
	brunch_timeout=0
	until false; do
		if [ ! -z "\$img_uuid" ]; then img_part="\$(blkid --match-token PARTUUID=\$img_uuid | cut -d':' -f1)"; fi
		echo "\$img_uuid | \$img_part"
		if [ -b "\$img_part" ]; then break; fi
		if [ \$brunch_timeout == 10 ]; then echo "The boot partition was not found, falling back to shell..." > /dev/kmsg; exec sh; fi
		brunch_timeout=\$(( \$brunch_timeout + 1 ))
		sleep 1
	done
else
	echo "The grub configuration is invalid, falling back to shell..." > /dev/kmsg
	exec sh
fi

if [ -e "\$img_part" ] && [ ! -z "\$img_path" ]; then
	mkdir /mainroot
	fstype=\$(blkid -s TYPE -o value "\$img_part")
	if [ "\$fstype" == "ntfs" ]; then
		ntfs-3g "\$img_part" /mainroot
	else
		mount -n "\$img_part" /mainroot
	fi
	if [ -f /mainroot/"\$img_path" ]; then
		if [ ! -b /dev/loop0 ]; then mknod -m660 /dev/loop0 b 7 0; fi
		losetup -P /dev/loop0 /mainroot"\$img_path"
		bootdevice=/dev/loop0
	else
		echo "brunch: ChromeOS loopfile \$img_path not found on device \$img_part..." > /dev/kmsg
		exec sh
	fi
fi

if [ ! -z "\$brunch_debug" ] && [ "\$brunch_debug" -eq 2 ]; then
	echo 0 0 0 0 > /proc/sys/kernel/printk
	exec sh
fi

if [ "\$bootimage" == "B" ]; then bootpart=5; else bootpart=3; fi
printf '\000' | dd of="\$bootdevice"p"\$bootpart" seek=\$((0x464 + 3)) conv=notrunc count=1 bs=1 status=none
mkdir -p chromeosroot
mount "\$bootdevice"p"\$bootpart" /chromeosroot

touch /chromeosroot/.nodelta
cat >/chromeosroot/usr/share/cros/startup_utils.sh <<'STATEFUL'
mount_var_and_home_chronos() {
mkdir -p /mnt/stateful_partition/encrypted/var
mount -n --bind /mnt/stateful_partition/encrypted/var /var || return 1
mkdir -p /mnt/stateful_partition/encrypted/chronos
mount -n --bind /mnt/stateful_partition/encrypted/chronos /home/chronos || return 1
}
umount_var_and_home_chronos() {
umount /home/chronos
umount /var
}
STATEFUL
chmod 0755 /chromeosroot/usr/share/cros/startup_utils.sh
mv /chromeosroot/bin/chroot /chromeosroot/bin/chroot.orig
cat >/chromeosroot/bin/chroot <<'CHROOT'
#!/bin/bash
if [ "\$EUID" -eq 0 ] && [ "\$1" == "." ] && [ "\$2" == "/usr/bin/cros_installer" ]; then
rootpath=\$(echo "\$(rootdev)" | sed 's/.\$//')
mkdir -p /mnt/stateful_partition/rootc
mount "\$rootpath"7 /mnt/stateful_partition/rootc
if [ "\$(rootdev)" == "\$rootpath"3 ]; then
echo "bootimage=B" > /mnt/stateful_partition/rootc/bootimage.cfg
else
echo "bootimage=A" > /mnt/stateful_partition/rootc/bootimage.cfg
fi
umount /mnt/stateful_partition/rootc
chroot.orig "\$@"
else
chroot.orig "\$@"
fi
CHROOT
chmod 0755 /chromeosroot/bin/chroot
#sed -i 's@>/run/mount_encrypted/mount-encrypted.log@/mnt/stateful_partition/test@g' /chromeosroot/usr/share/cros/startup_utils.sh

umount /chromeosroot
printf '\377' | dd of="\$bootdevice"p"\$bootpart" seek=\$((0x464 + 3)) conv=notrunc count=1 bs=1 status=none
mount -o ro "\$bootdevice"p"\$bootpart" /chromeosroot

mount --move /dev /chromeosroot/dev
mount --move /sys /chromeosroot/sys
mount --move /proc /chromeosroot/proc

sync

if [ ! -z "\$brunch_debug" ] && [ "\$brunch_debug" -eq 3 ]; then
	echo 0 0 0 0 > /roota/proc/sys/kernel/printk
	exec sh
fi

exec switch_root /chromeosroot /sbin/init "\$@"
INITSCRIPT
chmod 0755 ./init
find . | cpio -o -H newc > ../initramfs.img
cd ../../..
rm -r /isomount/rootc/initramfs
umount /isomount/rootc
losetup -d "\$isomount"
umount /isomount/data
mkfs.ext4 -F -b 4096 -L "H-STATE" "$destination_loop"p1
CHROMEOSFLEXINSTALL
chmod 0755 "$linuxloopsdir"/chroot/installroot/tmp/install

cleanup /installroot

chroot "$linuxloopsdir"/chroot/installroot /tmp/init

umount_chroot /installroot

umount -R "$linuxloopsdir"/chroot/installroot/mnt
umount "$linuxloopsdir"/chroot/installroot
umount "$linuxloopsdir"/chroot

if [ "$desktop" == "full-debug" ]; then cmdline_extra="lsm=lockdown,yama,safesetid,integrity,selinux cros_debug $CUSTOM_CMDLINE_PARAMS"; else cmdline_extra="$CUSTOM_CMDLINE_PARAMS"; fi
}

chroot_debian()
{
download_lxc_image debian bullseye default

mount_chroot

cat >"$linuxloopsdir"/chroot/tmp/init <<'DEBIANINIT'
#!/bin/bash
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib
/tmp/cleanup_container
sed -i 's@ main@ main contrib non-free@g' /etc/apt/sources.list
cat >/etc/apt/apt.conf.d/99linuxloops <<'RECOMMENDS'
APT::Install-Recommends "0";
APT::Get::Install-Recommends "false";
RECOMMENDS
yes | DEBIAN_FRONTEND=noninteractive apt update
yes | DEBIAN_FRONTEND=noninteractive apt install -o APT::Immediate-Configure=false --reinstall $(apt list --installed | cut -d'/' -f1 | sed '1d' | sed -z 's@\n@ @g')
yes | DEBIAN_FRONTEND=noninteractive dpkg --configure -a
yes | DEBIAN_FRONTEND=noninteractive apt install apt-utils console-setup kmod
yes | DEBIAN_FRONTEND=noninteractive apt update
yes | DEBIAN_FRONTEND=noninteractive apt install linux-image-amd64 firmware-linux-nonfree firmware-atheros firmware-iwlwifi firmware-realtek wireless-regdb bash sudo modemmanager network-manager wpasupplicant bluez cryptsetup-initramfs e2fsprogs ntfs-3g nano acpid curl thermald bash-completion ca-certificates gnupg-utils policykit-1 xdg-user-dirs zstd fwupd-signed patchutils net-tools usb-modeswitch upower efibootmgr grub-efi grub-efi-amd64-bin grub-efi-ia32-bin shim-signed bind9-host dns-root-data amd64-microcode intel-microcode lsb-release
systemctl enable acpid.service
systemctl enable upower.service
/tmp/set_locale
/tmp/install_user
/tmp/install_desktop
if [ -f /tmp/install_surface ]; then /tmp/install_surface; fi
if [ -f /tmp/install_custom ]; then /tmp/install_custom; fi
/tmp/generate_fstab
/tmp/install_initramfs
/tmp/install_efi
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt autoremove
rm -f /etc/resolv.conf
/tmp/cleanup
exit
DEBIANINIT
chmod 0755 "$linuxloopsdir"/chroot/tmp/init

cleanup_container
set_locale

cat >"$linuxloopsdir"/chroot/tmp/install_user <<DEBIANUSER
#!/bin/bash
useradd -s /bin/bash -m '$username'
echo -e '$userpass\n$userpass' | passwd '$username'
usermod -aG sudo '$username'
DEBIANUSER
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_user

if [ -z "$desktop" ]; then desktop="gnome"; fi
hardware_support="alsa-utils alsa-ucm-conf alsa-topology-conf at-spi2-core avahi-discover cups cups-browsed libnss-mdns pulseaudio system-config-printer xserver-xorg"
basic_packages="gvfs-fuse packagekit udisks2 xdg-user-dirs-gtk"
basic_themes="adwaita-icon-theme breeze-gtk-theme breeze-icon-theme dmz-cursor-theme fonts-dejavu fonts-noto fonts-roboto gnome-backgrounds materia-gtk-theme oxygen-icon-theme papirus-icon-theme"
specific_packages="desktop-base plymouth-themes synaptic"
desktop_base="$hardware_support $basic_packages $basic_themes $specific_packages"
case "$desktop" in
	'none')
	install_desktop=""
	;;
	'budgie')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter budgie-desktop arc-theme nemo tilix paper-icon-theme
cat >/etc/xdg/autostart/budgie-nemo.desktop <<'NEMODESKTOP'
[Desktop Entry]
Type=Application
Name=Nemo
Comment=Start Nemo desktop at log in
Exec=nemo-desktop
OnlyShowIn=Budgie;
AutostartCondition=GSettings org.nemo.desktop show-desktop-icons
X-GNOME-AutoRestart=true
NoDisplay=true
NEMODESKTOP
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.gnome.desktop.background:Budgie]
picture-uri=\"file:///usr/share/images/desktop-base/login-background.svg\"
[org.gnome.desktop.interface:Budgie]
gtk-theme=\"Arc\"
icon-theme=\"Papirus\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'cinnamon')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter cinnamon cinnamon-core network-manager-gnome blueman gnome-terminal nemo
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.cinnamon.desktop.background]
picture-uri=\"file:///usr/share/images/desktop-base/login-background.svg\"
[org.cinnamon.desktop.interface]
gtk-theme=\"Materia\"
icon-theme=\"Papirus\"
[org.cinnamon.desktop.wm.preferences]
theme=\"Materia\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'cinnamon-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter task-cinnamon-desktop network-manager-gnome blueman
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.cinnamon.desktop.background]
picture-uri=\"file:///usr/share/images/desktop-base/login-background.svg\"
[org.cinnamon.desktop.interface]
gtk-theme=\"Materia\"
icon-theme=\"Papirus\"
[org.cinnamon.desktop.wm.preferences]
theme=\"Materia\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'enlightenment')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter enlightenment terminology
yes | DEBIAN_FRONTEND=noninteractive apt purge network-manager
yes | DEBIAN_FRONTEND=noninteractive apt install connman
find /usr/lib -type f -name enlightenment_system -exec chmod 4755 {} \;
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'gnome')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base gdm3 gnome-session gnome-shell gnome-control-center gnome-terminal nautilus gnome-icon-theme libpam-gnome-keyring gnome-packagekit
"
	;;
	'gnome-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base gdm3 task-gnome-desktop
"
	;;
	'kde')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base sddm sddm-theme-breeze kde-plasma-desktop kwin-x11 dolphin plasma-discover konsole plasma-nm plasma-pa bluedevil libpam-kwallet5 powerdevil plasma-widgets-addons systemsettings
"
	;;
	'kde-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base sddm sddm-theme-breeze task-kde-desktop
"
	;;
	'lxde')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter lxde-core lxterminal pcmanfm lxde-icon-theme network-manager-gnome blueman lxappearance
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'lxde-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter task-lxde-desktop network-manager-gnome blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'lxqt')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter lxqt-core qterminal pcmanfm-qt lxqt-theme-debian network-manager-gnome blueman openbox lxqt-powermanagement lxqt-themes
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'lxqt-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter task-lxqt-desktop network-manager-gnome blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'mate')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter mate-desktop mate-session-manager marco mate-control-center mate-notification-daemon mate-applets mate-indicator-applet mate-applet-brisk-menu mate-themes mate-icon-theme mate-terminal caja network-manager-gnome blueman mate-media mate-power-manager
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'mate-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter task-mate-desktop blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'xfce')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter xfce4 xfce4-power-manager-plugins xfce4-terminal thunar xfce4-notifyd network-manager-gnome blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'xfce-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter task-xfce-desktop blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
esac
cat >"$linuxloopsdir"/chroot/tmp/install_desktop <<DEBIANDESKTOP
#!/bin/bash
$install_desktop
DEBIANDESKTOP
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_desktop

if [ ! -z "$CUSTOM_PACKAGES" ]; then
	echo -e "yes | DEBIAN_FRONTEND=noninteractive apt install $CUSTOM_PACKAGES" >> "$linuxloopsdir"/chroot/tmp/install_desktop
fi

if [ -f ./custom_script ]; then cp ./custom_script "$linuxloopsdir"/chroot/tmp/install_custom; chmod 0755 "$linuxloopsdir"/chroot/tmp/install_custom; fi

if [ ! -z "$surface" ] && [ "$surface" == "Yes" ]; then install_surface_apt "linux-headers-* linux-image-*"; fi

generate_fstab

cmdline_extra="$CUSTOM_CMDLINE_PARAMS"
install_initramfstools

install_efi

cleanup

chroot "$linuxloopsdir"/chroot /tmp/init

umount_chroot
}

chroot_devuan()
{
download_lxc_image debian bullseye default

mount_chroot

cat >"$linuxloopsdir"/chroot/tmp/init <<'DEVUANINIT'
#!/bin/bash
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib
rm /etc/resolv.conf
/tmp/cleanup_container
cat >/etc/apt/sources.list <<'SOURCES'
deb http://deb.devuan.org/merged chimaera main
deb http://deb.devuan.org/merged chimaera-updates main
deb http://deb.devuan.org/merged chimaera-security main
#deb http://deb.devuan.org/merged chimaera-backports main
SOURCES
sed -i 's@ main@ main contrib non-free@g' /etc/apt/sources.list
cat >/etc/apt/apt.conf.d/99linuxloops <<'RECOMMENDS'
APT::Install-Recommends "0";
APT::Get::Install-Recommends "false";
RECOMMENDS
yes | DEBIAN_FRONTEND=noninteractive apt update --allow-insecure-repositories
yes | DEBIAN_FRONTEND=noninteractive apt install devuan-keyring --allow-unauthenticated
yes | DEBIAN_FRONTEND=noninteractive apt purge systemd --allow-remove-essential
yes | DEBIAN_FRONTEND=noninteractive apt autoremove
yes | DEBIAN_FRONTEND=noninteractive apt install -o APT::Immediate-Configure=false --reinstall $(apt list --installed | cut -d'/' -f1 | sed '1d' | sed -z 's@\n@ @g')
yes | DEBIAN_FRONTEND=noninteractive dpkg --configure -a
yes | DEBIAN_FRONTEND=noninteractive apt install apt-utils console-setup kmod
yes | DEBIAN_FRONTEND=noninteractive apt update
yes | DEBIAN_FRONTEND=noninteractive apt install eudev sysvinit-core
yes | DEBIAN_FRONTEND=noninteractive apt install linux-image-amd64 firmware-linux-nonfree firmware-atheros firmware-iwlwifi firmware-realtek wireless-regdb bash sudo modemmanager network-manager wpasupplicant bluez cryptsetup-initramfs e2fsprogs ntfs-3g nano acpid curl thermald bash-completion ca-certificates gnupg-utils policykit-1 xdg-user-dirs zstd fwupd-signed patchutils net-tools usb-modeswitch upower efibootmgr grub-efi grub-efi-amd64-bin grub-efi-ia32-bin shim-signed bind9-host dns-root-data amd64-microcode intel-microcode lsb-release
dbus-uuidgen > /etc/machine-id
/tmp/set_locale
/tmp/install_user
/tmp/install_desktop
if [ -f /tmp/install_surface ]; then /tmp/install_surface; fi
if [ -f /tmp/install_custom ]; then /tmp/install_custom; fi
/tmp/generate_fstab
/tmp/install_initramfs
/tmp/install_efi
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt autoremove
rm -f /etc/resolv.conf
/tmp/cleanup
exit
DEVUANINIT
chmod 0755 "$linuxloopsdir"/chroot/tmp/init

cleanup_container
set_locale

cat >"$linuxloopsdir"/chroot/tmp/install_user <<DEVUANUSER
#!/bin/bash
useradd -s /bin/bash -m '$username'
echo -e '$userpass\n$userpass' | passwd '$username'
usermod -aG sudo '$username'
DEVUANUSER
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_user

if [ -z "$desktop" ]; then desktop="gnome"; fi
hardware_support="alsa-utils alsa-ucm-conf alsa-topology-conf at-spi2-core avahi-discover cups cups-browsed libnss-mdns pulseaudio system-config-printer xserver-xorg"
basic_packages="gvfs-fuse packagekit udisks2 xdg-user-dirs-gtk"
basic_themes="adwaita-icon-theme breeze-gtk-theme breeze-icon-theme dmz-cursor-theme fonts-dejavu fonts-noto fonts-roboto gnome-backgrounds materia-gtk-theme oxygen-icon-theme papirus-icon-theme"
specific_packages="desktop-base devuan-baseconf plymouth-themes synaptic"
desktop_base="$hardware_support $basic_packages $basic_themes $specific_packages"
case "$desktop" in
	'none')
	install_desktop=""
	;;
	'budgie')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter budgie-desktop budgie-desktop-view arc-theme nautilus tilix paper-icon-theme
cat >/etc/xdg/autostart/budgie-nemo.desktop <<'NEMODESKTOP'
[Desktop Entry]
Type=Application
Name=Nemo
Comment=Start Nemo desktop at log in
Exec=nemo-desktop
OnlyShowIn=Budgie;
AutostartCondition=GSettings org.nemo.desktop show-desktop-icons
X-GNOME-AutoRestart=true
NoDisplay=true
NEMODESKTOP
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.gnome.desktop.background:Budgie]
picture-uri=\"file:///usr/share/images/desktop-base/your-way_deepsea-wide-large.svg\"
[org.gnome.desktop.interface:Budgie]
gtk-theme=\"Arc\"
icon-theme=\"Papirus\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/images/desktop-base/your-way_deepsea-wide-large.svg\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'cinnamon')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter cinnamon network-manager-gnome blueman gnome-terminal nemo
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.cinnamon.desktop.background]
picture-uri=\"file:///usr/share/images/desktop-base/your-way_deepsea-wide-large.svg\"
[org.cinnamon.desktop.interface]
gtk-theme=\"Materia\"
icon-theme=\"Papirus\"
[org.cinnamon.desktop.wm.preferences]
theme=\"Materia\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/images/desktop-base/your-way_deepsea-wide-large.svg\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'cinnamon-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter task-cinnamon-desktop network-manager-gnome blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/images/desktop-base/your-way_deepsea-wide-large.svg\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'enlightenment')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter enlightenment terminology
yes | DEBIAN_FRONTEND=noninteractive apt purge network-manager
yes | DEBIAN_FRONTEND=noninteractive apt install connman
find /usr/lib -type f -name enlightenment_system -exec chmod 4755 {} \;
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/images/desktop-base/your-way_deepsea-wide-large.svg\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'gnome')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base gdm3 gnome-session gnome-shell gnome-control-center gnome-terminal nautilus gnome-icon-theme libpam-gnome-keyring gnome-packagekit
"
	;;
	'gnome-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base gdm3 task-gnome-desktop
"
	;;
	'kde')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base sddm sddm-theme-breeze kde-plasma-desktop kwin-x11 dolphin plasma-discover konsole plasma-nm plasma-pa bluedevil libpam-kwallet5 powerdevil plasma-widgets-addons systemsettings
sddm --example-config | sudo tee /etc/sddm.conf
sed -i 's@Current=debian-theme@Current=breeze@g' /etc/sddm.conf
"
	;;
	'kde-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base sddm sddm-theme-breeze task-kde-desktop
sddm --example-config | sudo tee /etc/sddm.conf
sed -i 's@Current=debian-theme@Current=breeze@g' /etc/sddm.conf
"
	;;
	'lxde')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter lxde-core lxterminal pcmanfm lxde-icon-theme network-manager-gnome blueman lxappearance
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/images/desktop-base/your-way_deepsea-wide-large.svg\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'lxde-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter task-lxde-desktop network-manager-gnome blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/images/desktop-base/your-way_deepsea-wide-large.svg\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'lxqt')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter lxqt-core qterminal pcmanfm-qt lxqt-theme-debian network-manager-gnome blueman openbox lxqt-powermanagement lxqt-themes
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/images/desktop-base/your-way_deepsea-wide-large.svg\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'lxqt-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter task-lxqt-desktop network-manager-gnome blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/images/desktop-base/your-way_deepsea-wide-large.svg\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'mate')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter mate-desktop mate-session-manager marco mate-control-center mate-notification-daemon mate-applets mate-indicator-applet mate-applet-brisk-menu mate-themes mate-icon-theme mate-terminal caja network-manager-gnome blueman mate-media mate-power-manager
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/images/desktop-base/your-way_deepsea-wide-large.svg\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'mate-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter task-mate-desktop blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/images/desktop-base/your-way_deepsea-wide-large.svg\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'xfce')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter xfce4 xfce4-power-manager-plugins xfce4-terminal thunar xfce4-notifyd network-manager-gnome blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/images/desktop-base/your-way_deepsea-wide-large.svg\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'xfce-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter task-xfce-desktop blueman
yes | DEBIAN_FRONTEND=noninteractive apt purge slim
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
echo -e '[Greeter]\nbackground = /usr/share/images/desktop-base/your-way_deepsea-wide-large.svg\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
esac
cat >"$linuxloopsdir"/chroot/tmp/install_desktop <<DEVUANDESKTOP
#!/bin/bash
$install_desktop
if [ "$encryption" == "Yes" ]; then sed -i '/GRUB_THEME=/d' /etc/default/grub; fi
DEVUANDESKTOP
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_desktop

if [ ! -z "$CUSTOM_PACKAGES" ]; then
	echo -e "yes | DEBIAN_FRONTEND=noninteractive apt install $CUSTOM_PACKAGES" >> "$linuxloopsdir"/chroot/tmp/install_desktop
fi

if [ -f ./custom_script ]; then cp ./custom_script "$linuxloopsdir"/chroot/tmp/install_custom; chmod 0755 "$linuxloopsdir"/chroot/tmp/install_custom; fi

if [ ! -z "$surface" ] && [ "$surface" == "Yes" ]; then install_surface_apt "linux-headers-* linux-image-*"; fi

generate_fstab

cmdline_extra="$CUSTOM_CMDLINE_PARAMS"
install_initramfstools

install_efi

cleanup

chroot "$linuxloopsdir"/chroot /tmp/init

umount_chroot
}

chroot_elementary()
{
download_lxc_image ubuntu focal default

mount_chroot

cat >"$linuxloopsdir"/chroot/tmp/init <<'ELEMENTARYINIT'
#!/bin/bash
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib
/tmp/cleanup_container
echo -e 'Package: *\nPin: release o=LP-PPA-elementary-os-*\nPin-Priority: 1000' > /etc/apt/preferences.d/elementary.pref
yes | DEBIAN_FRONTEND=noninteractive apt install software-properties-common
add-apt-repository ppa:elementary-os/stable -y
add-apt-repository ppa:elementary-os/os-patches -y
yes | DEBIAN_FRONTEND=noninteractive apt update
yes | DEBIAN_FRONTEND=noninteractive apt install -o APT::Immediate-Configure=false --reinstall $(apt list --installed | cut -d'/' -f1 | sed '1d' | sed -z 's@\n@ @g')
yes | DEBIAN_FRONTEND=noninteractive dpkg --configure -a
yes | DEBIAN_FRONTEND=noninteractive apt install apt-utils console-setup kmod
yes | DEBIAN_FRONTEND=noninteractive apt update
yes | DEBIAN_FRONTEND=noninteractive apt install linux-generic-hwe-20.04 linux-firmware wireless-regdb bash sudo modemmanager network-manager wpasupplicant bluez cryptsetup-initramfs e2fsprogs ntfs-3g nano acpid curl thermald bash-completion ca-certificates gnupg-utils policykit-1 xdg-user-dirs zstd fwupd patchutils net-tools usb-modeswitch upower efibootmgr grub-efi grub-efi-amd64-signed grub-efi-ia32-bin shim-signed update-manager-core
systemctl enable systemd-resolved.service
/tmp/set_locale
/tmp/install_user
/tmp/install_desktop
if [ -f /tmp/install_surface ]; then /tmp/install_surface; fi
if [ -f /tmp/install_custom ]; then /tmp/install_custom; fi
/tmp/generate_fstab
/tmp/install_initramfs
/tmp/install_efi
yes | DEBIAN_FRONTEND=noninteractive apt autoremove
/tmp/cleanup
exit
ELEMENTARYINIT
chmod 0755 "$linuxloopsdir"/chroot/tmp/init

cleanup_container
set_locale

cat >"$linuxloopsdir"/chroot/tmp/install_user <<ELEMENTARYUSER
#!/bin/bash
userdel -r -f ubuntu
useradd -s /bin/bash -m '$username'
echo -e '$userpass\n$userpass' | passwd '$username'
usermod -aG sudo '$username'
ELEMENTARYUSER
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_user

if [ -z "$desktop" ]; then desktop="full"; fi
case "$desktop" in
	'full')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install pantheon-greeter elementary-desktop
yes | DEBIAN_FRONTEND=noninteractive apt purge gdm3 ubuntu-session
"
	;;
esac
cat >"$linuxloopsdir"/chroot/tmp/install_desktop <<ELEMENTARYDESKTOP
#!/bin/bash
$install_desktop
ELEMENTARYDESKTOP
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_desktop

if [ ! -z "$CUSTOM_PACKAGES" ]; then
	echo -e "yes | DEBIAN_FRONTEND=noninteractive apt install $CUSTOM_PACKAGES" >> "$linuxloopsdir"/chroot/tmp/install_desktop
fi

if [ -f ./custom_script ]; then cp ./custom_script "$linuxloopsdir"/chroot/tmp/install_custom; chmod 0755 "$linuxloopsdir"/chroot/tmp/install_custom; fi

if [ ! -z "$surface" ] && [ "$surface" == "Yes" ]; then install_surface_apt "linux-generic-* linux-headers-* linux-image-* linux-modules-*"; fi

generate_fstab

cmdline_extra="$CUSTOM_CMDLINE_PARAMS"
install_initramfstools

install_efi

cleanup

chroot "$linuxloopsdir"/chroot /tmp/init

umount_chroot
}

chroot_fedora()
{
download_lxc_image fedora 36 default

mount_chroot

cat >"$linuxloopsdir"/chroot/tmp/init <<'FEDORAINIT'
#!/bin/bash
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib
/tmp/cleanup_container
yes | dnf update
yes | dnf reinstall "*"
yes | dnf install dnf-plugins-core
yes | dnf install kernel linux-firmware iwl100-firmware iwl1000-firmware iwl105-firmware iwl135-firmware iwl2000-firmware iwl2030-firmware iwl3160-firmware iwl5000-firmware iwl5150-firmware iwl6000g2a-firmware iwl6000g2b-firmware iwl6050-firmware iwl7260-firmware wireless-regdb glibc-locale-source ntfs-3g bash sudo ModemManager NetworkManager-bluetooth NetworkManager-wifi wpa_supplicant bluez cryptsetup e2fsprogs ntfsprogs nano acpid curl thermald bash-completion ca-certificates gpg polkit xdg-user-dirs zstd fwupd patchutils net-tools usb_modeswitch upower efibootmgr bind nss-mdns systemd-resolved dbus-daemon grub2-efi shim
systemctl enable dbus.socket dbus-daemon.service getty@.service systemd-resolved.service
/tmp/set_locale
/tmp/install_user
/tmp/install_desktop
if [ -f /tmp/install_surface ]; then /tmp/install_surface; fi
if [ -f /tmp/install_custom ]; then /tmp/install_custom; fi
/tmp/generate_fstab
/tmp/install_initramfs
/tmp/install_efi
yes | dnf autoremove
/tmp/cleanup
exit
FEDORAINIT
chmod 0755 "$linuxloopsdir"/chroot/tmp/init

cleanup_container
set_locale

cat >"$linuxloopsdir"/chroot/tmp/install_user <<FEDORAUSER
#!/bin/bash
useradd -s /bin/bash -m '$username'
echo -e '$userpass\n$userpass' | passwd '$username'
usermod -aG wheel '$username'
echo "%wheel      ALL=(ALL) ALL" > /etc/sudoers.d/90-wheel
FEDORAUSER
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_user

if [ -z "$desktop" ]; then desktop="gnome"; fi
hardware_support="alsa-lib alsa-utils alsa-sof-firmware alsa-topology at-spi2-core avahi cups nss-mdns pulseaudio system-config-printer xorg-x11-drivers"
basic_packages="gvfs-fuse PackageKit udisks2 xdg-user-dirs-gtk"
basic_themes="adwaita-icon-theme breeze-gtk breeze-icon-theme dmz-cursor-themes dejavu-sans-fonts google-noto-sans-fonts google-roboto-fonts gnome-backgrounds materia-gtk-theme oxygen-icon-theme papirus-icon-theme"
specific_packages="dnfdragora dnf-plugin-system-upgrade f36-backgrounds plymouth-system-theme"
desktop_base="$hardware_support $basic_packages $basic_themes $specific_packages"
desktop_services="avahi-daemon.service cups.service cups-browsed.service"
case "$desktop" in
	'none')
	install_desktop=""
	;;
	'cinnamon')
	install_desktop="
yes | dnf install $desktop_base lightdm slick-greeter cinnamon clutter-gtk gnome-terminal nemo paper-icon-theme blueman dnfdragora-updater
systemctl enable $desktop_services
"
	;;
	'cinnamon-full')
	install_desktop="
yes | dnf install $desktop_base lightdm slick-greeter @cinnamon-desktop-environment dnfdragora-updater
systemctl enable $desktop_services
"
	;;
	'gnome')
	install_desktop="
yes | dnf install $desktop_base gdm gnome-shell nautilus gnome-terminal gnome-backgrounds gnome-software gnome-keyring gnome-keyring-pam
systemctl enable $desktop_services
"
	;;
	'gnome-full')
	install_desktop="
yes | dnf install $desktop_base gdm @gnome-desktop
systemctl enable $desktop_services
"
	;;
	'kde')
	install_desktop="
yes | dnf install $desktop_base sddm sddm-breeze plasma-desktop plasma-discover plasma-nm bluedevil dolphin konsole pam-kwallet
systemctl enable $desktop_services
"
	;;
	'kde-full')
	install_desktop="
yes | dnf install $desktop_base sddm sddm-breeze @kde-desktop-environment
systemctl enable $desktop_services
"
	;;
	'lxde')
	install_desktop="
yes | dnf install $desktop_base lightdm slick-greeter @lxde-desktop-environment lxde-themes blueman dnfdragora-updater
systemctl enable $desktop_services
"
	;;
	'lxqt')
	install_desktop="
yes | dnf install $desktop_base lightdm slick-greeter @lxqt-desktop-environment lxqt-themes blueman
systemctl enable $desktop_services
"
	;;
	'mate')
	install_desktop="
yes | dnf install $desktop_base lightdm slick-greeter mate-desktop marco network-manager-applet blueberry mate-session-manager mate-media mate-power-manager caja mate-terminal mate-themes dnfdragora-updater
systemctl enable $desktop_services
"
	;;
	'mate-full')
	install_desktop="
yes | dnf install $desktop_base lightdm slick-greeter @mate-desktop-environment dnfdragora-updater
systemctl enable $desktop_services
"
	;;
	'xfce')
	install_desktop="
yes | dnf install $desktop_base lightdm slick-greeter xfdesktop xfce4-session xfce4-settings xfce4-notifyd yaru-theme network-manager-applet blueberry thunar xfce4-appfinder xfce4-pulseaudio-plugin xfce4-power-manager xfce4-terminal dnfdragora-updater
systemctl enable $desktop_services
"
	;;
	'xfce-full')
	install_desktop="
yes | dnf install $desktop_base lightdm slick-greeter @xfce-desktop-environment dnfdragora-updater
systemctl enable $desktop_services
"
	;;
esac
cat >"$linuxloopsdir"/chroot/tmp/install_desktop <<FEDORADESKTOP
#!/bin/bash
$install_desktop
FEDORADESKTOP
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_desktop

if [ ! -z "$CUSTOM_PACKAGES" ]; then
	echo -e "yes | dnf install $CUSTOM_PACKAGES" >> "$linuxloopsdir"/chroot/tmp/install_desktop
fi

if [ -f ./custom_script ]; then cp ./custom_script "$linuxloopsdir"/chroot/tmp/install_custom; chmod 0755 "$linuxloopsdir"/chroot/tmp/install_custom; fi

if [ ! -z "$surface" ] && [ "$surface" == "Yes" ]; then install_surface_dnf "kernel"; fi

generate_fstab

cmdline_extra="selinux=0 $CUSTOM_CMDLINE_PARAMS"
install_dracut

install_efi

cleanup

chroot "$linuxloopsdir"/chroot /tmp/init

umount_chroot
}

chroot_gentoo-openrc()
{
download_lxc_image gentoo current openrc

mount_chroot

cat >"$linuxloopsdir"/chroot/tmp/init <<'GENTOOINIT'
#!/bin/bash
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib
/tmp/cleanup_container
env-update
source /etc/profile
mkdir /etc/portage/package.license 
echo '*/* *' >> /etc/portage/package.license/custom
echo "VIDEO_CARDS=\"amdgpu dummy fbdev intel nouveau qxl radeon radeonsi vesa virtualbox vmware\"" >> /etc/portage/make.conf
echo "USE=\"alsa bluetooth caps cdda cups dbus elogind icu minizip modemmanager networkmanager wpasupplicant ogg policykit pulseaudio raw -systemd tracker tty-helpers udev udisks vala\"" >> /etc/portage/make.conf
echo "MAKEOPTS=\"-j$(nproc)\"" >> /etc/portage/make.conf
echo "EMERGE_DEFAULT_OPTS=\"--jobs 4\"" >> /etc/portage/make.conf
echo "media-libs/libsndfile minimal" > /etc/portage/package.use/dep_cycle_fix
eselect profile set default/linux/amd64/17.1
emerge --sync
emerge --oneshot sys-apps/portage
emerge -uDN @world sys-kernel/gentoo-kernel-bin sys-kernel/linux-firmware net-wireless/wireless-regdb app-admin/sudo sys-fs/ntfs3g net-misc/networkmanager sys-fs/cryptsetup app-editors/nano dev-vcs/git sys-power/acpid net-misc/curl sys-power/thermald app-shells/bash-completion app-misc/ca-certificates app-crypt/gnupg sys-auth/polkit app-arch/zstd sys-auth/pambase dev-lang/rust-bin
for x in /etc/runlevels/default/net.* ; do rc-update del $(basename $x) default ; rc-service --ifstarted $(basename $x) stop; done
rc-update add acpid default
rc-update add bluetooth default
rc-update add cupsd default
rc-update add NetworkManager default
rc-update add thermald default
/tmp/set_locale
/tmp/install_user
/tmp/install_desktop
rm /etc/portage/package.use/dep_cycle_fix
emerge -uDN @world
if [ -f /tmp/install_custom ]; then /tmp/install_custom; fi
/tmp/generate_fstab
/tmp/install_initramfs
/tmp/install_efi
/tmp/cleanup
exit
GENTOOINIT
chmod 0755 "$linuxloopsdir"/chroot/tmp/init

cleanup_container
set_locale

cat >"$linuxloopsdir"/chroot/tmp/install_user <<GENTOOUSER
#!/bin/bash
sed -i 's/^password/#password/g' /etc/pam.d/system-auth
echo 'password       required        pam_unix.so nullok sha512 shadow' >> /etc/pam.d/system-auth
useradd -s /bin/bash -m '$username'
echo -e '$userpass\n$userpass' | passwd '$username'
usermod -aG wheel '$username'
if [ ! -d /etc/sudoers.d ]; then mkdir -p /etc/sudoers.d; chmod 0750 /etc/sudoers.d; fi
echo "%wheel      ALL=(ALL) ALL" > /etc/sudoers.d/90-wheel
cat >/etc/polkit-1/rules.d/50-default.rules <<'POLKIT'
polkit.addAdminRule(function(action, subject) {
    return ["unix-group:wheel"];
});
POLKIT
GENTOOUSER
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_user

if [ -z "$desktop" ]; then desktop="gnome"; fi
newuse="echo \"USE=\"\$USE appindicator cairo cups drm eds egl gles2 gnome-online-accounts gtk gtk3 introspection jpeg libnotify ogg opengl qml tracker wayland X xorg\"\" >> /etc/portage/make.conf"
desktop_base="sys-boot/plymouth"
case "$desktop" in
	'none')
	install_desktop=""
	;;
	'cinnamon')
	install_desktop="
$newuse
emerge -uN $desktop_base x11-misc/lightdm gnome-extra/cinnamon x11-terms/gnome-terminal gnome-extra/nemo
sed -i 's@DISPLAYMANAGER=\"xdm\"@DISPLAYMANAGER=\"lightdm\"@g' /etc/conf.d/display-manager
rc-update add display-manager default
"
	;;
	'enlightenment')
	install_desktop="
$newuse
echo 'USE=\"\$USE gles2-only -opengl\"' >> /etc/portage/make.conf
emerge -uN $desktop_base x11-misc/lightdm x11-wm/enlightenment x11-terms/terminology
sed -i 's@DISPLAYMANAGER=\"xdm\"@DISPLAYMANAGER=\"lightdm\"@g' /etc/conf.d/display-manager
rc-update add display-manager default
"
	;;
	'gnome')
	install_desktop="
$newuse
emerge -uN $desktop_base gnome-base/gdm gnome-base/gnome x11-terms/gnome-terminal gnome-base/nautilus
sed -i 's@DISPLAYMANAGER=\"xdm\"@DISPLAYMANAGER=\"gdm\"@g' /etc/conf.d/display-manager
rc-update add display-manager default
"
	;;
	'kde')
	install_desktop="
$newuse
emerge -uN $desktop_base x11-misc/sddm kde-plasma/plasma-meta kde-apps/konsole kde-plasma/plasma-nm kde-apps/dolphin kde-plasma/discover
sed -i 's@DISPLAYMANAGER=\"xdm\"@DISPLAYMANAGER=\"sddm\"@g' /etc/conf.d/display-manager
rc-update add display-manager default
"
	;;
	'lxqt')
	install_desktop="
$newuse
emerge -uN $desktop_base x11-misc/lightdm lxqt-base/lxqt-meta x11-terms/qterminal gnome-extra/nm-applet lxqt-base/lxqt-powermanagement
sed -i 's@DISPLAYMANAGER=\"xdm\"@DISPLAYMANAGER=\"lightdm\"@g' /etc/conf.d/display-manager
rc-update add display-manager default
"
	;;
	'mate')
	install_desktop="
$newuse
emerge -uN $desktop_base x11-misc/lightdm mate-base/mate x11-terms/mate-terminal gnome-extra/nm-applet mate-extra/mate-power-manager mate-extra/mate-media
sed -i 's@DISPLAYMANAGER=\"xdm\"@DISPLAYMANAGER=\"lightdm\"@g' /etc/conf.d/display-manager
rc-update add display-manager default
"
	;;
	'xfce')
	install_desktop="
$newuse
emerge -uN $desktop_base x11-misc/lightdm xfce-base/xfce4-meta x11-terms/xfce4-terminal gnome-extra/nm-applet net-wireless/blueman xfce-extra/xfce4-power-manager
sed -i 's@DISPLAYMANAGER=\"xdm\"@DISPLAYMANAGER=\"lightdm\"@g' /etc/conf.d/display-manager
rc-update add display-manager default
"
	;;
esac
cat >"$linuxloopsdir"/chroot/tmp/install_desktop <<GENTOODESKTOP
#!/bin/bash
$install_desktop
GENTOODESKTOP
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_desktop

if [ ! -z "$CUSTOM_PACKAGES" ]; then
	echo -e "emerge $CUSTOM_PACKAGES" >> "$linuxloopsdir"/chroot/tmp/install_desktop
fi

if [ -f ./custom_script ]; then cp ./custom_script "$linuxloopsdir"/chroot/tmp/install_custom; chmod 0755 "$linuxloopsdir"/chroot/tmp/install_custom; fi

generate_fstab

cmdline_extra="$CUSTOM_CMDLINE_PARAMS"
install_dracut

install_efi

cleanup

chroot "$linuxloopsdir"/chroot /tmp/init

umount_chroot
}

chroot_gentoo-systemd()
{
download_lxc_image gentoo current systemd

mount_chroot

cat >"$linuxloopsdir"/chroot/tmp/init <<'GENTOOINIT'
#!/bin/bash
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib
/tmp/cleanup_container
env-update
source /etc/profile
mkdir /etc/portage/package.license 
echo '*/* *' >> /etc/portage/package.license/custom
echo "VIDEO_CARDS=\"amdgpu dummy fbdev intel nouveau qxl radeon radeonsi vesa virtualbox vmware\"" >> /etc/portage/make.conf
echo "USE=\"alsa bluetooth caps cdda cups dbus -elogind icu minizip modemmanager networkmanager wpasupplicant ogg policykit pulseaudio raw systemd tracker tty-helpers udev udisks vala\"" >> /etc/portage/make.conf
echo "MAKEOPTS=\"-j$(nproc)\"" >> /etc/portage/make.conf
echo "EMERGE_DEFAULT_OPTS=\"--jobs 4\"" >> /etc/portage/make.conf
echo "media-libs/libsndfile minimal" > /etc/portage/package.use/dep_cycle_fix
eselect profile set default/linux/amd64/17.1
emerge --sync
emerge --oneshot sys-apps/portage
emerge -uDN @world sys-kernel/gentoo-kernel-bin sys-kernel/linux-firmware net-wireless/wireless-regdb app-admin/sudo sys-fs/ntfs3g net-misc/networkmanager sys-fs/cryptsetup app-editors/nano dev-vcs/git sys-power/acpid net-misc/curl sys-power/thermald app-shells/bash-completion app-misc/ca-certificates app-crypt/gnupg sys-auth/polkit app-arch/zstd sys-auth/pambase dev-lang/rust-bin
systemctl enable acpid.service
systemctl enable bluetooth.service
systemctl enable cupsd.service
systemctl enable NetworkManager.service
systemctl enable thermald.service
/tmp/set_locale
/tmp/install_user
/tmp/install_desktop
rm /etc/portage/package.use/dep_cycle_fix
emerge -uDN @world
if [ -f /tmp/install_custom ]; then /tmp/install_custom; fi
/tmp/generate_fstab
/tmp/install_initramfs
/tmp/install_efi
/tmp/cleanup
exit
GENTOOINIT
chmod 0755 "$linuxloopsdir"/chroot/tmp/init

cleanup_container
set_locale

cat >"$linuxloopsdir"/chroot/tmp/install_user <<GENTOOUSER
#!/bin/bash
sed -i 's/^password/#password/g' /etc/pam.d/system-auth
echo 'password       required        pam_unix.so nullok sha512 shadow' >> /etc/pam.d/system-auth
useradd -s /bin/bash -m '$username'
echo -e '$userpass\n$userpass' | passwd '$username'
usermod -aG wheel '$username'
if [ ! -d /etc/sudoers.d ]; then mkdir -p /etc/sudoers.d; chmod 0750 /etc/sudoers.d; fi
echo "%wheel      ALL=(ALL) ALL" > /etc/sudoers.d/90-wheel
cat >/etc/polkit-1/rules.d/50-default.rules <<'POLKIT'
polkit.addAdminRule(function(action, subject) {
    return ["unix-group:wheel"];
});
POLKIT
GENTOOUSER
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_user

if [ -z "$desktop" ]; then desktop="gnome"; fi
newuse="echo \"USE=\"\$USE appindicator cairo cups drm eds egl gles2 gnome-online-accounts gtk gtk3 introspection jpeg libnotify ogg opengl qml tracker wayland X xorg\"\" >> /etc/portage/make.conf"
desktop_base="sys-boot/plymouth"
case "$desktop" in
	'none')
	install_desktop=""
	;;
	'cinnamon')
	install_desktop="
$newuse
emerge -uN $desktop_base x11-misc/lightdm gnome-extra/cinnamon x11-terms/gnome-terminal gnome-extra/nemo
systemctl enable lightdm.service
echo '$userpass' | su - '$username' -c \"systemctl --user enable pulseaudio.service pulseaudio.socket\"
"
	;;
	'enlightenment')
	install_desktop="
$newuse
echo 'USE=\"\$USE gles2-only -opengl\"' >> /etc/portage/make.conf
emerge -uN $desktop_base x11-misc/lightdm x11-wm/enlightenment x11-terms/terminology
systemctl enable lightdm.service
echo '$userpass' | su - '$username' -c \"systemctl --user enable pulseaudio.service pulseaudio.socket\"
"
	;;
	'gnome')
	install_desktop="
$newuse
emerge -uN $desktop_base gnome-base/gdm gnome-base/gnome x11-terms/gnome-terminal gnome-base/nautilus
systemctl enable gdm.service
echo '$userpass' | su - '$username' -c \"systemctl --user enable pulseaudio.service pulseaudio.socket\"
"
	;;
	'kde')
	install_desktop="
$newuse
emerge -uN $desktop_base x11-misc/sddm kde-plasma/plasma-meta kde-apps/konsole kde-plasma/plasma-nm kde-apps/dolphin kde-plasma/discover
systemctl enable sddm.service
echo '$userpass' | su - '$username' -c \"systemctl --user enable pulseaudio.service pulseaudio.socket\"
"
	;;
	'lxqt')
	install_desktop="
$newuse
emerge -uN $desktop_base x11-misc/lightdm lxqt-base/lxqt-meta x11-terms/qterminal gnome-extra/nm-applet lxqt-base/lxqt-powermanagement
systemctl enable lightdm.service
echo '$userpass' | su - '$username' -c \"systemctl --user enable pulseaudio.service pulseaudio.socket\"
"
	;;
	'mate')
	install_desktop="
$newuse
emerge -uN $desktop_base x11-misc/lightdm mate-base/mate x11-terms/mate-terminal gnome-extra/nm-applet mate-extra/mate-power-manager mate-extra/mate-media
systemctl enable lightdm.service
echo '$userpass' | su - '$username' -c \"systemctl --user enable pulseaudio.service pulseaudio.socket\"
"
	;;
	'xfce')
	install_desktop="
$newuse
emerge -uN $desktop_base x11-misc/lightdm xfce-base/xfce4-meta x11-terms/xfce4-terminal gnome-extra/nm-applet net-wireless/blueman xfce-extra/xfce4-power-manager
systemctl enable lightdm.service
echo '$userpass' | su - '$username' -c \"systemctl --user enable pulseaudio.service pulseaudio.socket\"
"
	;;
esac
cat >"$linuxloopsdir"/chroot/tmp/install_desktop <<GENTOODESKTOP
#!/bin/bash
$install_desktop
GENTOODESKTOP
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_desktop

if [ ! -z "$CUSTOM_PACKAGES" ]; then
	echo -e "emerge $CUSTOM_PACKAGES" >> "$linuxloopsdir"/chroot/tmp/install_desktop
fi

if [ -f ./custom_script ]; then cp ./custom_script "$linuxloopsdir"/chroot/tmp/install_custom; chmod 0755 "$linuxloopsdir"/chroot/tmp/install_custom; fi

generate_fstab

cmdline_extra="$CUSTOM_CMDLINE_PARAMS"
install_dracut

install_efi

cleanup

chroot "$linuxloopsdir"/chroot /tmp/init

umount_chroot
}

chroot_kali()
{
download_lxc_image kali current default

mount_chroot

cat >"$linuxloopsdir"/chroot/tmp/init <<'KALIINIT'
#!/bin/bash
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib
/tmp/cleanup_container
sed -i 's@ main@ main contrib non-free@g' /etc/apt/sources.list
cat >/etc/apt/apt.conf.d/99linuxloops <<'RECOMMENDS'
APT::Install-Recommends "0";
APT::Get::Install-Recommends "false";
RECOMMENDS
yes | DEBIAN_FRONTEND=noninteractive apt update
yes | DEBIAN_FRONTEND=noninteractive apt install -o APT::Immediate-Configure=false --reinstall $(apt list --installed | cut -d'/' -f1 | sed '1d' | sed -z 's@\n@ @g')
yes | DEBIAN_FRONTEND=noninteractive dpkg --configure -a
yes | DEBIAN_FRONTEND=noninteractive apt install apt-utils console-setup kmod
yes | DEBIAN_FRONTEND=noninteractive apt update
yes | DEBIAN_FRONTEND=noninteractive apt install linux-image-amd64 firmware-linux-nonfree firmware-atheros firmware-iwlwifi firmware-realtek wireless-regdb bash sudo modemmanager network-manager wpasupplicant bluez cryptsetup-initramfs e2fsprogs ntfs-3g nano acpid curl thermald bash-completion ca-certificates gnupg-utils policykit-1 xdg-user-dirs zstd fwupd-signed patchutils net-tools usb-modeswitch upower efibootmgr grub-efi grub-efi-amd64-bin grub-efi-ia32-bin shim-signed bind9-host dns-root-data amd64-microcode intel-microcode lsb-release systemd-resolved kali-themes
systemctl enable acpid.service bluetooth.service systemd-resolved.service thermald.service upower.service
/tmp/set_locale
/tmp/install_user
/tmp/install_desktop
if [ -f /tmp/install_surface ]; then /tmp/install_surface; fi
if [ -f /tmp/install_custom ]; then /tmp/install_custom; fi
/tmp/generate_fstab
/tmp/install_initramfs
/tmp/install_efi
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt autoremove
/tmp/cleanup
exit
KALIINIT
chmod 0755 "$linuxloopsdir"/chroot/tmp/init

cleanup_container
set_locale

cat >"$linuxloopsdir"/chroot/tmp/install_user <<KALIUSER
#!/bin/bash
useradd -s /bin/bash -m '$username'
echo -e '$userpass\n$userpass' | passwd '$username'
usermod -aG sudo '$username'
KALIUSER
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_user

if [ -z "$desktop" ]; then desktop="gnome"; fi
hardware_support="alsa-utils alsa-ucm-conf alsa-topology-conf at-spi2-core avahi-discover avahi-dnsconfd cups cups-browsed cups-filters libnss-mdns pulseaudio system-config-printer xserver-xorg"
basic_packages="gvfs-fuse packagekit udisks2 xdg-user-dirs-gtk"
basic_themes="adwaita-icon-theme breeze-gtk-theme breeze-icon-theme dmz-cursor-theme fonts-dejavu fonts-noto fonts-roboto gnome-backgrounds materia-gtk-theme oxygen-icon-theme papirus-icon-theme"
specific_packages="desktop-base plymouth-themes synaptic kali-defaults-desktop kali-themes-common"
desktop_base="$hardware_support $basic_packages $basic_themes $specific_packages"
desktop_services="avahi-daemon.service cups.service cups-browsed.service"
case "$desktop" in
	'none')
	install_desktop=""
	;;
	'budgie')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter budgie-desktop arc-theme nemo gnome-terminal libgdk-pixbuf2.0-bin
systemctl enable $desktop_services
cat >/etc/xdg/autostart/budgie-nemo.desktop <<'NEMODESKTOP'
[Desktop Entry]
Type=Application
Name=Nemo
Comment=Start Nemo desktop at log in
Exec=nemo-desktop
OnlyShowIn=Budgie;
AutostartCondition=GSettings org.nemo.desktop show-desktop-icons
X-GNOME-AutoRestart=true
NoDisplay=true
NEMODESKTOP
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.gnome.desktop.background:Budgie]
picture-uri=\"file:///usr/share/backgrounds/kali/kali-layers-16x9.png\"
[org.gnome.desktop.interface:Budgie]
gtk-theme=\"Arc\"
icon-theme=\"Papirus\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'budgie-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter budgie-desktop arc-theme nautilus gnome-terminal libgdk-pixbuf2.0-bin kali-tools-top10
systemctl enable $desktop_services
cat >/etc/xdg/autostart/budgie-nemo.desktop <<'NEMODESKTOP'
[Desktop Entry]
Type=Application
Name=Nemo
Comment=Start Nemo desktop at log in
Exec=nemo-desktop
OnlyShowIn=Budgie;
AutostartCondition=GSettings org.nemo.desktop show-desktop-icons
X-GNOME-AutoRestart=true
NoDisplay=true
NEMODESKTOP
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.gnome.desktop.background:Budgie]
picture-uri=\"file:///usr/share/backgrounds/kali/kali-layers-16x9.png\"
[org.gnome.desktop.interface:Budgie]
gtk-theme=\"Arc\"
icon-theme=\"Papirus\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'cinnamon')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter task-cinnamon-desktop gnome-terminal blueman
systemctl enable $desktop_services
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.cinnamon.desktop.interface]
gtk-theme=\"Materia\"
icon-theme=\"Papirus\"
[org.cinnamon.desktop.wm.preferences]
theme=\"Materia\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'cinnamon-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter task-cinnamon-desktop gnome-terminal blueman kali-tools-top10
systemctl enable $desktop_services
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.cinnamon.desktop.interface]
gtk-theme=\"Materia\"
icon-theme=\"Papirus\"
[org.cinnamon.desktop.wm.preferences]
theme=\"Materia\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'enlightenment')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter kali-desktop-e17 terminology
yes | DEBIAN_FRONTEND=noninteractive apt purge network-manager
yes | DEBIAN_FRONTEND=noninteractive apt install connman
systemctl enable $desktop_services connman.service
find /usr/lib -type f -name enlightenment_system -exec chmod 4755 {} \;
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'enlightenment-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter kali-desktop-e17 terminology kali-tools-top10
yes | DEBIAN_FRONTEND=noninteractive apt purge network-manager
yes | DEBIAN_FRONTEND=noninteractive apt install connman
systemctl enable $desktop_services connman.service
find /usr/lib -type f -name enlightenment_system -exec chmod 4755 {} \;
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'gnome')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base gdm3 kali-desktop-gnome gnome-keyring libpam-gnome-keyring
systemctl enable $desktop_services
"
	;;
	'gnome-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base gdm3 kali-desktop-gnome gnome-keyring kali-tools-top10
systemctl enable $desktop_services
"
	;;
	'i3')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter kali-desktop-i3 pavucontrol pasystray network-manager-gnome blueman
systemctl enable $desktop_services
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'i3-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter kali-desktop-i3 pavucontrol pasystray network-manager-gnome blueman kali-tools-top10
systemctl enable $desktop_services
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'kde')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base sddm kali-desktop-kde kwin-x11 dolphin plasma-discover konsole plasma-nm plasma-pa bluedevil libpam-kwallet5 powerdevil plasma-widgets-addons systemsettings
systemctl enable $desktop_services
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'kde-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base sddm kali-desktop-kde kwin-x11 plasma-nm plasma-pa powerdevil bluedevil libpam-kwallet5 kali-tools-top10
systemctl enable $desktop_services
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'lxde')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter kali-desktop-lxde network-manager-gnome blueman
systemctl enable $desktop_services
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'lxde-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter kali-desktop-lxde network-manager-gnome blueman kali-tools-top10
systemctl enable $desktop_services
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'mate')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter kali-desktop-mate mate-power-manager mate-media blueman
systemctl enable $desktop_services
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'mate-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter kali-desktop-mate mate-power-manager mate-media blueman kali-tools-top10
systemctl enable $desktop_services
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'xfce')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter kali-desktop-xfce blueman
systemctl enable $desktop_services
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'xfce-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter kali-desktop-xfce blueman kali-tools-top10
systemctl enable $desktop_services
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
esac
cat >"$linuxloopsdir"/chroot/tmp/install_desktop <<KALIDESKTOP
#!/bin/bash
$install_desktop
plymouth-set-default-theme kali
KALIDESKTOP
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_desktop

if [ ! -z "$CUSTOM_PACKAGES" ]; then
	echo -e "yes | DEBIAN_FRONTEND=noninteractive apt install $CUSTOM_PACKAGES" >> "$linuxloopsdir"/chroot/tmp/install_desktop
fi

if [ -f ./custom_script ]; then cp ./custom_script "$linuxloopsdir"/chroot/tmp/install_custom; chmod 0755 "$linuxloopsdir"/chroot/tmp/install_custom; fi

if [ ! -z "$surface" ] && [ "$surface" == "Yes" ]; then install_surface_apt "linux-headers-* linux-image-*"; fi

generate_fstab

cmdline_extra="$CUSTOM_CMDLINE_PARAMS"
install_initramfstools

install_efi

cleanup

chroot "$linuxloopsdir"/chroot /tmp/init

umount_chroot
}

chroot_kde-neon()
{
download_lxc_image ubuntu jammy default

mount_chroot

cat >"$linuxloopsdir"/chroot/tmp/init <<'KDE_NEONINIT'
#!/bin/bash
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib
/tmp/cleanup_container
yes | DEBIAN_FRONTEND=noninteractive apt update
yes | DEBIAN_FRONTEND=noninteractive apt install gpg dirmngr gpg-agent
cat >/etc/apt/sources.list.d/neon.list <<'RECOMMENDS'
deb http://archive.neon.kde.org/user/ jammy main
RECOMMENDS
yes | DEBIAN_FRONTEND=noninteractive apt update --allow-insecure-repositories
yes | DEBIAN_FRONTEND=noninteractive apt install neon-keyring neon-settings --allow-unauthenticated
yes | DEBIAN_FRONTEND=noninteractive apt install -o APT::Immediate-Configure=false --reinstall $(apt list --installed | cut -d'/' -f1 | sed '1d' | sed -z 's@\n@ @g')
yes | DEBIAN_FRONTEND=noninteractive dpkg --configure -a
yes | DEBIAN_FRONTEND=noninteractive apt install apt-utils console-setup kmod
yes | DEBIAN_FRONTEND=noninteractive apt update
yes | DEBIAN_FRONTEND=noninteractive apt install linux-generic linux-firmware wireless-regdb bash sudo modemmanager network-manager wpasupplicant bluez cryptsetup-initramfs e2fsprogs ntfs-3g nano acpid curl thermald bash-completion ca-certificates gnupg-utils policykit-1 xdg-user-dirs zstd fwupd-signed patchutils net-tools usb-modeswitch upower efibootmgr grub-efi grub-efi-amd64-signed grub-efi-ia32-bin shim-signed bind9-host dns-root-data amd64-microcode intel-microcode update-manager-core
systemctl enable acpid.service systemd-resolved.service upower.service
/tmp/set_locale
/tmp/install_user
/tmp/install_desktop
if [ -f /tmp/install_surface ]; then /tmp/install_surface; fi
if [ -f /tmp/install_custom ]; then /tmp/install_custom; fi
/tmp/generate_fstab
/tmp/install_initramfs
/tmp/install_efi
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt autoremove
/tmp/cleanup
exit
KDE_NEONINIT
chmod 0755 "$linuxloopsdir"/chroot/tmp/init

cleanup_container
set_locale

cat >"$linuxloopsdir"/chroot/tmp/install_user <<KDE_NEONUSER
#!/bin/bash
userdel -r -f ubuntu
useradd -s /bin/bash -m '$username'
echo -e '$userpass\n$userpass' | passwd '$username'
usermod -aG sudo '$username'
KDE_NEONUSER
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_user

if [ -z "$desktop" ]; then desktop="full"; fi
case "$desktop" in
	'essentials')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install neon-essentials-desktop
"
	;;
	'full')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install neon-desktop
"
	;;
esac
cat >"$linuxloopsdir"/chroot/tmp/install_desktop <<KDE_NEONDESKTOP
#!/bin/bash
$install_desktop
yes | DEBIAN_FRONTEND=noninteractive apt purge plasma-firewall firewalld
KDE_NEONDESKTOP
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_desktop

if [ ! -z "$CUSTOM_PACKAGES" ]; then
	echo -e "yes | DEBIAN_FRONTEND=noninteractive apt install $CUSTOM_PACKAGES" >> "$linuxloopsdir"/chroot/tmp/install_desktop
fi

if [ -f ./custom_script ]; then cp ./custom_script "$linuxloopsdir"/chroot/tmp/install_custom; chmod 0755 "$linuxloopsdir"/chroot/tmp/install_custom; fi

if [ ! -z "$surface" ] && [ "$surface" == "Yes" ]; then install_surface_apt "linux-generic-* linux-headers-* linux-image-* linux-modules-*"; fi

generate_fstab

cmdline_extra="$CUSTOM_CMDLINE_PARAMS"
install_initramfstools

install_efi

cleanup

chroot "$linuxloopsdir"/chroot /tmp/init

umount_chroot
}

chroot_manjaro()
{
download_lxc_image archlinux current default

mount_chroot

cat >"$linuxloopsdir"/chroot/tmp/init <<'MANJAROINIT'
#!/bin/bash
set -e
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib
/tmp/cleanup_container
pacman -Rdd --noconfirm pacman-mirrorlist
echo 'Server = https://mirrors.manjaro.org/repo/stable/$repo/$arch' > /etc/pacman.d/mirrorlist
curl -L https://gitlab.manjaro.org/packages/core/manjaro-keyring/-/raw/master/manjaro.gpg?inline=false -o /usr/share/pacman/keyrings/manjaro.gpg
curl -L https://gitlab.manjaro.org/packages/core/manjaro-keyring/-/raw/master/manjaro-revoked?inline=false -o /usr/share/pacman/keyrings/manjaro-revoked
curl -L https://gitlab.manjaro.org/packages/core/manjaro-keyring/-/raw/master/manjaro-trusted?inline=false -o /usr/share/pacman/keyrings/manjaro-trusted
rm -r /etc/pacman.d/gnupg
pacman-key --init
pacman-key --populate
rm /usr/share/pacman/keyrings/manjaro*
pacman -Syy
pacman -Rdd systemd
pacman -Qnq | pacman -S --noconfirm - manjaro-system pacman-mirrors systemd
curl -L https://gitlab.manjaro.org/packages/core/pacman/-/raw/master/pacman.conf?inline=false -o /etc/pacman.conf
pacman-key --init
pacman-key --populate
pacman -Syy
pacman -Syu --noconfirm systemd linux515 linux-firmware wireless-regdb bash sudo modemmanager networkmanager wpa_supplicant bluez cryptsetup e2fsprogs ntfs-3g nano acpid curl thermald bash-completion ca-certificates gnupg polkit xdg-user-dirs zstd fwupd patchutils net-tools usb_modeswitch upower efibootmgr grub shim bind amd-ucode intel-ucode
systemctl enable acpid.service bluetooth.service ModemManager.service systemd-resolved.service thermald.service upower.service
/tmp/set_locale
/tmp/install_user
/tmp/install_desktop
if [ -f /tmp/install_surface ]; then /tmp/install_surface; fi
if [ -f /tmp/install_custom ]; then /tmp/install_custom; fi
/tmp/generate_fstab
/tmp/install_initramfs
/tmp/install_efi
/tmp/cleanup
exit
MANJAROINIT
chmod 0755 "$linuxloopsdir"/chroot/tmp/init

cleanup_container
set_locale

cat >"$linuxloopsdir"/chroot/tmp/install_user <<MANJAROUSER
#!/bin/bash
useradd -s /bin/bash -m '$username'
echo -e '$userpass\n$userpass' | passwd '$username'
usermod -aG wheel '$username'
echo "%wheel      ALL=(ALL) ALL" > /etc/sudoers.d/90-wheel
cat >/etc/polkit-1/rules.d/50-default.rules <<'POLKIT'
polkit.addAdminRule(function(action, subject) {
    return ["unix-group:wheel"];
});
POLKIT
MANJAROUSER
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_user

if [ -z "$desktop" ]; then desktop="gnome"; fi
hardware_support="alsa-lib alsa-utils alsa-topology-conf alsa-ucm-conf at-spi2-core avahi cups cups-filters nss-mdns pulseaudio system-config-printer xorg-server"
basic_packages="gvfs packagekit udisks2 xdg-user-dirs-gtk"
basic_themes="adobe-source-code-pro-fonts adwaita-icon-theme breeze-gtk breeze-icons xcursor-vanilla-dmz gnome-backgrounds materia-gtk-theme noto-fonts oxygen-icons papirus-icon-theme ttf-dejavu ttf-roboto nerd-fonts-noto-sans-mono"
specific_packages="manjaro-wallpapers-18.0 manjaro-settings-manager plymouth-theme-manjaro"
if [ -z "$encryption" ]; then specific_packages="$specific_packages grub-theme-manjaro"; fi
desktop_base="$hardware_support $basic_packages $basic_themes $specific_packages"
desktop_services="avahi-daemon.service avahi-dnsconfd.service cups.service cups-browsed.service"
case "$desktop" in
	'none')
	install_desktop=""
	;;
	'budgie')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter budgie-desktop manjaro-budgie-settings network-manager-applet tilix nautilus papirus-maia-icon-theme pamac-gtk
systemctl enable $desktop_services lightdm.service NetworkManager.service
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'cinnamon')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter cinnamon manjaro-cinnamon-settings gnome-terminal nemo pamac-gtk
systemctl enable $desktop_services lightdm.service NetworkManager.service
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'deepin')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter deepin deepin-manjaro network-manager-applet deepin-terminal deepin-wallpapers pamac-gtk
systemctl enable $desktop_services lightdm.service NetworkManager.service
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'enlightenment')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter enlightenment terminology pamac-gtk connman
systemctl enable $desktop_services lightdm.service connman.service
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'gnome')
	install_desktop="
pacman -S --noconfirm $desktop_base gdm-plymouth gnome-shell gnome-control-center gnome-keyring gnome-software gnome-backgrounds gnome-terminal nautilus manjaro-gnome-settings
systemctl enable $desktop_services gdm.service NetworkManager.service
"
	;;
	'gnome-full')
	install_desktop="
pacman -S --noconfirm $desktop_base gdm-plymouth gnome gnome-extra manjaro-gnome-settings
systemctl enable $desktop_services gdm.service NetworkManager.service
"
	;;
	'kde')
	install_desktop="
pacman -S --noconfirm $desktop_base sddm plasma manjaro-kde-settings dolphin discover packagekit-qt5 konsole pamac-tray-icon-plasma
systemctl enable $desktop_services lightdm.service NetworkManager.service
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'kde-full')
	install_desktop="
pacman -S --noconfirm $desktop_base sddm plasma kde-applications manjaro-kde-settings dolphin discover packagekit-qt5 konsole pamac-tray-icon-plasma
systemctl enable $desktop_services lightdm.service NetworkManager.service
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'lxde')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter lxde manjaro-lxde-config manjaro-lxde-desktop-settings manjaro-lxde-logout-banner manjaro-lxde-xfce4-notifyd manjaro-lxde-xfce4-volumed-pulse arc-maia-icon-theme kvantum-manjaro lxterminal pcmanfm network-manager-applet blueman pamac-gtk
systemctl enable $desktop_services lightdm.service NetworkManager.service
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'lxqt')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter lxqt manjaro-lxqt-config manjaro-lxqt-desktop-settings manjaro-openbox-adapta-maia papirus-maia-icon-theme qterminal pcmanfm-qt network-manager-applet blueman pamac-gtk
systemctl enable $desktop_services lightdm.service NetworkManager.service
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'mate')
	install_desktop="
pacman -S --noconfirm  $desktop_base lightdm lightdm-slick-greeter mate manjaro-mate-settings arc-maia-icon-theme papirus-maia-icon-theme mate-terminal caja mate-control-center network-manager-applet blueman mate-media mate-power-manager pamac-gtk
systemctl enable $desktop_services lightdm.service NetworkManager.service
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'mate-full')
	install_desktop="
pacman -S --noconfirm  $desktop_base lightdm lightdm-slick-greeter mate mate-extra manjaro-mate-settings arc-maia-icon-theme papirus-maia-icon-theme mate-terminal caja mate-control-center network-manager-applet blueman mate-media mate-power-manager pamac-gtk
systemctl enable $desktop_services lightdm.service NetworkManager.service
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'xfce')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter xfce4 manjaro-xfce-settings xfce4-terminal xfce4-notifyd xfce4-whiskermenu-plugin thunar xfce4-power-manager xfce4-pulseaudio-plugin network-manager-applet blueman pamac-gtk
systemctl enable $desktop_services lightdm.service NetworkManager.service
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'xfce-full')
	install_desktop="
pacman -S --noconfirm $desktop_base lightdm lightdm-slick-greeter xfce4 xfce4-goodies manjaro-xfce-settings xfce4-terminal xfce4-notifyd xfce4-whiskermenu-plugin thunar xfce4-power-manager xfce4-pulseaudio-plugin network-manager-applet blueman pamac-gtk
systemctl enable $desktop_services lightdm.service NetworkManager.service
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n[Seat:*]\nsession-wrapper=/etc/lightdm/Xsession\ngreeter-session=lightdm-slick-greeter' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
esac
cat >"$linuxloopsdir"/chroot/tmp/install_desktop <<MANJARODESKTOP
#!/bin/bash
$install_desktop
MANJARODESKTOP
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_desktop

if [ ! -z "$CUSTOM_PACKAGES" ]; then
	echo -e "pacman -S --noconfirm $CUSTOM_PACKAGES" >> "$linuxloopsdir"/chroot/tmp/install_desktop
fi

if [ -f ./custom_script ]; then cp ./custom_script "$linuxloopsdir"/chroot/tmp/install_custom; chmod 0755 "$linuxloopsdir"/chroot/tmp/install_custom; fi

if [ ! -z "$surface" ] && [ "$surface" == "Yes" ]; then install_surface_pacman "linux510"; fi

generate_fstab

cmdline_extra="$CUSTOM_CMDLINE_PARAMS"
install_initcpio

install_efi

cleanup

chroot "$linuxloopsdir"/chroot /tmp/init

umount_chroot
}

chroot_mint()
{
download_lxc_image mint vanessa default

mount_chroot

cat >"$linuxloopsdir"/chroot/tmp/init <<'MINTINIT'
#!/bin/bash
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib
/tmp/cleanup_container
cat >/etc/apt/apt.conf.d/99linuxloops <<'RECOMMENDS'
APT::Install-Recommends "0";
APT::Get::Install-Recommends "false";
RECOMMENDS
yes | DEBIAN_FRONTEND=noninteractive apt update
yes | DEBIAN_FRONTEND=noninteractive apt install mintsystem
cp /usr/share/linuxmint/mintsystem/apt/official-package-repositories.pref /etc/apt/preferences.d/official-package-repositories.pref
mv /etc/apt/sources.list /etc/apt/sources.list.d/official-package-repositories.list
yes | DEBIAN_FRONTEND=noninteractive apt install -o APT::Immediate-Configure=false --reinstall $(apt list --installed | cut -d'/' -f1 | sed '1d' | sed -z 's@\n@ @g')
yes | DEBIAN_FRONTEND=noninteractive dpkg --configure -a
yes | DEBIAN_FRONTEND=noninteractive apt install apt-utils console-setup kmod
yes | DEBIAN_FRONTEND=noninteractive apt update
yes | DEBIAN_FRONTEND=noninteractive apt install linux-generic linux-firmware wireless-regdb bash sudo modemmanager network-manager wpasupplicant bluez cryptsetup-initramfs e2fsprogs ntfs-3g nano acpid curl thermald bash-completion ca-certificates gnupg-utils policykit-1 xdg-user-dirs zstd fwupd-signed patchutils net-tools usb-modeswitch upower efibootmgr grub-efi grub-efi-amd64-signed grub-efi-ia32-bin shim-signed bind9-host dns-root-data amd64-microcode intel-microcode update-manager-core grub2-theme-mint
systemctl enable acpid.service systemd-resolved.service upower.service
/tmp/set_locale
/tmp/install_user
/tmp/install_desktop
echo -e 'APT::Install-Recommends "0";\nAPT::Get::Install-Recommends "false";' > /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install mintupgrade mintinstall
apt list --installed | grep 'tilix' && yes | DEBIAN_FRONTEND=noninteractive apt purge 'tilix'
if [ -f /tmp/install_surface ]; then /tmp/install_surface; fi
if [ -f /tmp/install_custom ]; then /tmp/install_custom; fi
/tmp/generate_fstab
/tmp/install_initramfs
mkdir -p /etc/default/grub.d
echo -e 'GRUB_DISTRIBUTOR="Linux Mint"' > /etc/default/grub.d/mint.cfg
/tmp/install_efi
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt autoremove
/tmp/cleanup
exit
MINTINIT
chmod 0755 "$linuxloopsdir"/chroot/tmp/init

cleanup_container
set_locale

cat >"$linuxloopsdir"/chroot/tmp/install_user <<MINTUSER
#!/bin/bash
userdel -r -f ubuntu
useradd -s /bin/bash -m '$username'
echo -e '$userpass\n$userpass' | passwd '$username'
usermod -aG sudo '$username'
MINTUSER
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_user

if [ -z "$desktop" ]; then desktop="gnome"; fi
hardware_support="alsa-utils alsa-ucm-conf alsa-topology-conf at-spi2-core avahi-discover cups cups-browsed cups-filters firmware-sof-signed libnss-mdns pulseaudio system-config-printer xserver-xorg"
basic_packages="gvfs-fuse packagekit udisks2 xdg-user-dirs-gtk"
basic_themes="adwaita-icon-theme breeze-gtk-theme breeze-icon-theme dmz-cursor-theme fonts-dejavu fonts-noto fonts-roboto gnome-backgrounds materia-gtk-theme oxygen-icon-theme papirus-icon-theme"
specific_packages="desktop-base mint-artwork mint-themes mint-x-icons mint-y-icons mint-backgrounds-una ubuntu-system-adjustments plymouth-themes fonts-ubuntu"
desktop_base="$hardware_support $basic_packages $basic_themes $specific_packages"
case "$desktop" in
	'none')
	install_desktop=""
	;;
	'budgie')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter budgie-desktop arc-theme nemo gnome-terminal gjs libpam-gnome-keyring
cat >/etc/xdg/autostart/budgie-nemo.desktop <<'NEMODESKTOP'
[Desktop Entry]
Type=Application
Name=Nemo
Comment=Start Nemo desktop at log in
Exec=nemo-desktop
OnlyShowIn=Budgie;
AutostartCondition=GSettings org.nemo.desktop show-desktop-icons
X-GNOME-AutoRestart=true
NoDisplay=true
NEMODESKTOP
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.gnome.desktop.background:Budgie]
picture-uri=\"file:///usr/share/backgrounds/linuxmint/default-background.png\"
[org.gnome.desktop.interface:Budgie]
gtk-theme=\"Arc\"
icon-theme=\"Papirus\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
echo -e '[Greeter]\ndraw-user-backgrounds = true' > /etc/lightdm/slick-greeter.conf
"
	;;
	'cinnamon')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter cinnamon cinnamon-core gnome-terminal nemo blueman
echo -e '[Greeter]\ndraw-user-backgrounds = true' > /etc/lightdm/slick-greeter.conf
"
	;;
	'cinnamon-full')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install network-manager-gnome blueman
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter mint-meta-cinnamon gnome-terminal nemo
echo -e '[Greeter]\ndraw-user-backgrounds = true' > /etc/lightdm/slick-greeter.conf
"
	;;
	'enlightenment')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt purge network-manager
yes | DEBIAN_FRONTEND=noninteractive apt install connman
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter enlightenment terminology libevas-loaders
find /usr/lib -type f -name enlightenment_system -exec chmod 4755 {} \;
echo -e '[Greeter]\ndraw-user-backgrounds = true' > /etc/lightdm/slick-greeter.conf
"
	;;
	'gnome')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base gdm3 gnome-session gnome-shell gnome-control-center gnome-terminal nautilus libpam-gnome-keyring
"
	;;
	'gnome-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base gdm3 gnome
"
	;;
	'kde')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base sddm sddm-theme-breeze kde-plasma-desktop kwin-x11 dolphin plasma-discover konsole plasma-nm plasma-pa bluedevil libpam-kwallet5 powerdevil plasma-widgets-addons systemsettings
"
	;;
	'kde-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base sddm sddm-theme-breeze task-kde-desktop
"
	;;
	'lxde')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter lxde lxterminal pcmanfm lxde-icon-theme network-manager-gnome blueman
echo -e '[Greeter]\ndraw-user-backgrounds = true' > /etc/lightdm/slick-greeter.conf
"
	;;
	'lxde-full')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install network-manager-gnome blueman
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter lxde
echo -e '[Greeter]\ndraw-user-backgrounds = true' > /etc/lightdm/slick-greeter.conf
"
	;;
	'lxqt')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter lxqt qterminal pcmanfm-qt network-manager-gnome blueman humanity-icon-theme
echo -e '[Greeter]\ndraw-user-backgrounds = true' > /etc/lightdm/slick-greeter.conf
"
	;;
	'lxqt-full')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install network-manager-gnome blueman
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter lxqt humanity-icon-theme
echo -e '[Greeter]\ndraw-user-backgrounds = true' > /etc/lightdm/slick-greeter.conf
"
	;;
	'mate')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter mint-meta-mate mate-desktop-environment network-manager-gnome blueman
echo -e '[Greeter]\ndraw-user-backgrounds = true' > /etc/lightdm/slick-greeter.conf
"
	;;
	'mate-full')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install network-manager-gnome blueman
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter mint-meta-mate mate-desktop-environment
echo -e '[Greeter]\ndraw-user-backgrounds = true' > /etc/lightdm/slick-greeter.conf
"
	;;
	'xfce')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install network-manager-gnome blueman
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter mint-meta-xfce xfce4 greybird-gtk-theme xfce4-terminal firefox elementary-xfce-icon-theme libpam-gnome-keyring
echo -e '[Greeter]\ndraw-user-backgrounds = true' > /etc/lightdm/slick-greeter.conf
"
	;;
	'xfce-full')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install network-manager-gnome blueman
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter mint-meta-xfce xfce4 greybird-gtk-theme xfce4-terminal firefox xfce4-goodies elementary-xfce-icon-theme libpam-gnome-keyring
echo -e '[Greeter]\ndraw-user-backgrounds = true' > /etc/lightdm/slick-greeter.conf
"
	;;
esac
cat >"$linuxloopsdir"/chroot/tmp/install_desktop <<MINTDESKTOP
#!/bin/bash
$install_desktop
MINTDESKTOP
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_desktop

if [ ! -z "$CUSTOM_PACKAGES" ]; then
	echo -e "yes | DEBIAN_FRONTEND=noninteractive apt install $CUSTOM_PACKAGES" >> "$linuxloopsdir"/chroot/tmp/install_desktop
fi

if [ -f ./custom_script ]; then cp ./custom_script "$linuxloopsdir"/chroot/tmp/install_custom; chmod 0755 "$linuxloopsdir"/chroot/tmp/install_custom; fi

if [ ! -z "$surface" ] && [ "$surface" == "Yes" ]; then install_surface_apt "linux-generic-* linux-headers-* linux-image-* linux-modules-*"; fi

generate_fstab

cmdline_extra="$CUSTOM_CMDLINE_PARAMS"
install_initramfstools

install_efi

cleanup

chroot "$linuxloopsdir"/chroot /tmp/init

umount_chroot
}

chroot_mxlinux()
{
download_lxc_image debian bullseye default

mount_chroot

cat >"$linuxloopsdir"/chroot/tmp/init <<'MXLINUXINIT'
#!/bin/bash
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib
/tmp/cleanup_container
sed -i 's@ main@ main contrib non-free@g' /etc/apt/sources.list
cat >/etc/apt/sources.list.d/mx.list <<'SOURCES'
deb http://mxrepo.com/mx/repo/ bullseye main non-free
#deb http://mxrepo.com/mx/repo/ bullseye ahs
SOURCES
cat >/etc/apt/apt.conf.d/99linuxloops <<'RECOMMENDS'
APT::Install-Recommends "0";
APT::Get::Install-Recommends "false";
RECOMMENDS
yes | DEBIAN_FRONTEND=noninteractive apt update --allow-insecure-repositories
yes | DEBIAN_FRONTEND=noninteractive apt install mx21-archive-keyring --allow-unauthenticated
yes | DEBIAN_FRONTEND=noninteractive apt install -o APT::Immediate-Configure=false --reinstall $(apt list --installed | cut -d'/' -f1 | sed '1d' | sed -z 's@\n@ @g')
yes | DEBIAN_FRONTEND=noninteractive dpkg --configure -a
yes | DEBIAN_FRONTEND=noninteractive apt install apt-utils console-setup kmod
yes | DEBIAN_FRONTEND=noninteractive apt update
yes | DEBIAN_FRONTEND=noninteractive apt install linux-image-amd64 firmware-linux-nonfree firmware-atheros firmware-iwlwifi firmware-realtek wireless-regdb bash sudo modemmanager network-manager wpasupplicant bluez cryptsetup-initramfs e2fsprogs ntfs-3g nano acpid curl thermald bash-completion ca-certificates gnupg-utils policykit-1 xdg-user-dirs zstd fwupd-signed patchutils net-tools usb-modeswitch upower efibootmgr grub-efi grub-efi-amd64-signed grub-efi-ia32-bin shim-signed bind9-host dns-root-data amd64-microcode intel-microcode grub-themes-mx
systemctl enable acpid.service systemd-resolved.service upower.service
/tmp/set_locale
/tmp/install_user
/tmp/install_desktop
if [ -f /tmp/install_surface ]; then /tmp/install_surface; fi
if [ -f /tmp/install_custom ]; then /tmp/install_custom; fi
/tmp/generate_fstab
/tmp/install_initramfs
mkdir -p /etc/default/grub.d
echo -e 'GRUB_DISTRIBUTOR="MX Linux"\nGRUB_THEME="/boot/grub/themes/mx_linux/theme.txt"' > /etc/default/grub.d/mxlinux.cfg
/tmp/install_efi
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt autoremove
/tmp/cleanup
exit
MXLINUXINIT
chmod 0755 "$linuxloopsdir"/chroot/tmp/init

cleanup_container
set_locale

cat >"$linuxloopsdir"/chroot/tmp/install_user <<MXLINUXUSER
#!/bin/bash
useradd -s /bin/bash -m '$username'
echo -e '$userpass\n$userpass' | passwd '$username'
usermod -aG audio,sudo '$username'
MXLINUXUSER
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_user

if [ -z "$desktop" ]; then desktop="gnome"; fi
hardware_support="alsa-utils alsa-ucm-conf alsa-topology-conf at-spi2-core avahi-discover cups libnss-mdns pulseaudio system-config-printer xserver-xorg"
basic_packages="gvfs-fuse packagekit udisks2 xdg-user-dirs-gtk"
basic_themes="adwaita-icon-theme breeze-gtk-theme breeze-icon-theme dmz-cursor-theme fonts-dejavu fonts-noto fonts-roboto gnome-backgrounds materia-gtk-theme oxygen-icon-theme papirus-icon-theme"
specific_packages="desktop-base plymouth-themes-mx synaptic mx-greybird-themes mx-comfort-themes mx-icons-start mx-sound-theme-borealis mx-sound-theme-fresh-and-clean mx21-artwork desktop-defaults-mx-applications desktop-defaults-mx-common"
desktop_base="$hardware_support $basic_packages $basic_themes $specific_packages"
case "$desktop" in
	'none')
	install_desktop=""
	;;
	'budgie')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter budgie-desktop arc-theme nautilus tilix
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.gnome.desktop.background:Budgie]
picture-uri=\"file:///usr/share/backgrounds/honesty-muted.jpg\"
[org.gnome.desktop.interface:Budgie]
gtk-theme=\"Arc\"
icon-theme=\"Papirus\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'cinnamon')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter cinnamon gnome-terminal nemo blueman
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.cinnamon.desktop.background]
picture-uri=\"file:///usr/share/backgrounds/honesty-muted.jpg\"
[org.cinnamon.desktop.interface]
gtk-theme=\"Materia\"
icon-theme=\"Papirus\"
[org.cinnamon.desktop.wm.preferences]
theme=\"Materia\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'cinnamon-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter task-cinnamon-desktop blueman
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.cinnamon.desktop.background]
picture-uri=\"file:///usr/share/backgrounds/honesty-muted.jpg\"
[org.cinnamon.desktop.interface]
gtk-theme=\"Materia\"
icon-theme=\"Papirus\"
[org.cinnamon.desktop.wm.preferences]
theme=\"Materia\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'enlightenment')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter enlightenment terminology
yes | DEBIAN_FRONTEND=noninteractive apt purge network-manager
yes | DEBIAN_FRONTEND=noninteractive apt install connman
find /usr/lib -type f -name enlightenment_system -exec chmod 4755 {} \;
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'gnome')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base gdm3 gnome-session gnome-shell gnome-control-center gnome-terminal nautilus gnome-icon-theme gnome-keyring libpam-gnome-keyring
"
	;;
	'gnome-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base gdm3 task-gnome-desktop
"
	;;
	'kde')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base sddm sddm-theme-breeze kde-plasma-desktop kwin-x11 dolphin plasma-discover konsole plasma-nm plasma-pa bluedevil libpam-kwallet5 powerdevil plasma-widgets-addons systemsettings plasma-look-and-feel-theme-mx plasma-modified-defaults-mx desktop-defaults-mx-kde
"
	;;
	'kde-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base sddm sddm-theme-breeze task-kde-desktop plasma-look-and-feel-theme-mx plasma-modified-defaults-mx desktop-defaults-mx-kde
"
	;;
	'lxde')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter lxde-core lxterminal pcmanfm lxde-icon-theme network-manager-gnome lxappearance lxinput blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'lxde-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter task-lxde-desktop network-manager-gnome blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'lxqt')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter lxqt-core qterminal pcmanfm-qt lxqt-theme-debian lxde-icon-theme network-manager-gnome mutter lxqt-powermanagement lxqt-themes oxygen-icon-theme blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'lxqt-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter task-lxqt-desktop network-manager-gnome blueman
yes | DEBIAN_FRONTEND=noninteractive apt purge sddm
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'mate')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter mate-desktop mate-session-manager marco mate-control-center mate-applets mate-indicator-applet mate-applet-brisk-menu mate-themes mate-icon-theme mate-terminal caja ayatana-indicator-application ayatana-indicator-bluetooth ayatana-indicator-datetime ayatana-indicator-power ayatana-indicator-session ayatana-indicator-sound network-manager-gnome mate-media mate-power-manager mate-notification-daemon blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'mate-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter task-mate-desktop blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'xfce')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter xfce4 xfce4-power-manager xfce4-terminal thunar xfce4-notifyd xfce4-whiskermenu-plugin network-manager-gnome blueman desktop-defaults-mx-xfce papirus-mxblue xfce4-docklike-plugin
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'xfce-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter task-xfce-desktop network-manager-gnome blueman desktop-defaults-mx-xfce papirus-mxblue xfce4-docklike-plugin
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
esac
cat >"$linuxloopsdir"/chroot/tmp/install_desktop <<MXLINUXDESKTOP
#!/bin/bash
$install_desktop
MXLINUXDESKTOP
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_desktop

if [ ! -z "$CUSTOM_PACKAGES" ]; then
	echo -e "yes | DEBIAN_FRONTEND=noninteractive apt install $CUSTOM_PACKAGES" >> "$linuxloopsdir"/chroot/tmp/install_desktop
fi

if [ -f ./custom_script ]; then cp ./custom_script "$linuxloopsdir"/chroot/tmp/install_custom; chmod 0755 "$linuxloopsdir"/chroot/tmp/install_custom; fi

if [ ! -z "$surface" ] && [ "$surface" == "Yes" ]; then install_surface_apt "linux-headers-* linux-image-*"; fi

generate_fstab

cmdline_extra="$CUSTOM_CMDLINE_PARAMS"
install_initramfstools

install_efi

cleanup

chroot "$linuxloopsdir"/chroot /tmp/init

umount_chroot
}

chroot_nixos()
{
mount --bind "$linuxloopsdir"/chroot "$linuxloopsdir"/chroot
mount --make-rprivate "$linuxloopsdir"/chroot
mkdir -p "$linuxloopsdir"/chroot/installroot/mnt
mount --bind "$linuxloopsdir"/chroot/installroot "$linuxloopsdir"/chroot/installroot
mount --make-rprivate "$linuxloopsdir"/chroot/installroot

download_lxc_image archlinux current default /installroot

mount --rbind "$linuxloopsdir"/chroot "$linuxloopsdir"/chroot/installroot/mnt
mount --make-rprivate "$linuxloopsdir"/chroot/installroot/mnt

mount_chroot /installroot
umount "$linuxloopsdir"/chroot/installroot/mnt/boot/efi
umount "$linuxloopsdir"/chroot/installroot/mnt/boot
boot_loop="$(losetup --show -fP "$destination_loop"p2)"
efi_loop="$(losetup --show -fP "$destination_loop"p1)"
mount "$boot_loop" "$linuxloopsdir"/chroot/installroot/mnt/boot
mount "$efi_loop" "$linuxloopsdir"/chroot/installroot/mnt/boot/efi

cat >"$linuxloopsdir"/chroot/installroot/tmp/init <<'NIXOSINIT'
#!/bin/bash
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib
/tmp/cleanup_container
/tmp/set_locale
useradd -s /bin/bash -m 'temp'
echo -e 'temp\ntemp' | passwd 'temp'
echo "temp      ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/90-wheel
groupadd -g 30000 nixbld
useradd -u 30000 -g nixbld -G nixbld nixbld
sudo -i -u temp bash << NIXOSINSTALL
sudo mkdir -p /nix && sudo chown -R temp /nix
curl -L https://nixos.org/nix/install | sh
. /home/temp/.nix-profile/etc/profile.d/nix.sh
nix-channel --add https://nixos.org/channels/nixos-22.05 nixpkgs
nix-channel --update
nix-env -f '<nixpkgs>' -iA nixos-install-tools
sudo nixos-install -I nixpkgs=/nix/var/nix/profiles/per-user/temp/channels/nixpkgs --root /mnt
NIXOSINSTALL
mount -t proc none /mnt/proc
mount -t sysfs none /mnt/sys
mount -t devtmpfs none /mnt/dev
mkdir -p --mode 1777 /mnt/tmp
mount -o bind /tmp /mnt/tmp
sudo LC_ALL=C chroot /mnt /nix/var/nix/profiles/system/activate
sudo LC_ALL=C chroot /mnt /run/current-system/sw/bin/bash --login << NIXOSFINALISE
/tmp/install_user
NIXOSFINALISE
#sudo LC_ALL=C chroot /mnt /run/current-system/sw/bin/bash --login
sudo umount /mnt/tmp
sudo umount /mnt/dev/shm
sudo umount /mnt/dev/pts
sudo umount /mnt/dev
sudo umount /mnt/sys
sudo umount /mnt/proc
/tmp/cleanup
exit
NIXOSINIT
chmod 0755 "$linuxloopsdir"/chroot/installroot/tmp/init

cleanup_container /installroot
set_locale /installroot

cat >"$linuxloopsdir"/chroot/installroot/tmp/install_user <<NIXOSUSER
echo -e '$userpass\n$userpass' | passwd '$username'
NIXOSUSER
chmod 0755 "$linuxloopsdir"/chroot/installroot/tmp/install_user

if [ -z "$desktop" ]; then desktop="gnome-full"; fi
case "$desktop" in
	'none')
	nixos_desktop=""
	;;
	'cinnamon-full')
	nixos_desktop="
services.xserver.enable = true;
services.xserver.displayManager.lightdm.enable = true;
services.xserver.desktopManager.cinnamon.enable = true;
"
	;;
	'gnome-full')
	nixos_desktop="
services.xserver.enable = true;
services.xserver.displayManager.gdm.enable = true;
services.xserver.displayManager.gdm.wayland = false;
services.xserver.desktopManager.gnome.enable = true;
"
	;;
	'kde-full')
	nixos_desktop="
services.xserver.enable = true;
services.xserver.displayManager.sddm.enable = true;
services.xserver.desktopManager.plasma5.enable = true;
"
	;;
	'lxqt-full')
	nixos_desktop="
services.xserver.enable = true;
services.xserver.displayManager.lightdm.enable = true;
services.xserver.desktopManager.lxqt.enable = true;
"
	;;
	'mate-full')
	nixos_desktop="
services.xserver.enable = true;
services.xserver.displayManager.lightdm.enable = true;
services.xserver.desktopManager.mate.enable = true;
"
	;;
	'pantheon-full')
	nixos_desktop="
services.xserver.enable = true;
services.xserver.displayManager.lightdm.enable = true;
services.xserver.desktopManager.pantheon.enable = true;
"
	;;
	'xfce-full')
	nixos_desktop="
services.xserver.enable = true;
services.xserver.displayManager.lightdm.enable = true;
services.xserver.desktopManager.xfce.enable = true;
"
	;;
esac

if [ ! -z "$CUSTOM_PACKAGES" ]; then
	echo -e "environment.systemPackages = with pkgs; [ $CUSTOM_PACKAGES ];" > "$linuxloopsdir"/chroot/installroot/tmp/install_desktop
fi

if [ -f ./custom_script ]; then cp ./custom_script "$linuxloopsdir"/chroot/installroot/tmp/install_custom; chmod 0755 "$linuxloopsdir"/chroot/installroot/tmp/install_custom; fi

cmdline_extra="$CUSTOM_CMDLINE_PARAMS"
install_nixos_config

cleanup /installroot

chroot "$linuxloopsdir"/chroot/installroot /tmp/init

losetup -d "$efi_loop"
losetup -d "$boot_loop"
umount_chroot /installroot

umount -R "$linuxloopsdir"/chroot/installroot/mnt
umount "$linuxloopsdir"/chroot/installroot
rm -r "$linuxloopsdir"/chroot/installroot
umount "$linuxloopsdir"/chroot
}

chroot_opensuse()
{
download_lxc_image opensuse tumbleweed default

mount_chroot

cat >"$linuxloopsdir"/chroot/tmp/init <<'OPENSUSEINIT'
#!/bin/bash
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib
/tmp/cleanup_container
sed -i 's@# autoAgreeWithLicenses = no@autoAgreeWithLicenses = yes@g' /etc/zypp/zypper.conf
zypper refresh
zypper install --no-confirm -f $(rpm -q -a --qf '%{NAME} ' | sed 's@ gpg-pubkey@@g')
zypper install --no-confirm kernel-default kernel-firmware-all wireless-regdb glibc-i18ndata patterns-base-base nano ntfs-3g sudo ModemManager NetworkManager wpa_supplicant bluez pulseaudio alsa-utils alsa-firmware cryptsetup nano e2fsprogs ntfsprogs device-mapper cantarell-fonts acpid curl thermald bash-completion ca-certificates gpg2 polkit postfix system-group-wheel xdg-user-dirs zstd fwupd-efi patchutils net-tools usb_modeswitch upower efibootmgr grub2-x86_64-efi grub2-branding-openSUSE bind ucode-amd ucode-intel
systemctl disable wicked.service
systemctl enable named.service NetworkManager.service thermald.service upower.service
/tmp/set_locale
/tmp/install_user
/tmp/install_desktop
if [ -f /tmp/install_custom ]; then /tmp/install_custom; fi
/tmp/generate_fstab
/tmp/install_initramfs
/tmp/install_efi
sed -i 's@solver.onlyRequires = true@# solver.onlyRequires = false@g' /etc/zypp/zypp.conf
if [ -d /etc/NetworkManager/conf.d ]; then echo -e '[connection]\nwifi.powersave = 2' > /etc/NetworkManager/conf.d/99-wifi-powersave-off.conf; fi
/tmp/cleanup
exit
OPENSUSEINIT
chmod 0755 "$linuxloopsdir"/chroot/tmp/init

cleanup_container
set_locale

cat >"$linuxloopsdir"/chroot/tmp/install_user <<OPENSUSEUSER
#!/bin/bash
useradd -s /bin/bash -m '$username'
echo -e '$userpass\n$userpass' | passwd '$username'
usermod -aG wheel '$username'
echo -e "Defaults secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"\nroot ALL=(ALL) ALL\n@includedir /etc/sudoers.d" > /etc/sudoers
echo "%wheel      ALL=(ALL) ALL" > /etc/sudoers.d/90-wheel
cat >/etc/polkit-1/rules.d/50-default.rules <<'POLKIT'
polkit.addAdminRule(function(action, subject) {
    return ["unix-group:wheel"];
});
POLKIT
OPENSUSEUSER
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_user

if [ -z "$desktop" ]; then desktop="gnome"; fi
hardware_support="at-spi2-core avahi cups cups-filters nss-mdns system-config-printer"
basic_packages="gvfs-fuse PackageKit udisks2 xdg-user-dirs-gtk"
basic_themes="adwaita-icon-theme breeze breeze-gtk dmz-icon-theme-cursors dejavu-fonts google-roboto-fonts gnome-backgrounds materia-gtk-theme oxygen-icon-theme papirus-icon-theme"
specific_packages="adobe-sourcecodepro-fonts plymouth-branding-openSUSE wallpaper-branding-openSUSE"
desktop_base="$hardware_support $basic_packages $basic_themes $specific_packages"
desktop_services="avahi-dnsconfd.service cups-browsed.service udisks2.service"
case "$desktop" in
	'none')
	install_desktop=""
	;;
	'budgie')
	install_desktop="
zypper install --no-confirm $desktop_base lightdm lightdm-slick-greeter-branding-openSUSE patterns-budgie-budgie gnome-keyring-pam polkit-gnome gnome-terminal nautilus NetworkManager-applet
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'budgie-full')
	install_desktop="
sed -i 's@solver.onlyRequires = true@# solver.onlyRequires = false@g' /etc/zypp/zypp.conf
zypper install --no-confirm $desktop_base lightdm lightdm-slick-greeter-branding-openSUSE patterns-budgie-budgie gnome-keyring-pam polkit-gnome gnome-terminal nautilus NetworkManager-applet
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'cinnamon')
	install_desktop="
zypper install --no-confirm $desktop_base lightdm lightdm-slick-greeter-branding-openSUSE patterns-cinnamon-cinnamon cinnamon-settings-daemon gnome-keyring-pam polkit-gnome gnome-terminal nemo NetworkManager-applet mint-x-icon-theme mint-y-icon-theme python3-requests blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'cinnamon-full')
	install_desktop="
sed -i 's@solver.onlyRequires = true@# solver.onlyRequires = false@g' /etc/zypp/zypp.conf
zypper install --no-confirm $desktop_base lightdm lightdm-slick-greeter-branding-openSUSE patterns-cinnamon-cinnamon cinnamon-settings-daemon gnome-keyring-pam polkit-gnome gnome-terminal nemo NetworkManager-applet mint-x-icon-theme mint-y-icon-theme python3-requests blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'deepin')
	install_desktop="
zypper install --no-confirm $desktop_base lightdm lightdm-slick-greeter-branding-openSUSE patterns-deepin-deepin deepin-desktop-schemas-branding-openSUSE deepin-terminal deepin-file-manager deepin-polkit-agent NetworkManager-applet
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'deepin-full')
	install_desktop="
sed -i 's@solver.onlyRequires = true@# solver.onlyRequires = false@g' /etc/zypp/zypp.conf
zypper install --no-confirm $desktop_base lightdm lightdm-slick-greeter-branding-openSUSE patterns-deepin-deepin deepin-desktop-schemas-branding-openSUSE deepin-terminal deepin-file-manager deepin-polkit-agent NetworkManager-applet
zypper remove --no-confirm sddm
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'enlightenment')
	install_desktop="
zypper remove --no-confirm NetworkManager
zypper install --no-confirm $desktop_base lightdm lightdm-slick-greeter-branding-openSUSE patterns-enlightenment-enlightenment terminology python3-dbus-python econnman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
systemctl disable NetworkManager.service
systemctl enable connman.service
"
	;;
	'enlightenment-full')
	install_desktop="
sed -i 's@solver.onlyRequires = true@# solver.onlyRequires = false@g' /etc/zypp/zypp.conf
zypper remove --no-confirm NetworkManager
zypper install --no-confirm $desktop_base lightdm lightdm-slick-greeter-branding-openSUSE patterns-enlightenment-enlightenment terminology python3-dbus-python econnman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
systemctl disable NetworkManager.service
systemctl enable connman.service
"
	;;
	'gnome')
	install_desktop="
zypper install --no-confirm $desktop_base gdm-branding-openSUSE patterns-gnome-gnome gnome-keyring-pam polkit-gnome gnome-terminal nautilus NetworkManager-applet
"
	;;
	'gnome-full')
	install_desktop="
sed -i 's@solver.onlyRequires = true@# solver.onlyRequires = false@g' /etc/zypp/zypp.conf
zypper install --no-confirm $desktop_base gdm-branding-openSUSE patterns-gnome-gnome gnome-keyring-pam polkit-gnome gnome-terminal nautilus NetworkManager-applet
"
	;;
	'kde')
	install_desktop="
zypper install --no-confirm $desktop_base sddm-branding-openSUSE patterns-kde-kde konsole NetworkManager-applet webenginepart plasma-nm5 dolphin discover discover-backend-packagekit plasma5-workspace-wallpapers plasma5-pa plasma5-addons breeze5-wallpapers
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'kde-full')
	install_desktop="
sed -i 's@solver.onlyRequires = true@# solver.onlyRequires = false@g' /etc/zypp/zypp.conf
zypper install --no-confirm $desktop_base sddm-branding-openSUSE patterns-kde-kde konsole NetworkManager-applet webenginepart plasma-nm5 dolphin discover discover-backend-packagekit plasma5-workspace-wallpapers plasma5-pa plasma5-addons breeze5-wallpapers
zypper remove --no-confirm sddm
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'lxde')
	install_desktop="
zypper install --no-confirm $desktop_base lightdm lightdm-slick-greeter-branding-openSUSE patterns-lxde-lxde lxsession lxappearance nuoveXT2-icon-theme lxterminal lxde-common lxpanel pcmanfm NetworkManager-applet blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'lxde-full')
	install_desktop="
sed -i 's@solver.onlyRequires = true@# solver.onlyRequires = false@g' /etc/zypp/zypp.conf
zypper install --no-confirm $desktop_base lightdm lightdm-slick-greeter-branding-openSUSE patterns-lxde-lxde lxsession lxappearance nuoveXT2-icon-theme lxterminal lxde-common lxpanel pcmanfm NetworkManager-applet blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'lxqt')
	install_desktop="
zypper install --no-confirm $desktop_base lightdm lightdm-slick-greeter-branding-openSUSE patterns-lxqt-lxqt openbox qterminal pcmanfm-qt NetworkManager-applet blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'lxqt-full')
	install_desktop="
sed -i 's@solver.onlyRequires = true@# solver.onlyRequires = false@g' /etc/zypp/zypp.conf
zypper install --no-confirm $desktop_base lightdm lightdm-slick-greeter-branding-openSUSE patterns-lxqt-lxqt openbox qterminal pcmanfm-qt NetworkManager-applet blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'mate')
	install_desktop="
zypper install --no-confirm $desktop_base lightdm lightdm-slick-greeter-branding-openSUSE patterns-mate-mate mate-panel-branding-openSUSE mate-themes mate-terminal mate-media mate-menus caja NetworkManager-applet blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'mate-full')
	install_desktop="
sed -i 's@solver.onlyRequires = true@# solver.onlyRequires = false@g' /etc/zypp/zypp.conf
zypper install --no-confirm $desktop_base lightdm lightdm-slick-greeter-branding-openSUSE patterns-mate-mate mate-panel-branding-openSUSE mate-themes mate-terminal mate-media mate-menus caja NetworkManager-applet blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'xfce')
	install_desktop="
zypper install --no-confirm $desktop_base lightdm lightdm-slick-greeter-branding-openSUSE patterns-xfce-xfce adwaita-xfce-icon-theme libxfce4ui-branding-openSUSE xfce4-settings-branding-openSUSE xfce4-power-manager-plugin xfce4-power-manager-branding-openSUSE xfce4-pulseaudio-plugin xfce4-terminal thunar NetworkManager-applet blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'xfce-full')
	install_desktop="
sed -i 's@solver.onlyRequires = true@# solver.onlyRequires = false@g' /etc/zypp/zypp.conf
zypper install --no-confirm $desktop_base lightdm lightdm-slick-greeter-branding-openSUSE patterns-xfce-xfce adwaita-xfce-icon-theme libxfce4ui-branding-openSUSE xfce4-settings-branding-openSUSE xfce4-power-manager-plugin xfce4-power-manager-branding-openSUSE xfce4-pulseaudio-plugin xfce4-terminal thunar NetworkManager-applet blueman
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[LightDM]\nlogind-check-graphical=true\n\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
esac
cat >"$linuxloopsdir"/chroot/tmp/install_desktop <<OPENSUSEDESKTOP
#!/bin/bash
$install_desktop
systemctl enable $desktop_services
OPENSUSEDESKTOP
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_desktop

if [ ! -z "$CUSTOM_PACKAGES" ]; then
	echo -e "zypper install --no-confirm $CUSTOM_PACKAGES" >> "$linuxloopsdir"/chroot/tmp/install_desktop
fi

if [ -f ./custom_script ]; then cp ./custom_script "$linuxloopsdir"/chroot/tmp/install_custom; chmod 0755 "$linuxloopsdir"/chroot/tmp/install_custom; fi

generate_fstab

cmdline_extra="multipath=off $CUSTOM_CMDLINE_PARAMS"
install_dracut

install_efi

cleanup

chroot "$linuxloopsdir"/chroot /tmp/init

umount_chroot
}

chroot_parrot()
{
download_lxc_image debian bullseye default

mount_chroot

cat >"$linuxloopsdir"/chroot/tmp/init <<'PARROTINIT'
#!/bin/bash
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib
/tmp/cleanup_container
sed -i 's@ main@ main contrib non-free@g' /etc/apt/sources.list
yes | DEBIAN_FRONTEND=noninteractive apt update
yes | DEBIAN_FRONTEND=noninteractive apt purge libexpat*
yes | DEBIAN_FRONTEND=noninteractive apt install apt-utils ca-certificates console-setup kmod gnupg
rm -f /etc/apt/sources.list
cat >/etc/apt/sources.list.d/parrot.list <<'SOURCES'
deb https://azure.deb.parrot.sh/parrot parrot main contrib non-free
deb https://azure.deb.parrot.sh/parrot parrot-security main contrib non-free
SOURCES
cat >/etc/apt/apt.conf.d/99linuxloops <<'RECOMMENDS'
APT::Install-Recommends "0";
APT::Get::Install-Recommends "false";
RECOMMENDS
yes | DEBIAN_FRONTEND=noninteractive apt update --allow-insecure-repositories
yes | DEBIAN_FRONTEND=noninteractive apt install parrot-archive-keyring --allow-unauthenticated
yes | DEBIAN_FRONTEND=noninteractive apt install -o APT::Immediate-Configure=false --reinstall $(apt list --installed | cut -d'/' -f1 | sed '1d' | sed -z 's@\n@ @g') parrot-core
yes | DEBIAN_FRONTEND=noninteractive dpkg --configure -a
yes | DEBIAN_FRONTEND=noninteractive apt update
yes | DEBIAN_FRONTEND=noninteractive apt install linux-image-amd64 firmware-linux wireless-regdb bash sudo modemmanager network-manager wpasupplicant bluez cryptsetup-initramfs e2fsprogs ntfs-3g nano acpid curl thermald bash-completion ca-certificates gnupg-utils policykit-1 xdg-user-dirs zstd fwupd-signed patchutils net-tools usb-modeswitch upower efibootmgr grub-efi grub-efi-amd64-bin grub-efi-ia32-bin shim-signed bind9-host dns-root-data amd64-microcode intel-microcode lsb-release parrot-themes
systemctl enable acpid.service systemd-resolved.service upower.service
/tmp/set_locale
/tmp/install_user
/tmp/install_desktop
if [ -f /tmp/install_surface ]; then /tmp/install_surface; fi
if [ -f /tmp/install_custom ]; then /tmp/install_custom; fi
/tmp/generate_fstab
/tmp/install_initramfs
/tmp/install_efi
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt autoremove
/tmp/cleanup
exit
PARROTINIT
chmod 0755 "$linuxloopsdir"/chroot/tmp/init

cleanup_container
set_locale

cat >"$linuxloopsdir"/chroot/tmp/install_user <<PARROTUSER
#!/bin/bash
useradd -s /bin/bash -m '$username'
echo -e '$userpass\n$userpass' | passwd '$username'
usermod -aG sudo '$username'
PARROTUSER
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_user

if [ -z "$desktop" ]; then desktop="gnome"; fi
hardware_support="alsa-utils alsa-ucm-conf alsa-topology-conf at-spi2-core avahi-discover avahi-dnsconfd cups cups-browsed cups-filters libnss-mdns pulseaudio system-config-printer xserver-xorg"
basic_packages="gvfs-fuse packagekit udisks2 xdg-user-dirs-gtk"
basic_themes="adwaita-icon-theme breeze-gtk-theme breeze-icon-theme dmz-cursor-theme fonts-dejavu fonts-noto fonts-roboto gnome-backgrounds materia-gtk-theme oxygen-icon-theme papirus-icon-theme"
specific_packages="desktop-base plymouth-themes synaptic parrot-updater parrot-wallpapers"
desktop_base="$hardware_support $basic_packages $basic_themes $specific_packages"
desktop_services="avahi-daemon.service cups.service cups-browsed.service"
case "$desktop" in
	'none')
	install_desktop=""
	;;
	'budgie')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter budgie-desktop arc-theme nemo gnome-terminal libgdk-pixbuf2.0-bin
systemctl enable $desktop_services
cat >/etc/xdg/autostart/budgie-nemo.desktop <<'NEMODESKTOP'
[Desktop Entry]
Type=Application
Name=Nemo
Comment=Start Nemo desktop at log in
Exec=nemo-desktop
OnlyShowIn=Budgie;
AutostartCondition=GSettings org.nemo.desktop show-desktop-icons
X-GNOME-AutoRestart=true
NoDisplay=true
NEMODESKTOP
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.gnome.desktop.background:Budgie]
picture-uri=\"file:///usr/share/backgrounds/kali/kali-layers-16x9.png\"
[org.gnome.desktop.interface:Budgie]
gtk-theme=\"Arc\"
icon-theme=\"Papirus\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'budgie-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter budgie-desktop arc-theme nautilus gnome-terminal libgdk-pixbuf2.0-bin
systemctl enable $desktop_services
cat >/etc/xdg/autostart/budgie-nemo.desktop <<'NEMODESKTOP'
[Desktop Entry]
Type=Application
Name=Nemo
Comment=Start Nemo desktop at log in
Exec=nemo-desktop
OnlyShowIn=Budgie;
AutostartCondition=GSettings org.nemo.desktop show-desktop-icons
X-GNOME-AutoRestart=true
NoDisplay=true
NEMODESKTOP
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.gnome.desktop.background:Budgie]
picture-uri=\"file:///usr/share/backgrounds/kali/kali-layers-16x9.png\"
[org.gnome.desktop.interface:Budgie]
gtk-theme=\"Arc\"
icon-theme=\"Papirus\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'cinnamon')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter task-cinnamon-desktop gnome-terminal blueman
systemctl enable $desktop_services
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.cinnamon.desktop.interface]
gtk-theme=\"Materia\"
icon-theme=\"Papirus\"
[org.cinnamon.desktop.wm.preferences]
theme=\"Materia\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'cinnamon-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter task-cinnamon-desktop gnome-terminal blueman
systemctl enable $desktop_services
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.cinnamon.desktop.interface]
gtk-theme=\"Materia\"
icon-theme=\"Papirus\"
[org.cinnamon.desktop.wm.preferences]
theme=\"Materia\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'enlightenment')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter enlightenment terminology
yes | DEBIAN_FRONTEND=noninteractive apt purge network-manager
yes | DEBIAN_FRONTEND=noninteractive apt install connman
systemctl enable $desktop_services connman.service
find /usr/lib -type f -name enlightenment_system -exec chmod 4755 {} \;
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'enlightenment-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter enlightenment terminology
yes | DEBIAN_FRONTEND=noninteractive apt purge network-manager
yes | DEBIAN_FRONTEND=noninteractive apt install connman
systemctl enable $desktop_services connman.service
find /usr/lib -type f -name enlightenment_system -exec chmod 4755 {} \;
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'gnome')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base gdm3 parrot-desktop-gnome gnome-keyring libpam-gnome-keyring
systemctl enable $desktop_services
"
	;;
	'gnome-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base gdm3 parrot-desktop-gnome gnome-keyring
systemctl enable $desktop_services
"
	;;
	'i3')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter parrot-desktop-i3 pavucontrol pasystray network-manager-gnome blueman
systemctl enable $desktop_services
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'i3-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter parrot-desktop-i3 pavucontrol pasystray network-manager-gnome blueman
systemctl enable $desktop_services
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'kde')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base sddm parrot-desktop-kde kwin-x11 dolphin plasma-discover konsole plasma-nm plasma-pa bluedevil libpam-kwallet5 powerdevil plasma-widgets-addons systemsettings
systemctl enable $desktop_services
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'kde-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base sddm parrot-desktop-kde kwin-x11 plasma-nm plasma-pa powerdevil bluedevil libpam-kwallet5
systemctl enable $desktop_services
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'lxde')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter lxde network-manager-gnome blueman
systemctl enable $desktop_services
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'lxde-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter lxde network-manager-gnome blueman
systemctl enable $desktop_services
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'mate')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter parrot-desktop-mate mate-power-manager mate-media blueman
systemctl enable $desktop_services
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'mate-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter parrot-desktop-mate mate-power-manager mate-media blueman
systemctl enable $desktop_services
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'xfce')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter parrot-desktop-xfce blueman
systemctl enable $desktop_services
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
	'xfce-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter parrot-desktop-xfce blueman
systemctl enable $desktop_services
mkdir -p /etc/lightdm/lightdm.conf.d
echo -e '[Seat:*]\ngreeter-hide-users=false\n' > /etc/lightdm/lightdm.conf.d/99-linuxloops.conf
"
	;;
esac
cat >"$linuxloopsdir"/chroot/tmp/install_desktop <<PARROTDESKTOP
#!/bin/bash
$install_desktop
PARROTDESKTOP
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_desktop

if [ ! -z "$CUSTOM_PACKAGES" ]; then
	echo -e "yes | DEBIAN_FRONTEND=noninteractive apt install $CUSTOM_PACKAGES" >> "$linuxloopsdir"/chroot/tmp/install_desktop
fi

if [ -f ./custom_script ]; then cp ./custom_script "$linuxloopsdir"/chroot/tmp/install_custom; chmod 0755 "$linuxloopsdir"/chroot/tmp/install_custom; fi

if [ ! -z "$surface" ] && [ "$surface" == "Yes" ]; then install_surface_apt "linux-headers-* linux-image-*"; fi

generate_fstab

cmdline_extra="$CUSTOM_CMDLINE_PARAMS"
install_initramfstools

install_efi

cleanup

chroot "$linuxloopsdir"/chroot /tmp/init

umount_chroot
}

chroot_pop-os()
{
download_lxc_image ubuntu jammy default

mount_chroot

cat >"$linuxloopsdir"/chroot/tmp/init <<'POP_OSINIT'
#!/bin/bash
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib
/tmp/cleanup_container
cat >/etc/apt/preferences.d/kernelstub <<'KERNELSTUB'
Package: kernelstub
Pin: release *
Pin-Priority: -1
KERNELSTUB
yes | DEBIAN_FRONTEND=noninteractive apt install software-properties-common
apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 63C46DF0140D738961429F4E204DD8AEC33A7AFF
add-apt-repository "deb http://apt.pop-os.org/release $(lsb_release -cs) main" -y
add-apt-repository "deb http://apt.pop-os.org/proprietary $(lsb_release -cs) main" -y
yes | DEBIAN_FRONTEND=noninteractive apt update
yes | DEBIAN_FRONTEND=noninteractive apt install pop-default-settings
yes | DEBIAN_FRONTEND=noninteractive apt update
yes | DEBIAN_FRONTEND=noninteractive apt install -o APT::Immediate-Configure=false --reinstall $(apt list --installed | cut -d'/' -f1 | sed '1d' | sed -z 's@\n@ @g')
yes | DEBIAN_FRONTEND=noninteractive dpkg --configure -a
yes | DEBIAN_FRONTEND=noninteractive apt install apt-utils console-setup kmod
yes | DEBIAN_FRONTEND=noninteractive apt update
yes | DEBIAN_FRONTEND=noninteractive apt install linux-generic linux-firmware wireless-regdb bash sudo modemmanager network-manager wpasupplicant bluez cryptsetup-initramfs e2fsprogs ntfs-3g nano acpid curl thermald bash-completion ca-certificates gnupg-utils policykit-1 xdg-user-dirs zstd fwupd-signed patchutils net-tools usb-modeswitch upower efibootmgr grub-efi grub-efi-amd64-signed grub-efi-ia32-bin shim-signed bind9-host dns-root-data update-manager-core snapd
systemctl enable acpid.service systemd-resolved.service upower.service
/tmp/set_locale
/tmp/install_user
/tmp/install_desktop
if [ -f /tmp/install_surface ]; then /tmp/install_surface; fi
if [ -f /tmp/install_custom ]; then /tmp/install_custom; fi
/tmp/generate_fstab
/tmp/install_initramfs
/tmp/install_efi
yes | DEBIAN_FRONTEND=noninteractive apt autoremove
/tmp/cleanup
exit
POP_OSINIT
chmod 0755 "$linuxloopsdir"/chroot/tmp/init

cleanup_container
set_locale

cat >"$linuxloopsdir"/chroot/tmp/install_user <<POP_OSUSER
#!/bin/bash
userdel -r -f ubuntu
useradd -s /bin/bash -m '$username'
echo -e '$userpass\n$userpass' | passwd '$username'
usermod -aG sudo '$username'
POP_OSUSER
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_user

if [ -z "$desktop" ]; then desktop="full"; fi
case "$desktop" in
	'full')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install pop-desktop
"
	;;
esac
cat >"$linuxloopsdir"/chroot/tmp/install_desktop <<POP_OSDESKTOP
#!/bin/bash
$install_desktop
POP_OSDESKTOP
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_desktop

if [ ! -z "$CUSTOM_PACKAGES" ]; then
	echo -e "yes | apt install $CUSTOM_PACKAGES" >> "$linuxloopsdir"/chroot/tmp/install_desktop
fi

if [ -f ./custom_script ]; then cp ./custom_script "$linuxloopsdir"/chroot/tmp/install_custom; chmod 0755 "$linuxloopsdir"/chroot/tmp/install_custom; fi

if [ ! -z "$surface" ] && [ "$surface" == "Yes" ]; then install_surface_apt "linux-generic-* linux-headers-* linux-image-* linux-modules-*"; fi

generate_fstab

cmdline_extra="$CUSTOM_CMDLINE_PARAMS"
install_initramfstools

install_efi

cleanup

chroot "$linuxloopsdir"/chroot /tmp/init

umount_chroot
}

chroot_rockylinux()
{
download_lxc_image rockylinux 9 default

mount_chroot

cat >"$linuxloopsdir"/chroot/tmp/init <<'ROCKYLINUXINIT'
#!/bin/bash
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib
/tmp/cleanup_container
yes | dnf update
yes | dnf reinstall "*"
yes | dnf install epel-release
rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL*
yes | dnf update
yes | dnf install kernel linux-firmware iwl100-firmware iwl1000-firmware iwl105-firmware iwl135-firmware iwl2000-firmware iwl2030-firmware iwl3160-firmware iwl5000-firmware iwl5150-firmware iwl6000g2a-firmware iwl6000g2b-firmware iwl6050-firmware iwl7260-firmware wireless-regdb glibc-locale-source ntfs-3g bash sudo ModemManager NetworkManager-bluetooth NetworkManager-wifi wpa_supplicant bluez cryptsetup e2fsprogs ntfsprogs nano acpid curl thermald bash-completion ca-certificates gpg polkit xdg-user-dirs zstd fwupd patchutils net-tools usb_modeswitch upower efibootmgr bind nss-mdns systemd-resolved dbus-daemon grub2-efi shim
systemctl enable acpid.service dbus.socket dbus-daemon.service named.service NetworkManager.service systemd-resolved.service thermald.service
systemctl enable --global dbus.socket dbus-daemon.service
/tmp/set_locale
/tmp/install_user
/tmp/install_desktop
if [ -f /tmp/install_surface ]; then /tmp/install_surface; fi
/tmp/generate_fstab
/tmp/install_initramfs
/tmp/install_efi
yes | dnf autoremove
/tmp/cleanup
exit
ROCKYLINUXINIT
chmod 0755 "$linuxloopsdir"/chroot/tmp/init

cleanup_container
set_locale

cat >"$linuxloopsdir"/chroot/tmp/install_user <<ROCKYLINUXUSER
#!/bin/bash
useradd -s /bin/bash -m '$username'
echo -e '$userpass\n$userpass' | passwd '$username'
usermod -aG wheel '$username'
echo "%wheel      ALL=(ALL) ALL" > /etc/sudoers.d/90-wheel
ROCKYLINUXUSER
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_user

if [ -z "$desktop" ]; then desktop="full"; fi
case "$desktop" in
	'none')
	install_desktop=""
	;;
	'full')
	install_desktop="
yes | dnf install @\"Server with GUI\"
yes | dnf remove firewalld
systemctl enable cups-browsed.service
systemctl set-default graphical
"
	;;
esac
cat >"$linuxloopsdir"/chroot/tmp/install_desktop <<ROCKYLINUXDESKTOP
#!/bin/bash
$install_desktop
ROCKYLINUXDESKTOP
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_desktop

if [ ! -z "$CUSTOM_PACKAGES" ]; then
	echo -e "yes | dnf install $CUSTOM_PACKAGES" >> "$linuxloopsdir"/chroot/tmp/install_desktop
fi

if [ -f ./custom_script ]; then cp ./custom_script "$linuxloopsdir"/chroot/tmp/install_custom; chmod 0755 "$linuxloopsdir"/chroot/tmp/install_custom; fi

generate_fstab

cmdline_extra="selinux=0 $CUSTOM_CMDLINE_PARAMS"
install_dracut

install_efi

cleanup

chroot "$linuxloopsdir"/chroot /tmp/init

umount_chroot
}

chroot_solus()
{
mount --bind "$linuxloopsdir"/chroot "$linuxloopsdir"/chroot
mount --make-rprivate "$linuxloopsdir"/chroot
mkdir -p "$linuxloopsdir"/chroot/installroot/mnt
mount --bind "$linuxloopsdir"/chroot/installroot "$linuxloopsdir"/chroot/installroot
mount --make-rprivate "$linuxloopsdir"/chroot/installroot

curl -L https://mirrors.rit.edu/solus/images/$(curl -L https://mirrors.rit.edu/solus/images | grep 'alt="\[DIR]"' | tr '>' '\n' | grep '<a href' | cut -d'"' -f 2 | cut -d'/' -f 1 | sort -r | head -1)/Solus-$(curl -L https://mirrors.rit.edu/solus/images | grep 'alt="\[DIR]"' | tr '>' '\n' | grep '<a href' | cut -d'"' -f 2 | cut -d'/' -f 1 | sort -r | head -1)-Budgie.iso -o "$linuxloopsdir"/solus.iso
mkdir -p "$linuxloopsdir"/tmpmountpoint "$linuxloopsdir"/tmpmountpoint2 "$linuxloopsdir"/tmpmountpoint3
mount "$linuxloopsdir"/solus.iso "$linuxloopsdir"/tmpmountpoint
mount "$linuxloopsdir"/tmpmountpoint/LiveOS/squashfs.img "$linuxloopsdir"/tmpmountpoint2
mount "$linuxloopsdir"/tmpmountpoint2/LiveOS/rootfs.img "$linuxloopsdir"/tmpmountpoint3
cp -aT "$linuxloopsdir"/tmpmountpoint3 "$linuxloopsdir"/chroot/installroot
umount "$linuxloopsdir"/tmpmountpoint3
umount "$linuxloopsdir"/tmpmountpoint2
umount "$linuxloopsdir"/tmpmountpoint
rm -f "$linuxloopsdir"/solus.iso

mount --rbind "$linuxloopsdir"/chroot "$linuxloopsdir"/chroot/installroot/mnt
mount --make-rprivate "$linuxloopsdir"/chroot/installroot/mnt

mount_chroot /installroot

cat >"$linuxloopsdir"/chroot/installroot/tmp/init <<'SOLUSINIT'
#!/bin/bash
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib
/tmp/cleanup_container
eopkg ur -D /mnt
eopkg it baselayout --ignore-safety -y -D /mnt
cp -rT /mnt/etc/skel /mnt/root
echo 'CBM_FORCE_LEGACY=1' > /mnt/etc/environment
eopkg it -c system.base -y -D /mnt
eopkg it nano perl -y -D /mnt
mkdir -p /mnt/dev/pts /mnt/dev/shm /mnt/etc /mnt/proc /mnt/sys /mnt/tmp
chmod 1777 /mnt/tmp
mount -t proc none /mnt/proc
mount -t sysfs none /mnt/sys
mount -t devtmpfs none /mnt/dev
mount -t devpts none /mnt/dev/pts
mount -t tmpfs -o mode=1777,nosuid,nodev,strictatime none /mnt/dev/shm
/tmp/install
rm -r /mnt/tmp/*
if mountpoint -q /mnt/dev/shm; then umount /mnt/dev/shm; fi
if mountpoint -q /mnt/dev/pts; then umount /mnt/dev/pts; fi
if mountpoint -q /mnt/dev; then umount /mnt/dev; fi
if mountpoint -q /mnt/sys; then umount /mnt/sys; fi
if mountpoint -q /mnt/proc; then umount /mnt/proc; fi
exit
SOLUSINIT
chmod 0755 "$linuxloopsdir"/chroot/installroot/tmp/init

cat >"$linuxloopsdir"/chroot/installroot/tmp/install <<SOLUSINSTALL
cat << 'CHROOT' | chroot /mnt /bin/bash
#!/bin/bash
/tmp/cleanup_container
echo "\$(hexdump -vn16 -e'4/4 "%08X" 1 "\n"' /dev/urandom)" > /etc/machine-id
usysconf run -f ssl-certs
eopkg it -y linux-current linux-firmware wireless-regdb bash sudo modem-manager network-manager wpa_supplicant bluez cryptsetup e2fsprogs ntfs-3g nano acpid2 curl thermald bash-completion ca-certs gnupg polkit xdg-user-dirs zstd patch usb-modeswitch upower efibootmgr grub2 clr-boot-manager bind-utils kbd
systemctl enable getty@.service systemd-resolved.service NetworkManager.service
/tmp/set_locale
/tmp/install_user
/tmp/install_desktop
if [ -f /tmp/install_custom ]; then /tmp/install_custom; fi
/tmp/generate_fstab
grep -q '^GRUB_DISABLE_OS_PROBER=' /etc/default/grub || echo -e 'GRUB_DISABLE_OS_PROBER=true' >> /etc/default/grub
mkdir -p /etc/kernel/cmdline.d
if [ "$encryption" == "Yes" ]; then echo '\\\$linuxloops_args rd.luks.uuid=$(blkid -s UUID -o value "$destination_loop"p3)' > /etc/kernel/cmdline.d/zzzlinuxloops.conf; else echo '\\\$linuxloops_args' > /etc/kernel/cmdline.d/zzzlinuxloops.conf; fi
mkdir -p /etc/kernel/initrd.d /usr/lib/linuxloops
cp /tmp/install_initramfs /usr/lib/linuxloops/linuxloops
chmod 0755 /usr/lib/linuxloops/linuxloops
cd /usr/lib/linuxloops
find . | cpio -o -H newc | gzip > /etc/kernel/initrd.d/linuxloops
cd /tmp
eopkg it -y linux-headers linux-current-headers binutils cmake gcc make meson pkg-config check-devel efivar-devel glibc-devel gnu-efi-devel systemd-devel util-linux-devel
mkdir -p ./clr-boot-manager/out
curl -L https://github.com/clearlinux/clr-boot-manager/releases/download/v3.2.12/clr-boot-manager-3.2.12.tar.xz -o clr-boot-manager.tar.xz
tar xf clr-boot-manager.tar.xz -C ./clr-boot-manager --strip 1
cd ./clr-boot-manager/out
kernel="\$(echo \$(ls /lib/modules/) | cut -d' ' -f1)"
sed -i "s@if (\!boot_manager_set_uname(r, uts.release)) {@if (\!boot_manager_set_uname(r, \"\$kernel\")) {@g" ../src/bootman/bootman.c
meson --prefix=/usr -Dwith-grub2-backend=true -Dwith-kernel-namespace=com.solus-project -Dwith-kernel-modules-dir=/lib/modules ..
ninja
cp ./src/clr-boot-manager /bin/clr-boot-manager
CBM_FORCE_LEGACY=1 /bin/clr-boot-manager update
rm /bin/clr-boot-manager
eopkg rmf -y linux-headers linux-current-headers binutils cmake gcc make meson pkg-config check-devel efivar-devel glibc-devel gnu-efi-devel systemd-devel util-linux-devel
cd /
/tmp/cleanup
CHROOT
#chroot /mnt /bin/bash
for ROOT in \$(find /proc/*/root 2>/dev/null)
do
        LINK="\$(readlink -f \$ROOT)"
        if echo "\$LINK" | grep -q "$linuxloopsdir"/chroot/installroot/mnt
        then
                PID=\$(basename \$(dirname "\$ROOT"))
                kill -9 \$PID
        fi
done
sleep 5
SOLUSINSTALL
chmod 0755 "$linuxloopsdir"/chroot/installroot/tmp/install

mkdir -p "$linuxloopsdir"/chroot/tmp

cleanup_container /installroot
cleanup_container
set_locale

cat >"$linuxloopsdir"/chroot/tmp/install_user <<SOLUSUSER
#!/bin/bash
useradd -s /bin/bash -m '$username'
echo -e '$userpass\n$userpass' | passwd '$username'
usermod -aG sudo '$username'
SOLUSUSER
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_user

if [ -z "$desktop" ]; then desktop="budgie"; fi
hardware_support="alsa-utils at-spi2 avahi cups cups-filters sof-firmware nss-mdns pulseaudio system-config-printer xorg-driver-input-evdev xorg-driver-input-libinput"
basic_packages="gvfs udisks xdg-user-dirs-gtk"
basic_themes="adwaita-icon-theme breeze-cursor-theme breeze-gtk-theme breeze-icons dmz-cursor-theme dejavu-fonts-ttf noto-sans-ttf noto-serif-ttf font-roboto-ttf gnome-backgrounds papirus-icon-theme"
specific_packages="apparmor font-hack-ttf plymouth solus-artwork solus-sc"
desktop_base="$hardware_support $basic_packages $basic_themes $specific_packages -c xorg.server"
desktop_services="avahi-daemon.service"
case "$desktop" in
	'none')
	install_desktop=""
	;;
	'budgie')
	install_desktop="
eopkg it -y $desktop_base lightdm slick-greeter budgie-desktop-branding-fortitude tilix nautilus desktop-file-utils -c desktop.budgie
systemctl enable lightdm.service $desktop_services
"
	;;
	'gnome')
	install_desktop="
eopkg it -y $desktop_base gdm gnome-desktop-branding-fortitude -c desktop.gnome.core gnome-control-center gnome-settings-daemon gnome-terminal nautilus
systemctl enable gdm.service $desktop_services
"
	;;
	'gnome-full')
	install_desktop="
eopkg it -y $desktop_base gdm gnome-desktop-branding-fortitude -c desktop.gnome
systemctl enable gdm.service $desktop_services
"
	;;
	'i3')
	install_desktop="
eopkg it -y $desktop_base lightdm slick-greeter -c desktop.i3 terminator gnome-icon-theme network-manager-applet
systemctl enable lightdm.service $desktop_services
"
	;;
	'kde')
	install_desktop="
eopkg it -y $desktop_base sddm plasma-desktop-branding -c desktop.kde
eopkg rm plasma-desktop-branding-livecd
systemctl enable sddm.service $desktop_services
"
	;;
	'mate')
	install_desktop="
eopkg it -y $desktop_base lightdm slick-greeter mate-desktop-branding-fortitude network-manager-applet -c desktop.mate
systemctl enable lightdm.service $desktop_services
"
	;;
esac
cat >"$linuxloopsdir"/chroot/tmp/install_desktop <<SOLUSDESKTOP
#!/bin/bash
$install_desktop
SOLUSDESKTOP
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_desktop

if [ ! -z "$CUSTOM_PACKAGES" ]; then
	echo -e "eopkg it -y $CUSTOM_PACKAGES" >> "$linuxloopsdir"/chroot/tmp/install_desktop
fi

if [ -f ./custom_script ]; then cp ./custom_script "$linuxloopsdir"/chroot/tmp/install_custom; chmod 0755 "$linuxloopsdir"/chroot/tmp/install_custom; fi

generate_fstab

cmdline_extra="$CUSTOM_CMDLINE_PARAMS"
install_iso_init

install_efi

cleanup

chroot "$linuxloopsdir"/chroot/installroot /tmp/init

umount_chroot /installroot

umount -R "$linuxloopsdir"/chroot/installroot/mnt
umount "$linuxloopsdir"/chroot/installroot
rm -r "$linuxloopsdir"/chroot/installroot
umount "$linuxloopsdir"/chroot

cmdline_extra="$CUSTOM_CMDLINE_PARAMS"
}

chroot_tails()
{
download_lxc_image archlinux current default

mount --bind "$linuxloopsdir"/chroot "$linuxloopsdir"/chroot

mount_chroot

cat >"$linuxloopsdir"/chroot/tmp/init <<'TAILSINIT'
#!/bin/bash
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib
/tmp/cleanup_container
pacman-key --init
pacman-key --populate
pacman -Syu --noconfirm cpio parted fatresize
/tmp/set_locale
/tmp/install
/tmp/cleanup
exit
TAILSINIT
chmod 0755 "$linuxloopsdir"/chroot/tmp/init

cleanup_container
set_locale

cat >"$linuxloopsdir"/chroot/tmp/install <<TAILSINSTALL
curl -L https://tails.darklab.sh/pub/tails/stable/"\$(curl -L https://tails.darklab.sh/pub/tails/stable/ | grep '<a href="tails-amd64-' | head -1 | cut -d'>' -f2 | cut -d '/' -f1)"/"\$(curl -L https://tails.darklab.sh/pub/tails/stable/ | grep '<a href="tails-amd64-' | head -1 | cut -d'>' -f2 | cut -d '/' -f1)".img -o /tmp/tails.img
dd if=/tmp/tails.img of="$destination_loop" bs=1M status=progress
echo -e "Fix\n" | parted ---pretend-input-tty "$destination_loop" print
parted "$destination_loop" resizepart 1 8GiB
fatresize -s 8G "$destination_loop"p1
rm /tmp/tails.img
mkdir -p /isomount
mount "$destination_loop"p1 /isomount
mkdir -p /tmp/initramfs/scripts/init-bottom /tmp/initramfs/usr/lib/udev/rules.d
cp /tmp/install_initramfs /tmp/initramfs/linuxloops
chmod 0755 /tmp/initramfs/linuxloops
echo '/scripts/init-bottom/linuxloopsfix "\$@"' > /tmp/initramfs/scripts/init-bottom/ORDER
chmod 0755 /tmp/initramfs/scripts/init-bottom/ORDER
cat >/tmp/initramfs/scripts/init-bottom/linuxloopsfix <<'LINUXLOOPSFIX'
cat >/root/etc/udev/rules.d/99-zzzlinuxloops.rules <<'TAILSUDEV'
SUBSYSTEMS=="block", KERNEL=="loop0", ENV{ID_DRIVE_DETACHABLE}:="0", SYMLINK+="TailsBootDev", SYMLINK+="bilibop"
SUBSYSTEMS=="block", KERNEL=="loop0*", ENV{UDISKS_SYSTEM}:="1", GROUP:="floppy"
ENV{ID_FS_LABEL}=="TailsData", KERNEL=="loop0*", ENV{UDISKS_IGNORE}="1"
TAILSUDEV
sed -i 's#loop|##g' /root/lib/live/boot/*
sed -i 's#if (\$device =~ m{mmcblk \[0-9]+ \\\\z}xms) {#if (\$device =~ m{mmcblk [0-9]+ \\\\z}xms or \$device =~ m{loop [0-9]+ \\\\z}xms) {#g' \$(find /root/usr/local/share/perl | grep 'UDisks.pm' | head -1)
sed -i -e 's#method get_udisks_property (Str \$type, Defined \$object, Str \$property) {#method get_udisks_property (Str \$type, Defined \$object, Str \$property) {\nif (\$type eq "Block" and \$property eq "Drive" and \$object =~ m/loop0/) { return "/dev/loop0"; }\nif (\$type eq "Drive" and \$property eq "ConnectionBus" and \$object =~ m/loop0/) { return "sdio"; }\nif (\$type eq "Drive" and \$property eq "Optical" and \$object =~ m/loop0/) { return 0; }\nif (\$type eq "Drive" and \$property eq "Vendor" and \$object =~ m/loop0/) { return ""; }\nif (\$type eq "Drive" and \$property eq "Model" and \$object =~ m/loop0/) { return "linuxloops"; }#g' \$(find /root/usr/local/share/perl | grep 'UDisks.pm' | head -1)
LINUXLOOPSFIX
chmod 0755 /tmp/initramfs/scripts/init-bottom/linuxloopsfix
(cd /tmp/initramfs && find . | cpio -o -H newc | gzip > /isomount/live/linuxloops.img)
umount /isomount
TAILSINSTALL
chmod 0755 "$linuxloopsdir"/chroot/tmp/install

cmdline_extra="$CUSTOM_CMDLINE_PARAMS"
install_iso_init

cleanup

chroot "$linuxloopsdir"/chroot /tmp/init

root_device="live-media=/dev/disk/by-uuid/$(blkid -s UUID -o value "$destination_loop"p1)"

umount_chroot
}

chroot_ubuntu()
{
download_lxc_image ubuntu kinetic default

mount_chroot

cat >"$linuxloopsdir"/chroot/tmp/init <<'UBUNTUINIT'
#!/bin/bash
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib
/tmp/cleanup_container
echo -e 'APT::Install-Recommends "0";\nAPT::Get::Install-Recommends "false";' > /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt update
yes | DEBIAN_FRONTEND=noninteractive apt install -o APT::Immediate-Configure=false --reinstall $(apt list --installed | cut -d'/' -f1 | sed '1d' | sed -z 's@\n@ @g')
yes | DEBIAN_FRONTEND=noninteractive dpkg --configure -a
yes | DEBIAN_FRONTEND=noninteractive apt install apt-utils console-setup kmod
yes | DEBIAN_FRONTEND=noninteractive apt update
yes | DEBIAN_FRONTEND=noninteractive apt install linux-generic linux-firmware wireless-regdb bash sudo modemmanager network-manager wpasupplicant bluez cryptsetup-initramfs e2fsprogs ntfs-3g nano acpid curl thermald bash-completion ca-certificates gnupg-utils policykit-1 xdg-user-dirs zstd fwupd-signed patchutils net-tools usb-modeswitch upower efibootmgr grub-efi grub-efi-amd64-signed grub-efi-ia32-bin shim-signed bind9-host dns-root-data amd64-microcode intel-microcode update-manager-core snapd
systemctl enable acpid.service systemd-resolved.service upower.service
/tmp/set_locale
/tmp/install_user
/tmp/install_desktop
rm -f /etc/apt/apt.conf.d/99linuxloops
if [ -f /tmp/install_surface ]; then /tmp/install_surface; fi
if [ -f /tmp/install_custom ]; then /tmp/install_custom; fi
/tmp/generate_fstab
/tmp/install_initramfs
/tmp/install_efi
yes | DEBIAN_FRONTEND=noninteractive apt autoremove
/tmp/cleanup
exit
UBUNTUINIT
chmod 0755 "$linuxloopsdir"/chroot/tmp/init

cleanup_container
set_locale

cat >"$linuxloopsdir"/chroot/tmp/install_user <<UBUNTUUSER
#!/bin/bash
userdel -r -f ubuntu
useradd -s /bin/bash -m '$username'
echo -e '$userpass\n$userpass' | passwd '$username'
usermod -aG sudo '$username'
UBUNTUUSER
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_user

if [ -z "$desktop" ]; then desktop="ubuntu"; fi
hardware_support="alsa-utils alsa-ucm-conf alsa-topology-conf at-spi2-core avahi-discover cups cups-browsed cups-filters firmware-sof-signed libnss-mdns pulseaudio system-config-printer xserver-xorg"
basic_packages="gvfs-fuse packagekit udisks2 xdg-user-dirs-gtk"
basic_themes="adwaita-icon-theme breeze-gtk-theme breeze-icon-theme dmz-cursor-theme fonts-dejavu fonts-noto fonts-roboto gnome-backgrounds materia-gtk-theme oxygen-icon-theme papirus-icon-theme"
specific_packages="desktop-base plymouth-themes ubuntu-wallpapers fonts-ubuntu"
desktop_base="$hardware_support $basic_packages $basic_themes $specific_packages"
case "$desktop" in
	'none')
	install_desktop=""
	;;
	'budgie')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter budgie-lightdm-theme ubuntu-budgie-desktop budgie-desktop-environment budgie-applications-menu-applet budgie-brightness-controller-applet budgie-hotcorners-applet budgie-indicator-applet budgie-network-manager-applet budgie-rotation-lock-applet budgie-trash-applet ubuntu-budgie-themes pocillo-icon-theme nemo tilix plank gjs
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.gnome.desktop.background:Budgie]
picture-uri=\"file:///usr/share/backgrounds/warty-final-ubuntu.png\"
[org.gnome.desktop.interface:Budgie]
gtk-theme=\"Arc\"
icon-theme=\"Papirus\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/warty-final-ubuntu.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'budgie-full')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install network-manager-gnome
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter budgie-lightdm-theme ubuntu-budgie-desktop
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.gnome.desktop.background]
picture-uri=\"file:///usr/share/backgrounds/warty-final-ubuntu.png\"
[org.gnome.desktop.interface]
gtk-theme=\"Arc\"
icon-theme=\"Papirus\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/warty-final-ubuntu.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'cinnamon')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter cinnamon cinnamon-core gnome-terminal nemo blueman
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.cinnamon.desktop.background]
picture-uri=\"file:///usr/share/backgrounds/warty-final-ubuntu.png\"
[org.cinnamon.desktop.interface]
gtk-theme=\"Materia\"
icon-theme=\"Papirus\"
[org.cinnamon.desktop.wm.preferences]
theme=\"Materia\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/warty-final-ubuntu.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'cinnamon-full')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install network-manager-gnome blueman
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter cinnamon-desktop-environment
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.cinnamon.desktop.background]
picture-uri=\"file:///usr/share/backgrounds/warty-final-ubuntu.png\"
[org.cinnamon.desktop.interface]
gtk-theme=\"Materia\"
icon-theme=\"Papirus\"
[org.cinnamon.desktop.wm.preferences]
theme=\"Materia\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/warty-final-ubuntu.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'enlightenment')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter enlightenment terminology
yes | DEBIAN_FRONTEND=noninteractive apt purge network-manager
yes | DEBIAN_FRONTEND=noninteractive apt install connman
find /usr/lib -type f -name enlightenment_system -exec chmod 4755 {} \;
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/warty-final-ubuntu.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'gnome')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base gdm3 gnome-session gnome-control-center gnome-terminal nautilus gnome-keyring libpam-gnome-keyring
"
	;;
	'gnome-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base gdm3 gnome
"
	;;
	'kde')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base sddm kubuntu-desktop dolphin plasma-discover konsole plasma-nm plasma-pa bluedevil libpam-kwallet5
"
	;;
	'kde-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base sddm kubuntu-desktop
"
	;;
	'lxde')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter lxde lxterminal pcmanfm lxde-icon-theme network-manager-gnome blueman
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/warty-final-ubuntu.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'lxde-full')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install network-manager-gnome blueman
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter lxde
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/warty-final-ubuntu.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'lxqt')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter lubuntu-desktop qterminal pcmanfm-qt network-manager-gnome blueman humanity-icon-theme
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/warty-final-ubuntu.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'lxqt-full')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install network-manager-gnome blueman
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter lubuntu-desktop humanity-icon-theme
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/warty-final-ubuntu.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'mate')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter ubuntu-mate-desktop ubuntu-mate-themes ubuntu-mate-wallpapers mate-control-center mate-applets mate-indicator-applet mate-applet-brisk-menu mate-themes mate-icon-theme mate-terminal caja ayatana-indicator-application ayatana-indicator-datetime ayatana-indicator-notifications ayatana-indicator-power ayatana-indicator-session ayatana-indicator-sound network-manager-gnome blueman
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/warty-final-ubuntu.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'mate-full')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install network-manager-gnome blueman
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter ubuntu-mate-desktop
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/warty-final-ubuntu.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'studio-full')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install network-manager-gnome
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base sddm ubuntustudio-desktop ardour obs-studio krita gimp kdenlive digikam darktable
"
	;;
	'ubuntu')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base gdm3 ubuntu-desktop-minimal gnome-terminal nautilus dmz-cursor-theme yaru-theme-gtk yaru-theme-icon yaru-theme-sound
"
	;;
	'ubuntu-full')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install network-manager-gnome
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base gdm3 ubuntu-desktop
"
	;;
	'xfce')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter xubuntu-desktop xfce4-goodies xubuntu-icon-theme xfce4-power-manager-plugins xfce4-pulseaudio-plugin xfce4-terminal thunar xfce4-notifyd network-manager-gnome blueman greybird-gtk-theme elementary-xfce-icon-theme
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/warty-final-ubuntu.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'xfce-full')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install network-manager-gnome blueman
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter xubuntu-desktop
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/warty-final-ubuntu.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
esac
if [ "$desktop" != "none" ]; then
install_desktop="$install_desktop
echo -e 'APT::Install-Recommends \"0\";\nAPT::Get::Install-Recommends \"false\";' > /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install update-manager software-properties-gtk
rm -f /etc/apt/apt.conf.d/99linuxloops
"
fi
cat >"$linuxloopsdir"/chroot/tmp/install_desktop <<UBUNTUDESKTOP
#!/bin/bash
$install_desktop
UBUNTUDESKTOP
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_desktop

if [ ! -z "$CUSTOM_PACKAGES" ]; then
	echo -e "yes | DEBIAN_FRONTEND=noninteractive apt install $CUSTOM_PACKAGES" >> "$linuxloopsdir"/chroot/tmp/install_desktop
fi

if [ -f ./custom_script ]; then cp ./custom_script "$linuxloopsdir"/chroot/tmp/install_custom; chmod 0755 "$linuxloopsdir"/chroot/tmp/install_custom; fi

if [ ! -z "$surface" ] && [ "$surface" == "Yes" ]; then install_surface_apt "linux-generic-* linux-headers-* linux-image-* linux-modules-*"; fi

generate_fstab

cmdline_extra="$CUSTOM_CMDLINE_PARAMS"
install_initramfstools

install_efi

cleanup

chroot "$linuxloopsdir"/chroot /tmp/init

umount_chroot
}

chroot_ubuntu-lts()
{
download_lxc_image ubuntu jammy default

mount_chroot

cat >"$linuxloopsdir"/chroot/tmp/init <<'UBUNTUINIT'
#!/bin/bash
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib
/tmp/cleanup_container
echo -e 'APT::Install-Recommends "0";\nAPT::Get::Install-Recommends "false";' > /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt update
yes | DEBIAN_FRONTEND=noninteractive apt install -o APT::Immediate-Configure=false --reinstall $(apt list --installed | cut -d'/' -f1 | sed '1d' | sed -z 's@\n@ @g')
yes | DEBIAN_FRONTEND=noninteractive dpkg --configure -a
yes | DEBIAN_FRONTEND=noninteractive apt install apt-utils console-setup kmod
yes | DEBIAN_FRONTEND=noninteractive apt update
yes | DEBIAN_FRONTEND=noninteractive apt install linux-generic linux-firmware wireless-regdb bash sudo modemmanager network-manager wpasupplicant bluez cryptsetup-initramfs e2fsprogs ntfs-3g nano acpid curl thermald bash-completion ca-certificates gnupg-utils policykit-1 xdg-user-dirs zstd fwupd-signed patchutils net-tools usb-modeswitch upower efibootmgr grub-efi grub-efi-amd64-signed grub-efi-ia32-bin shim-signed bind9-host dns-root-data amd64-microcode intel-microcode update-manager-core snapd
systemctl enable acpid.service systemd-resolved.service upower.service
/tmp/set_locale
/tmp/install_user
/tmp/install_desktop
rm -f /etc/apt/apt.conf.d/99linuxloops
if [ -f /tmp/install_surface ]; then /tmp/install_surface; fi
if [ -f /tmp/install_custom ]; then /tmp/install_custom; fi
/tmp/generate_fstab
/tmp/install_initramfs
/tmp/install_efi
yes | DEBIAN_FRONTEND=noninteractive apt autoremove
/tmp/cleanup
exit
UBUNTUINIT
chmod 0755 "$linuxloopsdir"/chroot/tmp/init

cleanup_container
set_locale

cat >"$linuxloopsdir"/chroot/tmp/install_user <<UBUNTUUSER
#!/bin/bash
userdel -r -f ubuntu
useradd -s /bin/bash -m '$username'
echo -e '$userpass\n$userpass' | passwd '$username'
usermod -aG sudo '$username'
UBUNTUUSER
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_user

if [ -z "$desktop" ]; then desktop="ubuntu"; fi
hardware_support="alsa-utils alsa-ucm-conf alsa-topology-conf at-spi2-core avahi-discover cups cups-browsed cups-filters firmware-sof-signed libnss-mdns pulseaudio system-config-printer xserver-xorg"
basic_packages="gvfs-fuse packagekit udisks2 xdg-user-dirs-gtk"
basic_themes="adwaita-icon-theme breeze-gtk-theme breeze-icon-theme dmz-cursor-theme fonts-dejavu fonts-noto fonts-roboto gnome-backgrounds materia-gtk-theme oxygen-icon-theme papirus-icon-theme"
specific_packages="desktop-base plymouth-themes ubuntu-wallpapers fonts-ubuntu"
desktop_base="$hardware_support $basic_packages $basic_themes $specific_packages"
case "$desktop" in
	'none')
	install_desktop=""
	;;
	'budgie')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter budgie-lightdm-theme ubuntu-budgie-desktop budgie-desktop-environment budgie-applications-menu-applet budgie-brightness-controller-applet budgie-hotcorners-applet budgie-indicator-applet budgie-network-manager-applet budgie-rotation-lock-applet budgie-trash-applet ubuntu-budgie-themes pocillo-icon-theme nemo tilix plank gjs
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.gnome.desktop.background:Budgie]
picture-uri=\"file:///usr/share/backgrounds/warty-final-ubuntu.png\"
[org.gnome.desktop.interface:Budgie]
gtk-theme=\"Arc\"
icon-theme=\"Papirus\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/warty-final-ubuntu.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'budgie-full')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install network-manager-gnome
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter budgie-lightdm-theme ubuntu-budgie-desktop
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.gnome.desktop.background]
picture-uri=\"file:///usr/share/backgrounds/warty-final-ubuntu.png\"
[org.gnome.desktop.interface]
gtk-theme=\"Arc\"
icon-theme=\"Papirus\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/warty-final-ubuntu.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'cinnamon')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter cinnamon cinnamon-core gnome-terminal nemo blueman
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.cinnamon.desktop.background]
picture-uri=\"file:///usr/share/backgrounds/warty-final-ubuntu.png\"
[org.cinnamon.desktop.interface]
gtk-theme=\"Materia\"
icon-theme=\"Papirus\"
[org.cinnamon.desktop.wm.preferences]
theme=\"Materia\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/warty-final-ubuntu.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'cinnamon-full')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install network-manager-gnome blueman
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter cinnamon-desktop-environment
cat >/usr/share/glib-2.0/schemas/zz_linuxloops.gschema.override <<'DCONF'
[org.cinnamon.desktop.background]
picture-uri=\"file:///usr/share/backgrounds/warty-final-ubuntu.png\"
[org.cinnamon.desktop.interface]
gtk-theme=\"Materia\"
icon-theme=\"Papirus\"
[org.cinnamon.desktop.wm.preferences]
theme=\"Materia\"
DCONF
glib-compile-schemas /usr/share/glib-2.0/schemas/
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/warty-final-ubuntu.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'enlightenment')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter enlightenment terminology
yes | DEBIAN_FRONTEND=noninteractive apt purge network-manager
yes | DEBIAN_FRONTEND=noninteractive apt install connman
find /usr/lib -type f -name enlightenment_system -exec chmod 4755 {} \;
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/warty-final-ubuntu.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'gnome')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base gdm3 gnome-session gnome-control-center gnome-terminal nautilus gnome-keyring libpam-gnome-keyring
"
	;;
	'gnome-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base gdm3 gnome
"
	;;
	'kde')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base sddm kubuntu-desktop dolphin plasma-discover konsole plasma-nm plasma-pa bluedevil libpam-kwallet5
"
	;;
	'kde-full')
	install_desktop="
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base sddm kubuntu-desktop
"
	;;
	'lxde')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter lxde lxterminal pcmanfm lxde-icon-theme network-manager-gnome blueman
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/warty-final-ubuntu.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'lxde-full')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install network-manager-gnome blueman
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter lxde
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/warty-final-ubuntu.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'lxqt')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter lubuntu-desktop qterminal pcmanfm-qt network-manager-gnome blueman humanity-icon-theme
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/warty-final-ubuntu.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'lxqt-full')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install network-manager-gnome blueman
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter lubuntu-desktop humanity-icon-theme
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/warty-final-ubuntu.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'mate')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter ubuntu-mate-desktop ubuntu-mate-themes ubuntu-mate-wallpapers mate-control-center mate-applets mate-indicator-applet mate-applet-brisk-menu mate-themes mate-icon-theme mate-terminal caja ayatana-indicator-application ayatana-indicator-datetime ayatana-indicator-notifications ayatana-indicator-power ayatana-indicator-session ayatana-indicator-sound network-manager-gnome blueman
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/warty-final-ubuntu.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'mate-full')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install network-manager-gnome blueman
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter ubuntu-mate-desktop
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/warty-final-ubuntu.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'studio-full')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install network-manager-gnome
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base sddm ubuntustudio-desktop ardour obs-studio krita gimp kdenlive digikam darktable
"
	;;
	'ubuntu')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base gdm3 ubuntu-desktop-minimal gnome-terminal nautilus dmz-cursor-theme yaru-theme-gtk yaru-theme-icon yaru-theme-sound
"
	;;
	'ubuntu-full')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install network-manager-gnome
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base gdm3 ubuntu-desktop
"
	;;
	'xfce')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter xubuntu-desktop xfce4-goodies xubuntu-icon-theme xfce4-power-manager-plugins xfce4-pulseaudio-plugin xfce4-terminal thunar xfce4-notifyd network-manager-gnome blueman greybird-gtk-theme elementary-xfce-icon-theme
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/warty-final-ubuntu.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
	'xfce-full')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install network-manager-gnome blueman
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install $desktop_base lightdm slick-greeter xubuntu-desktop
echo -e '[Greeter]\nbackground = /usr/share/backgrounds/warty-final-ubuntu.png\ndraw-user-backgrounds = false' > /etc/lightdm/slick-greeter.conf
"
	;;
esac
if [ "$desktop" != "none" ]; then
install_desktop="$install_desktop
echo -e 'APT::Install-Recommends \"0\";\nAPT::Get::Install-Recommends \"false\";' > /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install update-manager software-properties-gtk
rm -f /etc/apt/apt.conf.d/99linuxloops
"
fi
cat >"$linuxloopsdir"/chroot/tmp/install_desktop <<UBUNTUDESKTOP
#!/bin/bash
$install_desktop
UBUNTUDESKTOP
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_desktop

if [ ! -z "$CUSTOM_PACKAGES" ]; then
	echo -e "yes | DEBIAN_FRONTEND=noninteractive apt install $CUSTOM_PACKAGES" >> "$linuxloopsdir"/chroot/tmp/install_desktop
fi

if [ -f ./custom_script ]; then cp ./custom_script "$linuxloopsdir"/chroot/tmp/install_custom; chmod 0755 "$linuxloopsdir"/chroot/tmp/install_custom; fi

if [ ! -z "$surface" ] && [ "$surface" == "Yes" ]; then install_surface_apt "linux-generic-* linux-headers-* linux-image-* linux-modules-*"; fi

generate_fstab

cmdline_extra="$CUSTOM_CMDLINE_PARAMS"
install_initramfstools

install_efi

cleanup

chroot "$linuxloopsdir"/chroot /tmp/init

umount_chroot
}

chroot_voidlinux()
{
download_lxc_image voidlinux current default

mount_chroot

cat >"$linuxloopsdir"/chroot/tmp/init <<'VOIDLINUXINIT'
#!/bin/bash
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib
/tmp/cleanup_container
xbps-install -Syu
xbps-remove -y base-voidstrap
xbps-install -fy $(xbps-query -l | awk '{ print $2 }' | xargs -n1 xbps-uhelper getpkgname | sed -z 's@\n@ @g')
xbps-install -Syu
xbps-install -y void-repo-nonfree
xbps-install -y base-system linux-firmware crda bash sudo ModemManager NetworkManager wpa_supplicant bluez cryptsetup e2fsprogs ntfs-3g nano acpid curl thermald bash-completion ca-certificates gnupg polkit xdg-user-dirs zstd fwupd patch net-tools usb-modeswitch upower efibootmgr grub-i386-efi grub-x86_64-efi bind dnssec-anchors
ln -s /etc/sv/acpid  /etc/sv/agetty-tty1  /etc/sv/agetty-tty2 /etc/sv/agetty-tty3 /etc/sv/agetty-tty4 /etc/sv/agetty-tty5 /etc/sv/agetty-tty6 /etc/sv/dbus /etc/sv/dhcpcd /etc/sv/named /etc/sv/polkitd /etc/sv/thermald /etc/sv/uuidd /etc/runit/runsvdir/default/
/tmp/set_locale
/tmp/install_user
/tmp/install_desktop
if [ -f /tmp/install_custom ]; then /tmp/install_custom; fi
/tmp/generate_fstab
/tmp/install_initramfs
/tmp/install_efi
/tmp/cleanup
exit
VOIDLINUXINIT
chmod 0755 "$linuxloopsdir"/chroot/tmp/init

cleanup_container
set_locale

cat >"$linuxloopsdir"/chroot/tmp/install_user <<VOIDLINUXUSER
#!/bin/bash
useradd -s /bin/bash -m '$username'
echo -e '$userpass\n$userpass' | passwd '$username'
usermod -aG wheel '$username'
echo "%wheel      ALL=(ALL) ALL" > /etc/sudoers.d/90-wheel
VOIDLINUXUSER
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_user

if [ -z "$desktop" ]; then desktop="gnome"; fi
hardware_support="alsa-utils alsa-ucm-conf at-spi2-core avahi-discover cups cups-filters sof-firmware nss-mdns pulseaudio system-config-printer xorg"
basic_packages="gvfs PackageKit udisks2 xdg-user-dirs-gtk"
basic_themes="adwaita-icon-theme breeze-gtk breeze-icons xcursor-vanilla-dmz dejavu-fonts-ttf noto-fonts-ttf fonts-roboto-ttf gnome-backgrounds oxygen-icons5 papirus-icon-theme"
specific_packages="font-adobe-source-code-pro plymouth"
desktop_base="$hardware_support $basic_packages $basic_themes $specific_packages"
desktop_services="/etc/sv/avahi-daemon /etc/sv/bluetoothd /etc/sv/cupsd /etc/sv/cups-browsed"
case "$desktop" in
	'none')
	install_desktop=""
	;;
	'gnome')
	install_desktop="
xbps-install -y $desktop_base gdm gnome-core gnome-terminal
ln -s $desktop_services /etc/sv/gdm /etc/sv/NetworkManager /etc/runit/runsvdir/default/
"
	;;
	'gnome-full')
	install_desktop="
xbps-install -y $desktop_base gdm gnome
ln -s $desktop_services /etc/sv/gdm /etc/sv/NetworkManager /etc/runit/runsvdir/default/
"
	;;
	'kde')
	install_desktop="
xbps-install -y $desktop_base sddm kde5 dolphin konsole
ln -s $desktop_services /etc/sv/sddm /etc/sv/NetworkManager /etc/runit/runsvdir/default/
"
	;;
	'kde-full')
	install_desktop="
xbps-install -y $desktop_base sddm kde5 kde5-baseapps
ln -s $desktop_services /etc/sv/sddm /etc/sv/NetworkManager /etc/runit/runsvdir/default/
"
	;;
	'lxde')
	install_desktop="
xbps-install -y $desktop_base lightdm lightdm-gtk3-greeter lxde network-manager-applet blueman
ln -s $desktop_services /etc/sv/lightdm /etc/sv/NetworkManager /etc/runit/runsvdir/default/
"
	;;
	'lxqt')
	install_desktop="
xbps-install -y $desktop_base lightdm lightdm-gtk3-greeter lxqt network-manager-applet blueman
ln -s $desktop_services /etc/sv/lightdm /etc/sv/NetworkManager /etc/runit/runsvdir/default/
"
	;;
	'mate')
	install_desktop="
xbps-install -y $desktop_base lightdm lightdm-gtk3-greeter mate network-manager-applet blueman mate-terminal mate-power-manager mate-applets
ln -s $desktop_services /etc/sv/lightdm /etc/sv/NetworkManager /etc/runit/runsvdir/default/
"
	;;
	'mate-full')
	install_desktop="
xbps-install -y $desktop_base lightdm lightdm-gtk3-greeter mate mate-extra network-manager-applet blueman mate-terminal mate-power-manager mate-applets
ln -s $desktop_services /etc/sv/lightdm /etc/sv/NetworkManager /etc/runit/runsvdir/default/
"
	;;
	'xfce')
	install_desktop="
xbps-install -y $desktop_base lightdm lightdm-gtk3-greeter xfce4 xfce4-notifyd xfce4-pulseaudio-plugin network-manager-applet blueman
ln -s $desktop_services /etc/sv/lightdm /etc/sv/NetworkManager /etc/runit/runsvdir/default/
"
	;;
esac
cat >"$linuxloopsdir"/chroot/tmp/install_desktop <<VOIDLINUXDESKTOP
#!/bin/bash
$install_desktop
VOIDLINUXDESKTOP
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_desktop

if [ ! -z "$CUSTOM_PACKAGES" ]; then
	echo -e "xbps-install $CUSTOM_PACKAGES" >> "$linuxloopsdir"/chroot/tmp/install_desktop
fi

if [ -f ./custom_script ]; then cp ./custom_script "$linuxloopsdir"/chroot/tmp/install_custom; chmod 0755 "$linuxloopsdir"/chroot/tmp/install_custom; fi

generate_fstab

cmdline_extra="$CUSTOM_CMDLINE_PARAMS"
install_dracut

install_efi

cleanup

chroot "$linuxloopsdir"/chroot /tmp/init

umount_chroot
}

chroot_zorin()
{
download_lxc_image ubuntu focal default

mount_chroot

cat >"$linuxloopsdir"/chroot/tmp/init <<'ZORININIT'
#!/bin/bash
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib
/tmp/cleanup_container
echo -e 'APT::Install-Recommends "0";\nAPT::Get::Install-Recommends "false";' > /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt update
yes | DEBIAN_FRONTEND=noninteractive apt install gnupg
echo -e 'deb http://ppa.launchpad.net/zorinos/apps/ubuntu focal main\n# deb-src http://ppa.launchpad.net/zorinos/apps/ubuntu focal main' > /etc/apt/sources.list.d/zorinos-ubuntu-apps-focal.list
echo -e 'deb http://ppa.launchpad.net/zorinos/drivers/ubuntu focal main\n# deb-src http://ppa.launchpad.net/zorinos/drivers/ubuntu focal main' > /etc/apt/sources.list.d/zorinos-ubuntu-drivers-focal.list
echo -e 'deb http://ppa.launchpad.net/zorinos/patches/ubuntu focal main\n# deb-src http://ppa.launchpad.net/zorinos/patches/ubuntu focal main' > /etc/apt/sources.list.d/zorinos-ubuntu-patches-focal.list
echo -e 'deb http://ppa.launchpad.net/zorinos/stable/ubuntu focal main\n# deb-src http://ppa.launchpad.net/zorinos/stable/ubuntu focal main' > /etc/apt/sources.list.d/zorinos-ubuntu-stable-focal.list
apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 30FCF8F64F71B61C
yes | DEBIAN_FRONTEND=noninteractive apt update
yes | DEBIAN_FRONTEND=noninteractive apt install zorin-os-overlay
yes | DEBIAN_FRONTEND=noninteractive apt update
yes | DEBIAN_FRONTEND=noninteractive apt install -o APT::Immediate-Configure=false --reinstall $(apt list --installed | cut -d'/' -f1 | sed '1d' | sed -z 's@\n@ @g')
yes | DEBIAN_FRONTEND=noninteractive dpkg --configure -a
yes | DEBIAN_FRONTEND=noninteractive apt install apt-utils console-setup kmod
yes | DEBIAN_FRONTEND=noninteractive apt update
yes | DEBIAN_FRONTEND=noninteractive apt install linux-generic-hwe-20.04 linux-firmware wireless-regdb bash sudo modemmanager network-manager wpasupplicant bluez cryptsetup-initramfs e2fsprogs ntfs-3g nano acpid curl thermald bash-completion ca-certificates gnupg-utils policykit-1 xdg-user-dirs zstd fwupd-signed patchutils net-tools usb-modeswitch upower efibootmgr grub-efi grub-efi-amd64-signed grub-efi-ia32-bin shim-signed bind9-host dns-root-data update-manager-core snapd
systemctl enable acpid.service systemd-resolved.service upower.service
/tmp/set_locale
/tmp/install_user
/tmp/install_desktop
if [ -f /tmp/install_surface ]; then /tmp/install_surface; fi
if [ -f /tmp/install_custom ]; then /tmp/install_custom; fi
/tmp/generate_fstab
/tmp/install_initramfs
/tmp/install_efi
yes | DEBIAN_FRONTEND=noninteractive apt autoremove
/tmp/cleanup
exit
ZORININIT
chmod 0755 "$linuxloopsdir"/chroot/tmp/init

cleanup_container
set_locale

cat >"$linuxloopsdir"/chroot/tmp/install_user <<ZORINUSER
#!/bin/bash
userdel -r -f ubuntu
useradd -s /bin/bash -m '$username'
echo -e '$userpass\n$userpass' | passwd '$username'
usermod -aG sudo '$username'
ZORINUSER
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_user

if [ -z "$desktop" ]; then desktop="full"; fi
case "$desktop" in
	'core')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install network-manager-gnome
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install zorin-os-desktop
"
	;;
	'lite')
	install_desktop="
yes | DEBIAN_FRONTEND=noninteractive apt install network-manager-gnome
rm -f /etc/apt/apt.conf.d/99linuxloops
yes | DEBIAN_FRONTEND=noninteractive apt install zorin-os-lite-desktop
yes | DEBIAN_FRONTEND=noninteractive apt purge xfce4-indicator-plugin
"
	;;
esac
cat >"$linuxloopsdir"/chroot/tmp/install_desktop <<ZORINDESKTOP
#!/bin/bash
$install_desktop
if [ "$encryption" == "Yes" ]; then sed -i '/GRUB_THEME=/d' /etc/default/grub; fi
ZORINDESKTOP
chmod 0755 "$linuxloopsdir"/chroot/tmp/install_desktop

if [ ! -z "$CUSTOM_PACKAGES" ]; then
	echo -e "yes | DEBIAN_FRONTEND=noninteractive apt install $CUSTOM_PACKAGES" >> "$linuxloopsdir"/chroot/tmp/install_desktop
fi

if [ -f ./custom_script ]; then cp ./custom_script "$linuxloopsdir"/chroot/tmp/install_custom; chmod 0755 "$linuxloopsdir"/chroot/tmp/install_custom; fi

if [ ! -z "$surface" ] && [ "$surface" == "Yes" ]; then install_surface_apt "linux-generic-* linux-headers-* linux-image-* linux-modules-*"; fi

generate_fstab

cmdline_extra="$CUSTOM_CMDLINE_PARAMS"
install_initramfstools

install_efi

cleanup

chroot "$linuxloopsdir"/chroot /tmp/init

umount_chroot
}

install_image()
{
umount_chroot
if mountpoint -q "$linuxloopsdir"/chroot; then umount "$linuxloopsdir"/chroot; fi
echo "Creating image file"
dd if=/dev/zero of="$fullpath" bs=1G seek=$image_size count=0 status=none
echo "Creating partition table..."
write_partition_table "$fullpath"
destination_loop="$(losetup --show -fP "$fullpath")"
if [ "$distro" == "chromeos-flex" ] || [ "$distro" == "tails" ]; then
	chroot_"$distro"
else
	mkdir -p "$linuxloopsdir"/chroot
	if [ "$encryption" == "Yes" ]; then
	mkfs.fat -F 32 -n 'LL-EFI' "$destination_loop"p1
	mkfs.ext4 -F -L "LL-BOOT" "$destination_loop"p2
	echo -n "$userpass" | cryptsetup --cipher aes-xts-plain64 --hash sha256 --key-size 256 luksFormat "$destination_loop"p3 -
	echo -n "$userpass" | cryptsetup --cipher aes-xts-plain64 --hash sha256 --key-size 256 luksOpen "$destination_loop"p3 luks-"$(blkid -s UUID -o value "$destination_loop"p3)" -
	mkfs.ext4 -F -L "LL-ROOT" /dev/mapper/luks-"$(blkid -s UUID -o value "$destination_loop"p3)"
	mount /dev/mapper/luks-"$(blkid -s UUID -o value "$destination_loop"p3)" "$linuxloopsdir"/chroot
	else
	mkfs.fat -F 32 -n 'LL-EFI' "$destination_loop"p1
	mkfs.ext4 -F -L "LL-BOOT" "$destination_loop"p2
	mkfs.ext4 -F -L "LL-ROOT" "$destination_loop"p3
	mount "$destination_loop"p3 "$linuxloopsdir"/chroot
	fi
	chroot_"$distro"
	if [ "$swap_size" -ne 0 ]; then
	echo "Please wait while the swap file is being generated..."
	dd if=/dev/zero of="$linuxloopsdir"/chroot/swap bs=1G count=$swap_size status=progress
	chmod 0600 "$linuxloopsdir"/chroot/swap
	mkswap "$linuxloopsdir"/chroot/swap
	fi
fi
if mountpoint -q "$linuxloopsdir"/chroot; then umount "$linuxloopsdir"/chroot; fi
if [ "$encryption" == "Yes" ]; then
	cryptsetup luksClose luks-"$(blkid -s UUID -o value "$destination_loop"p3)"
fi
losetup -d "$destination_loop"
rm -rf "$linuxloopsdir"/chroot/*
}

grub_config()
{
if [ ! -z "$wsl" ]; then
	img_uuid=$(su $(getent passwd $SUDO_UID | cut -d: -f1) -c "PATH=$PATH:/mnt/c/Windows/System32 mountvol.exe $(echo ${fullpath:5:1} | tr a-z A-Z): /L | cut -d'{' -f2 | cut -d'}' -f1")
else
	img_uuid=$(blkid -s PARTUUID -o value "$(df "$fullpath" --output=source | sed 1d)")
fi
img_path=$(if [ $(findmnt -n -o TARGET -T "$fullpath") == "/" ]; then echo $(realpath "$fullpath"); else echo $(realpath "$fullpath") | sed "s#$(findmnt -n -o TARGET -T "$fullpath")##g"; fi)
if [ -z "$wsl" ] && ([ "$(grep -o '^ID=[^,]\+' /etc/os-release | cut -d'=' -f2)" == "ubuntu" ] || [ "$(grep -o '^ID=[^,]\+' /etc/os-release | cut -d'=' -f2)" == "linuxmint" ] || [ "$(grep -o '^ID=[^,]\+' /etc/os-release | cut -d'=' -f2)" == "zorin" ]); then remove_tpm="\n	rmmod tpm"; fi
if [ "$distro" == "chromeos-flex" ]; then
config="menuentry \"$distro\" --class \"$distro\" {$remove_tpm
	img_path=\"$img_path\"
	img_uuid=\"$img_uuid\"
	search --no-floppy --set=root --file \$img_path
	loopback loop \$img_path
	if [ -f (loop,7)/bootimage.cfg ]; then source (loop,7)/bootimage.cfg; fi
	if [ -z \"\$bootimage\" ]; then bootimage=A; fi
	linux (loop,12)/syslinux/vmlinuz.\$bootimage img_uuid=\$img_uuid img_path=\$img_path bootimage=\$bootimage loop.max_part=16 ro quiet splash boot=local noresume noswap loglevel=7 console= cros_efi kvm-intel.vmentry_l1d_flush=always rootfstype=ramfs $cmdline_extra
	initrd (loop,7)/initramfs.img
}
"
elif [ "$distro" == "tails" ]; then
config="menuentry \"$distro\" --class \"$distro\" {$remove_tpm
	img_path=\"$img_path\"
	img_uuid=\"$img_uuid\"
	search --no-floppy --set=root --file \$img_path
	loopback loop \$img_path
	root_device=\"$root_device\"
	linux (loop,1)/live/vmlinuz rdinit=/linuxloops img_uuid=\$img_uuid img_path=\$img_path boot=live config \$root_device nopersistence noprompt timezone=Etc/UTC noautologin module=Tails slab_nomerge slub_debug=FZ mce=0 vsyscall=none init_on_free=1 mds=full,nosmt page_alloc.shuffle=1 quiet splash $cmdline_extra
	initrd (loop,1)/live/initrd.img (loop,1)/live/linuxloops.img
}
"
elif [ "$distro" == "nixos" ]; then
config="menuentry \"$distro\" --class \"$distro\" {$remove_tpm
	img_path=\"$img_path\"
	img_uuid=\"$img_uuid\"
	search --no-floppy --set=root --file \$img_path
	loopback loop \$img_path
	linuxloops_args=\"img_path=$img_path img_uuid=$img_uuid\"
	export linuxloops_args
	if [ -f (loop,2)/grub2/grub.cfg ]; then
		configfile (loop,2)/grub2/grub.cfg
	else
		configfile (loop,2)/grub/grub.cfg
	fi
}
"
else
config="menuentry \"$distro\" --class \"$distro\" {$remove_tpm
	img_path=\"$img_path\"
	img_uuid=\"$img_uuid\"
	search --no-floppy --set=root --file \$img_path
	loopback loop \$img_path
	linuxloops_args=\"rdinit=/linuxloops img_path=$img_path img_uuid=$img_uuid\"
	export linuxloops_args
	if [ -f (loop,2)/grub2/grub.cfg ]; then
		configfile (loop,2)/grub2/grub.cfg
	else
		configfile (loop,2)/grub/grub.cfg
	fi
}
"
fi
echo -e "$config" > "$fullpath".grub.txt
if [ -f ./usb_bootloader.img ]; then
	usbboot_loop=$(losetup --show -fP ./usb_bootloader.img)
	mount "$usbboot_loop"p1 "$linuxloopsdir"/chroot
	echo -e "set timeout=2\n"> "$linuxloopsdir"/chroot/efi/boot/grub.cfg
	echo -e "$config" >> "$linuxloopsdir"/chroot/efi/boot/grub.cfg
	umount "$linuxloopsdir"/chroot
	losetup -d $usbboot_loop
	finalise="The grub config to boot $distro has been installed in the usb_bootloader.img file. Write this file to a usb flashdrive with Rufus, dd or any other image writing tool and boot from it."
	if [ ! -z "$zenity" ]; then
		zenity --height=480 --width=640 --title="LinuxLoops installer" --info --text="$finalise" --ok-label="Exit"
	else
		echo -e "$finalise"
	fi
elif [ ! -z "$wsl" ]; then
	grubinstall="The $distro dual boot disk image has been created and the config needed to boot $distro from Grub2Win has been generated in the file:\n$(echo ${fullpath:5:1} | tr a-z A-Z):\\\\$(echo ${fullpath:7} | sed 's@\/@\\\\@g').grub.txt\n\nNow, install Grub2Win and launch it, click on \"Manage Boot Menu\" -> \"Add a new entry\" -> set \"Type\" as \"Create user section\", open the file $(echo ${fullpath:5:1} | tr a-z A-Z):\\\\$(echo ${fullpath:7} | sed 's@\/@\\\\@g').grub.txt and copy its content in the Grub2Win notepad window, save and close the Grub2Win notepad window then click \"Apply\" and \"OK\"."
	finalise="Please note that $distro will not be bootable and / or stable if you do not perform the below actions (Refer to Windows online resources if needed):\n- Ensure that bitlocker is disabled on the drive which contains the $distro image or disable it.\n- Disable fast startup.\n- Disable hibernation.\n\nOnce done, reboot your computer and select $distro from the Grub2Win menu."
	if [ ! -z "$zenity" ]; then
		zenity --height=480 --width=640 --title="LinuxLoops installer" --info --text="$grubinstall" --ok-label="Next"
		zenity --height=480 --width=640 --title="LinuxLoops installer" --info --text="$finalise" --ok-label="Exit"
	else
		echo -e "$grubinstall"
		echo -e ""
		echo -e "$finalise"
	fi
elif [ ! -z "$brunch" ]; then
	grubinstall="The grub config needed to boot $distro has been generated in the file \"$fullpath.grub.txt\".\n\n ****************************************************************************************** \n$config\n ****************************************************************************************** \n\nNow copy the above grub config, run \"sudo edit-brunch-config -g\" and paste it (lines between stars) at the end of the file.\n\nOnce done, press CTRL+X and then ENTER to save, reboot your computer and start $distro"
	if [ ! -z "$zenity" ]; then
		zenity --height=480 --width=640 --title="LinuxLoops installer" --info --text="$grubinstall" --ok-label="Exit"
	else
		echo -e "$grubinstall"
	fi
elif [ ! -z "$chromeos" ]; then
	source=$(blkid --match-token LABEL=EFI-SYSTEM | head -1 | cut -d':' -f1)
	mkdir -p /mnt/stateful_partition/unencrypted/linuxloops_config/tmp
	mount "$source" /mnt/stateful_partition/unencrypted/linuxloops_config/tmp
	rm -r /mnt/stateful_partition/unencrypted/linuxloops_config/tmp/*
	curl -L https://github.com/sebanc/linuxloops/raw/main/bootloaders/chromebook_boot.tar.gz -o /home/chronos/user/Downloads/chromebook_boot.tar.gz
	tar zxf /home/chronos/user/Downloads/chromebook_boot.tar.gz -C /mnt/stateful_partition/unencrypted/linuxloops_config/tmp
	rm -f /home/chronos/user/Downloads/chromebook_boot.tar.gz
	echo -e "set timeout=2\n"> /mnt/stateful_partition/unencrypted/linuxloops_config/tmp/efi/boot/grub.cfg
	echo -e "$config" >> /mnt/stateful_partition/unencrypted/linuxloops_config/tmp/efi/boot/grub.cfg
	umount /mnt/stateful_partition/unencrypted/linuxloops_config/tmp
	grubinstall="The grub config needed to boot $distro has been added to your boot partition 12, if not already done, refer to MrChromebox instructions to allow booting from legacy hdd boot (through RW_LEGACY firmware or ALT firmware), then reboot your computer and press CTRL+L to start $distro."
	if [ ! -z "$zenity" ]; then
		zenity --height=480 --width=640 --title="LinuxLoops installer" --info --text="$grubinstall" --ok-label="Exit"
	else
		echo -e "$grubinstall"
	fi
else
	grubinstall="The grub config needed to boot $distro has been generated in the file \"$fullpath.grub.txt\".\n\nIf you have a linux distro installed which uses grub as bootloader, open another terminal and run the below command to generate the grub config automatically:\nsudo cat /etc/grub.d/40_custom $fullpath.grub.txt | sudo tee /etc/grub.d/99_linuxloops; sudo chmod 0755 /etc/grub.d/99_linuxloops; sudo grub-mkconfig -o /boot/grub/grub.cfg\n\nOtherwise, add this grub config (lines between stars) manually to another grub bootloader:\n\n ****************************************************************************************** \n$config\n ****************************************************************************************** \n\nOnce the above actions are completed, you can reboot your computer and start $distro".
	if [ ! -z "$zenity" ]; then
		zenity --height=480 --width=640 --title="LinuxLoops installer" --info --text="$grubinstall" --ok-label="Exit"
	else
		echo -e "$grubinstall"
	fi
fi
}

set_credentials()
{
if [ "$distro" != "chromeos-flex" ] && [ "$distro" != "tails" ]; then
	if [ "$encryption" == "Yes" ]; then
		encrypted_text="You have requested encryption, please input your username and the encryption password.\nYour user account password will be set as the encryption password but you can change it later."
		password_text="encrypted partitions password"
	else
		encrypted_text="Please input your username and user account password."
		password_text="user account password"
	fi
	if [ ! -z "$zenity" ]; then
	until false; do
		form=$(zenity --forms --title="Create user" --text="$encrypted_text" --add-entry="Input your username" --add-password="Input your $password_text" --add-password="Confirm your $password_text")
		username="$(echo $form | cut -d'|' -f1)"
		userpass="$(echo $form | cut -d'|' -f2)"
		verifuserpass="$(echo $form | cut -d'|' -f3)"
		if [ -z "$form" ]; then exit 0; fi
		if [ -z "$username" ]; then zenity --height=480 --width=640 --error --text="Please define your username.\n"; continue; fi
		if [ -z "$userpass" ]; then zenity --height=480 --width=640 --error --text="Please define a password.\n"; continue; fi
		if echo "$username" | grep -q '^[a-z][-a-z0-9]*\$'; then zenity --height=480 --width=640 --error --text="Username contains unsupported characters.\n"; continue; fi
		if echo "$userpass" | grep -q '[^a-zA-Z0-9!@#&$£%µ^+-\*/=~¨]'; then zenity --height=480 --width=640 --error --text="Password contains unsupported characters.\n"; continue; fi
		if [ "$userpass" != "$verifuserpass" ]; then zenity --height=480 --width=640 --error --text="Passwords do not match, try again.\n"; continue; fi
		break
	done
	else
	echo -e "$encrypted_text"
	until false; do
		read -p "Please enter your username: " username
		if [ -z "$username" ]; then echo -e "Please define your username.\n\n"; continue; fi
		if echo "$username" | grep -q '^[a-z][-a-z0-9]*\$'; then echo -e "Username contains unsupported characters.\n\n"; continue; fi
		break
	done
	until false; do
		read -s -p "Input your $password_text password: " userpass
		echo ""
		read -s -p "Verify your $password_text password: " verifuserpass
		echo ""
		if [ -z "$userpass" ]; then echo -e "Please define a password.\n\n"; continue; fi
		if echo "$userpass" | grep -q '[^a-zA-Z0-9!@#&$£%µ^+-\*/=~¨]'; then echo -e "Password contains unsupported characters.\n\n"; continue; fi
		if [ "$userpass" != "$verifuserpass" ]; then echo -e "Passwords do not match, try again.\n\n"; continue; fi
		break
	done
	fi
fi
}

create_image()
{
if grep -qi 'Microsoft' /proc/version; then wsl=1; fi
if [ "$(grep -o 'NAME=[^,]\+' /etc/os-release | cut -d'=' -f2)" == "Chrome OS" ]; then if [ -f /etc/brunch_version ]; then brunch=1; else chromeos=1; fi; fi
linuxloopsdir="$(eval echo ~$SUDO_USER)"/linuxloops
mkdir -p "$linuxloopsdir"
if [ ! -z "$zenity" ]; then
	local path
	if  [ ! -z "$wsl" ]; then
		path=$(su "$SUDO_USER" -c "zenity --height=480 --width=640 --file-selection --save --title=\"Select the path to store the $distro disk image\" --file-filter=*.img --filename=\"/mnt/c/Users/$(echo $(/mnt/c/Windows/System32/cmd.exe /c echo %username% 2> /dev/null) | sed 's/[^a-zA-Z0-9]//g')/$distro.img\"")
	elif [ ! -z "$chromeos" ] || [ ! -z "$brunch" ]; then
		path=$(su "$SUDO_USER" -c "zenity --height=480 --width=640 --file-selection --save --title=\"Select the path to store the $distro disk image\" --file-filter=*.img --filename=\"/mnt/stateful_partition/unencrypted/$distro.img\"")
	else
		path=$(su "$SUDO_USER" -c "zenity --height=480 --width=640 --file-selection --save --title=\"Select the path to store the $distro disk image\" --file-filter=*.img --filename=\"$linuxloopsdir/$distro.img\"")
	fi
	if [ -z "$path" ]; then exit 1; else destination="$path"; fi
	if [[ "$destination" == *"/"* ]] && ([ -z "$(realpath $destination 2> /dev/null)" ] || [ ! -d "$(echo $(realpath $destination) | sed 's@[^/]*$@@')" ]); then zenity --height=480 --width=640 --error --text="Desination path does not exist, please provide an existing path."; create_image; return; fi
	rm -f "$destination"
	if [[ ! $destination == *"/"* ]]; then path="$PWD"; else path="$(realpath "$destination")"; path="$(echo ${path} | sed 's@[^/]*$@@')"; fi
	fullpath="$path$(basename $destination)"
	if [ ! -z "$wsl" ] && [ ! -z "${path##/mnt/*/*}" ]; then zenity --height=480 --width=640 --error --text="The $distro disk image has to be installed outside of the WSL VM, please specify a path such as /mnt/\&lt;drive letter\&gt;/..."; create_image; return; fi
	if ([ ! -z "$chromeos" ] || [ ! -z "$brunch" ]) && [ ! -z "${path##/mnt/stateful_partition/unencrypted/*}" ]; then zenity --height=480 --width=640 --error --text="The $distro disk image has to be installed in the unencrypted data partition, please specify a path such as /mnt/stateful_partition/unencrypted/..."; create_image; return; fi
	if [ $(( ($(df -k --output=avail "$path" | sed 1d) / 1024 / 1024) - 14 )) -lt 0 ]; then  zenity --height=480 --width=640 --error --text="Not enough space to create image file, the minimum size is 10 GB. Verify that the path you have selected points to a partition with more than 10GB available."; create_image; fi
	image_size=$(zenity --height=480 --width=640 --title="LinuxLoops" --scale --text "This partition has $(( ($(df -k --output=avail $path | sed 1d) / 1024 / 1024) )) GB available.\n how much would you like to allocate for $distro ?\n (Around 10GB will be occupied by system files, the remaining space will be available).\n" --min-value=10 --max-value=$(( ($(df -k --output=avail $path | sed 1d) / 1024 / 1024) )) --value=10 --step 1)
	if [ -z "$image_size" ]; then exit 1; fi
	if [ -z "$swap_size" ]; then swap_size=$(zenity --height=480 --width=640 --title="LinuxLoops" --scale --text "Please select here the swap partition size (swap is not mandatory, if you do not know what swap is you can select 0).\n" --min-value=0 --max-value=$(( $image_size - 8 )) --value=0 --step 1); fi
	if [ -z "$swap_size" ]; then exit 1; fi
	if [ ! -z "$(echo $surface_supported | grep -w $distro)" ]; then surface=$(zenity --height=480 --width=640 --title "LinuxLoops" --list --text "Do you want to automatically install the surface device patches from https://github.com/linux-surface ? (enable this only if you have a Microsoft Surface device)" --column "Apply Surface patches" "No" "Yes" --ok-label="Next"); else surface="No"; fi
	if [ -z "$surface" ]; then exit 1; fi
	if [ -z "$encryption" ] && [ ! -z $(which cryptsetup) ]; then encryption=$(zenity --height=480 --width=640 --title "LinuxLoops" --list --text "Do you want the image to be encrypted ? This is highly recommended if you intend to keep sensitive data in it, however it will slightly impacts performance." --column "Encryption" "Yes" "No" --ok-label="Next"); else encryption="No"; fi
	if [ -z "$encryption" ]; then exit 1; fi
else
	if [ -z "$destination" ]; then echo "The -img argument has not been specified."; fi
	if [ ! -z "$swap_size" ] && [ $(( $image_size - $swap_size )) -lt 8 ]; then echo "At least 8 GB should be available for the main partition, please increase the image size or reduce the swap size."; exit 1; fi
	if [[ "$destination" == *"/"* ]] && ([ -z "$(realpath $destination 2> /dev/null)" ] || [ ! -d "$(echo $(realpath $destination) | sed 's![^/]*$!!')" ]); then echo "Desination path does not exist, please provide an existing path."; exit 1; fi
	rm -rf "$destination"
	if [[ ! "$destination" == *"/"* ]]; then path="$PWD"; else path="$(echo $(realpath $destination) | sed 's![^/]*$!!')"; fi
	fullpath="$path$(basename $destination)"
	if [ ! -z "$wsl" ] && [ ! -z "${path##/mnt/*}" ]; then echo "The $distro disk image has to be installed outside of the WSL VM, please specify a path such as /mnt/<drive letter>/..."; exit 1; fi
	if [ ! -z "$chromeos" ] || [ ! -z "$brunch" ] && [ ! -z "${path##/mnt/stateful_partition/unencrypted/*}" ]; then echo "The $distro disk image has to be installed in the unencrypted data partition, please specify a path such as /mnt/stateful_partition/unencrypted/..."; exit 1; fi
	if [ $(( ($(df -k --output=avail "$path" | sed 1d) / 1024 / 1024) - $image_size )) -lt 0 ]; then echo "Not enough space to create image file, available space is $(( ($(df -k --output=avail $path | sed 1d) / 1024 / 1024) )) GB. If you think that this is incorrect, verify that you have correctly mounted the destination partition or if the partition is in ext4 format that there is no reserved space (cf. https://odzangba.wordpress.com/2010/02/20/how-to-free-reserved-space-on-ext4-partitions)"; exit 1; fi
	if [ "$surface" == "Yes" ] && [ -z "$(echo $surface_supported | grep -w $distro)" ]; then echo "Surface patches are not available for this distro, supported distros are: $surface_supported."; exit 1; fi
fi
set_credentials
if [ ! -z "$zenity" ]; then
	install_image >(zenity --height=480 --width=640 --title="LinuxLoops installer" --progress --auto-close --pulsate --text="Installing $distro with $desktop desktop.\nYou can follow the install process in the terminal window." --percentage=100)
else
	install_image
fi
grub_config
}

if [ $# -eq 0 ]; then
	if ! which zenity > /dev/null 2>&1 ; then echo "To use the GUI installer you need a Linux environment with GUI apps support (actual Linux distro or Windows 11 WSL) and to install the \"zenity\" package."; usage; exit 1; fi
	zenity=1
	if ! zenity --height=480 --width=640 --title="LinuxLoops installer" --info --text="Welcome to the LinuxLoops installer." --ok-label="Next"; then exit 0; fi
	distro=$(zenity --height=480 --width=640 --list --text "Which Linux distribution do you want to install ?" --column "Distribution" $available_distros)
	if [ -z "$distro" ]; then exit 0; fi
	list_desktops $distro
	desktop=$(zenity --height=480 --width=640 --list --text "Which desktop environment do you want to install ?"  --column "Desktop environment" $available_desktops)
	if [ -z "$desktop" ]; then exit 0; fi
else
	while [ $# -gt 0 ]; do
		case "$1" in
			-dist | --distribution)
			shift
			distro="$1"
			;;
			-env | --environment)
			shift
			desktop="$1"
			;;
			-img | --imagepath)
			shift
			if [ -z "${1##/dev/*}" ]; then echo "linuxloops images can only be installed on mounted filesystems."; exit 1; fi
			destination="$1"
			;;
			-s | --size)
			shift
			if [ -z "${1##*[!0-9]*}" ] ; then
				echo "Provided disk image size is not numeric: $1"
				exit 1
			else
				if [ $1 -lt 10 ] ; then
					echo "Disk image size cannot be lower than 10 GB"
					exit 1
				fi
			fi
			image_size=$1
			;;
			-z | --swapsize)
			shift
			if [ -z "${1##*[!0-9]*}" ] ; then
				echo "Provided swap size is not numeric: $1"
				exit 1
			fi
			swap_size=$1
			;;
			-e | --encrypt)
			if [ -z $(which cryptsetup) ]; then echo "\"cryptsetup\" program needs to be installed for encryption support."; exit 1; fi
			encryption="Yes"
			;;
			-S | --surface)
			surface="Yes"
			;;
			-l | --list)
			list_all
			exit 0
			;;
			-h | --help)
			usage
			exit 0
			;;
			*)
			echo "$1 argument is not valid"
			usage
			exit 1
		esac
		shift
	done
	check_parameters
	
	if [ -z "$image_size" ]; then image_size=10; fi
fi
create_image
